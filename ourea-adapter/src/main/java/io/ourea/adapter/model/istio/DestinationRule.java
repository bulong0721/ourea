// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: destination_rule.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * DestinationRule defines policies that apply to traffic intended for a service
 * after routing has occurred.
 * &lt;!-- crd generation tags
 * +cue-gen:DestinationRule:groupName:networking.istio.io
 * +cue-gen:DestinationRule:version:v1alpha3
 * +cue-gen:DestinationRule:storageVersion
 * +cue-gen:DestinationRule:annotations:helm.sh/resource-policy=keep
 * +cue-gen:DestinationRule:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
 * +cue-gen:DestinationRule:subresource:status
 * +cue-gen:DestinationRule:scope:Namespaced
 * +cue-gen:DestinationRule:resource:categories=istio-io,networking-istio-io,shortNames=dr
 * +cue-gen:DestinationRule:printerColumn:name=Host,type=string,JSONPath=.spec.host,description="The name of a service from the service registry"
 * +cue-gen:DestinationRule:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp 
 * representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. 
 * Clients may not set this value. It is represented in RFC3339 form and is in UTC.
 * Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
 * --&gt;
 * &lt;!-- go code generation tags
 * +kubetype-gen
 * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
 * +genclient
 * +k8s:deepcopy-gen=true
 * --&gt;
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.DestinationRule}
 */
public final class DestinationRule extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.DestinationRule)
    DestinationRuleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DestinationRule.newBuilder() to construct.
  private DestinationRule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DestinationRule() {
    host_ = "";
    subsets_ = java.util.Collections.emptyList();
    exportTo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DestinationRule();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DestinationRule(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            host_ = s;
            break;
          }
          case 18: {
            io.ourea.adapter.model.istio.TrafficPolicy.Builder subBuilder = null;
            if (trafficPolicy_ != null) {
              subBuilder = trafficPolicy_.toBuilder();
            }
            trafficPolicy_ = input.readMessage(io.ourea.adapter.model.istio.TrafficPolicy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(trafficPolicy_);
              trafficPolicy_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              subsets_ = new java.util.ArrayList<io.ourea.adapter.model.istio.Subset>();
              mutable_bitField0_ |= 0x00000001;
            }
            subsets_.add(
                input.readMessage(io.ourea.adapter.model.istio.Subset.parser(), extensionRegistry));
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              exportTo_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            exportTo_.add(s);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        subsets_ = java.util.Collections.unmodifiableList(subsets_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        exportTo_ = exportTo_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.DestinationRule.class, io.ourea.adapter.model.istio.DestinationRule.Builder.class);
  }

  public static final int HOST_FIELD_NUMBER = 1;
  private volatile java.lang.Object host_;
  /**
   * <pre>
   * The name of a service from the service registry. Service
   * names are looked up from the platform's service registry (e.g.,
   * Kubernetes services, Consul services, etc.) and from the hosts
   * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
   * services that do not exist in the service registry will be ignored.
   * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
   * instead of "reviews.default.svc.cluster.local"), Istio will interpret
   * the short name based on the namespace of the rule, not the service. A
   * rule in the "default" namespace containing a host "reviews" will be
   * interpreted as "reviews.default.svc.cluster.local", irrespective of
   * the actual namespace associated with the reviews service. _To avoid
   * potential misconfigurations, it is recommended to always use fully
   * qualified domain names over short names._
   * Note that the host field applies to both HTTP and TCP services.
   * </pre>
   *
   * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The host.
   */
  @java.lang.Override
  public java.lang.String getHost() {
    java.lang.Object ref = host_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      host_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of a service from the service registry. Service
   * names are looked up from the platform's service registry (e.g.,
   * Kubernetes services, Consul services, etc.) and from the hosts
   * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
   * services that do not exist in the service registry will be ignored.
   * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
   * instead of "reviews.default.svc.cluster.local"), Istio will interpret
   * the short name based on the namespace of the rule, not the service. A
   * rule in the "default" namespace containing a host "reviews" will be
   * interpreted as "reviews.default.svc.cluster.local", irrespective of
   * the actual namespace associated with the reviews service. _To avoid
   * potential misconfigurations, it is recommended to always use fully
   * qualified domain names over short names._
   * Note that the host field applies to both HTTP and TCP services.
   * </pre>
   *
   * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for host.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHostBytes() {
    java.lang.Object ref = host_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      host_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRAFFIC_POLICY_FIELD_NUMBER = 2;
  private io.ourea.adapter.model.istio.TrafficPolicy trafficPolicy_;
  /**
   * <pre>
   * Traffic policies to apply (load balancing policy, connection pool
   * sizes, outlier detection).
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
   * @return Whether the trafficPolicy field is set.
   */
  @java.lang.Override
  public boolean hasTrafficPolicy() {
    return trafficPolicy_ != null;
  }
  /**
   * <pre>
   * Traffic policies to apply (load balancing policy, connection pool
   * sizes, outlier detection).
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
   * @return The trafficPolicy.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.TrafficPolicy getTrafficPolicy() {
    return trafficPolicy_ == null ? io.ourea.adapter.model.istio.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
  }
  /**
   * <pre>
   * Traffic policies to apply (load balancing policy, connection pool
   * sizes, outlier detection).
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder() {
    return getTrafficPolicy();
  }

  public static final int SUBSETS_FIELD_NUMBER = 3;
  private java.util.List<io.ourea.adapter.model.istio.Subset> subsets_;
  /**
   * <pre>
   * One or more named sets that represent individual versions of a
   * service. Traffic policies can be overridden at subset level.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
   */
  @java.lang.Override
  public java.util.List<io.ourea.adapter.model.istio.Subset> getSubsetsList() {
    return subsets_;
  }
  /**
   * <pre>
   * One or more named sets that represent individual versions of a
   * service. Traffic policies can be overridden at subset level.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.ourea.adapter.model.istio.SubsetOrBuilder> 
      getSubsetsOrBuilderList() {
    return subsets_;
  }
  /**
   * <pre>
   * One or more named sets that represent individual versions of a
   * service. Traffic policies can be overridden at subset level.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
   */
  @java.lang.Override
  public int getSubsetsCount() {
    return subsets_.size();
  }
  /**
   * <pre>
   * One or more named sets that represent individual versions of a
   * service. Traffic policies can be overridden at subset level.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.Subset getSubsets(int index) {
    return subsets_.get(index);
  }
  /**
   * <pre>
   * One or more named sets that represent individual versions of a
   * service. Traffic policies can be overridden at subset level.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.SubsetOrBuilder getSubsetsOrBuilder(
      int index) {
    return subsets_.get(index);
  }

  public static final int EXPORT_TO_FIELD_NUMBER = 4;
  private com.google.protobuf.LazyStringList exportTo_;
  /**
   * <pre>
   * A list of namespaces to which this destination rule is exported.
   * The resolution of a destination rule to apply to a service occurs in the
   * context of a hierarchy of namespaces. Exporting a destination rule allows
   * it to be included in the resolution hierarchy for services in
   * other namespaces. This feature provides a mechanism for service owners
   * and mesh administrators to control the visibility of destination rules
   * across namespace boundaries.
   * If no namespaces are specified then the destination rule is exported to all
   * namespaces by default.
   * The value "." is reserved and defines an export to the same namespace that
   * the destination rule is declared in. Similarly, the value "*" is reserved and
   * defines an export to all namespaces.
   * NOTE: in the current release, the `exportTo` value is restricted to
   * "." or "*" (i.e., the current namespace or all namespaces).
   * </pre>
   *
   * <code>repeated string export_to = 4;</code>
   * @return A list containing the exportTo.
   */
  public com.google.protobuf.ProtocolStringList
      getExportToList() {
    return exportTo_;
  }
  /**
   * <pre>
   * A list of namespaces to which this destination rule is exported.
   * The resolution of a destination rule to apply to a service occurs in the
   * context of a hierarchy of namespaces. Exporting a destination rule allows
   * it to be included in the resolution hierarchy for services in
   * other namespaces. This feature provides a mechanism for service owners
   * and mesh administrators to control the visibility of destination rules
   * across namespace boundaries.
   * If no namespaces are specified then the destination rule is exported to all
   * namespaces by default.
   * The value "." is reserved and defines an export to the same namespace that
   * the destination rule is declared in. Similarly, the value "*" is reserved and
   * defines an export to all namespaces.
   * NOTE: in the current release, the `exportTo` value is restricted to
   * "." or "*" (i.e., the current namespace or all namespaces).
   * </pre>
   *
   * <code>repeated string export_to = 4;</code>
   * @return The count of exportTo.
   */
  public int getExportToCount() {
    return exportTo_.size();
  }
  /**
   * <pre>
   * A list of namespaces to which this destination rule is exported.
   * The resolution of a destination rule to apply to a service occurs in the
   * context of a hierarchy of namespaces. Exporting a destination rule allows
   * it to be included in the resolution hierarchy for services in
   * other namespaces. This feature provides a mechanism for service owners
   * and mesh administrators to control the visibility of destination rules
   * across namespace boundaries.
   * If no namespaces are specified then the destination rule is exported to all
   * namespaces by default.
   * The value "." is reserved and defines an export to the same namespace that
   * the destination rule is declared in. Similarly, the value "*" is reserved and
   * defines an export to all namespaces.
   * NOTE: in the current release, the `exportTo` value is restricted to
   * "." or "*" (i.e., the current namespace or all namespaces).
   * </pre>
   *
   * <code>repeated string export_to = 4;</code>
   * @param index The index of the element to return.
   * @return The exportTo at the given index.
   */
  public java.lang.String getExportTo(int index) {
    return exportTo_.get(index);
  }
  /**
   * <pre>
   * A list of namespaces to which this destination rule is exported.
   * The resolution of a destination rule to apply to a service occurs in the
   * context of a hierarchy of namespaces. Exporting a destination rule allows
   * it to be included in the resolution hierarchy for services in
   * other namespaces. This feature provides a mechanism for service owners
   * and mesh administrators to control the visibility of destination rules
   * across namespace boundaries.
   * If no namespaces are specified then the destination rule is exported to all
   * namespaces by default.
   * The value "." is reserved and defines an export to the same namespace that
   * the destination rule is declared in. Similarly, the value "*" is reserved and
   * defines an export to all namespaces.
   * NOTE: in the current release, the `exportTo` value is restricted to
   * "." or "*" (i.e., the current namespace or all namespaces).
   * </pre>
   *
   * <code>repeated string export_to = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the exportTo at the given index.
   */
  public com.google.protobuf.ByteString
      getExportToBytes(int index) {
    return exportTo_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getHostBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, host_);
    }
    if (trafficPolicy_ != null) {
      output.writeMessage(2, getTrafficPolicy());
    }
    for (int i = 0; i < subsets_.size(); i++) {
      output.writeMessage(3, subsets_.get(i));
    }
    for (int i = 0; i < exportTo_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, exportTo_.getRaw(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getHostBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, host_);
    }
    if (trafficPolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTrafficPolicy());
    }
    for (int i = 0; i < subsets_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, subsets_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < exportTo_.size(); i++) {
        dataSize += computeStringSizeNoTag(exportTo_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getExportToList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.DestinationRule)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.DestinationRule other = (io.ourea.adapter.model.istio.DestinationRule) obj;

    if (!getHost()
        .equals(other.getHost())) return false;
    if (hasTrafficPolicy() != other.hasTrafficPolicy()) return false;
    if (hasTrafficPolicy()) {
      if (!getTrafficPolicy()
          .equals(other.getTrafficPolicy())) return false;
    }
    if (!getSubsetsList()
        .equals(other.getSubsetsList())) return false;
    if (!getExportToList()
        .equals(other.getExportToList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HOST_FIELD_NUMBER;
    hash = (53 * hash) + getHost().hashCode();
    if (hasTrafficPolicy()) {
      hash = (37 * hash) + TRAFFIC_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getTrafficPolicy().hashCode();
    }
    if (getSubsetsCount() > 0) {
      hash = (37 * hash) + SUBSETS_FIELD_NUMBER;
      hash = (53 * hash) + getSubsetsList().hashCode();
    }
    if (getExportToCount() > 0) {
      hash = (37 * hash) + EXPORT_TO_FIELD_NUMBER;
      hash = (53 * hash) + getExportToList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.DestinationRule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.DestinationRule prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DestinationRule defines policies that apply to traffic intended for a service
   * after routing has occurred.
   * &lt;!-- crd generation tags
   * +cue-gen:DestinationRule:groupName:networking.istio.io
   * +cue-gen:DestinationRule:version:v1alpha3
   * +cue-gen:DestinationRule:storageVersion
   * +cue-gen:DestinationRule:annotations:helm.sh/resource-policy=keep
   * +cue-gen:DestinationRule:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
   * +cue-gen:DestinationRule:subresource:status
   * +cue-gen:DestinationRule:scope:Namespaced
   * +cue-gen:DestinationRule:resource:categories=istio-io,networking-istio-io,shortNames=dr
   * +cue-gen:DestinationRule:printerColumn:name=Host,type=string,JSONPath=.spec.host,description="The name of a service from the service registry"
   * +cue-gen:DestinationRule:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp 
   * representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. 
   * Clients may not set this value. It is represented in RFC3339 form and is in UTC.
   * Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
   * --&gt;
   * &lt;!-- go code generation tags
   * +kubetype-gen
   * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
   * +genclient
   * +k8s:deepcopy-gen=true
   * --&gt;
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.DestinationRule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.DestinationRule)
      io.ourea.adapter.model.istio.DestinationRuleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.DestinationRule.class, io.ourea.adapter.model.istio.DestinationRule.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.DestinationRule.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSubsetsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      host_ = "";

      if (trafficPolicyBuilder_ == null) {
        trafficPolicy_ = null;
      } else {
        trafficPolicy_ = null;
        trafficPolicyBuilder_ = null;
      }
      if (subsetsBuilder_ == null) {
        subsets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        subsetsBuilder_.clear();
      }
      exportTo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_DestinationRule_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.DestinationRule getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.DestinationRule.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.DestinationRule build() {
      io.ourea.adapter.model.istio.DestinationRule result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.DestinationRule buildPartial() {
      io.ourea.adapter.model.istio.DestinationRule result = new io.ourea.adapter.model.istio.DestinationRule(this);
      int from_bitField0_ = bitField0_;
      result.host_ = host_;
      if (trafficPolicyBuilder_ == null) {
        result.trafficPolicy_ = trafficPolicy_;
      } else {
        result.trafficPolicy_ = trafficPolicyBuilder_.build();
      }
      if (subsetsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          subsets_ = java.util.Collections.unmodifiableList(subsets_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.subsets_ = subsets_;
      } else {
        result.subsets_ = subsetsBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        exportTo_ = exportTo_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.exportTo_ = exportTo_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.DestinationRule) {
        return mergeFrom((io.ourea.adapter.model.istio.DestinationRule)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.DestinationRule other) {
      if (other == io.ourea.adapter.model.istio.DestinationRule.getDefaultInstance()) return this;
      if (!other.getHost().isEmpty()) {
        host_ = other.host_;
        onChanged();
      }
      if (other.hasTrafficPolicy()) {
        mergeTrafficPolicy(other.getTrafficPolicy());
      }
      if (subsetsBuilder_ == null) {
        if (!other.subsets_.isEmpty()) {
          if (subsets_.isEmpty()) {
            subsets_ = other.subsets_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSubsetsIsMutable();
            subsets_.addAll(other.subsets_);
          }
          onChanged();
        }
      } else {
        if (!other.subsets_.isEmpty()) {
          if (subsetsBuilder_.isEmpty()) {
            subsetsBuilder_.dispose();
            subsetsBuilder_ = null;
            subsets_ = other.subsets_;
            bitField0_ = (bitField0_ & ~0x00000001);
            subsetsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSubsetsFieldBuilder() : null;
          } else {
            subsetsBuilder_.addAllMessages(other.subsets_);
          }
        }
      }
      if (!other.exportTo_.isEmpty()) {
        if (exportTo_.isEmpty()) {
          exportTo_ = other.exportTo_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureExportToIsMutable();
          exportTo_.addAll(other.exportTo_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.DestinationRule parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.DestinationRule) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object host_ = "";
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
     * services that do not exist in the service registry will be ignored.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews" will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. _To avoid
     * potential misconfigurations, it is recommended to always use fully
     * qualified domain names over short names._
     * Note that the host field applies to both HTTP and TCP services.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The host.
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        host_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
     * services that do not exist in the service registry will be ignored.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews" will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. _To avoid
     * potential misconfigurations, it is recommended to always use fully
     * qualified domain names over short names._
     * Note that the host field applies to both HTTP and TCP services.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for host.
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
     * services that do not exist in the service registry will be ignored.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews" will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. _To avoid
     * potential misconfigurations, it is recommended to always use fully
     * qualified domain names over short names._
     * Note that the host field applies to both HTTP and TCP services.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The host to set.
     * @return This builder for chaining.
     */
    public Builder setHost(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      host_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
     * services that do not exist in the service registry will be ignored.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews" will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. _To avoid
     * potential misconfigurations, it is recommended to always use fully
     * qualified domain names over short names._
     * Note that the host field applies to both HTTP and TCP services.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearHost() {
      
      host_ = getDefaultInstance().getHost();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for
     * services that do not exist in the service registry will be ignored.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews" will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. _To avoid
     * potential misconfigurations, it is recommended to always use fully
     * qualified domain names over short names._
     * Note that the host field applies to both HTTP and TCP services.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for host to set.
     * @return This builder for chaining.
     */
    public Builder setHostBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      host_ = value;
      onChanged();
      return this;
    }

    private io.ourea.adapter.model.istio.TrafficPolicy trafficPolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.TrafficPolicy, io.ourea.adapter.model.istio.TrafficPolicy.Builder, io.ourea.adapter.model.istio.TrafficPolicyOrBuilder> trafficPolicyBuilder_;
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     * @return Whether the trafficPolicy field is set.
     */
    public boolean hasTrafficPolicy() {
      return trafficPolicyBuilder_ != null || trafficPolicy_ != null;
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     * @return The trafficPolicy.
     */
    public io.ourea.adapter.model.istio.TrafficPolicy getTrafficPolicy() {
      if (trafficPolicyBuilder_ == null) {
        return trafficPolicy_ == null ? io.ourea.adapter.model.istio.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
      } else {
        return trafficPolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     */
    public Builder setTrafficPolicy(io.ourea.adapter.model.istio.TrafficPolicy value) {
      if (trafficPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        trafficPolicy_ = value;
        onChanged();
      } else {
        trafficPolicyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     */
    public Builder setTrafficPolicy(
        io.ourea.adapter.model.istio.TrafficPolicy.Builder builderForValue) {
      if (trafficPolicyBuilder_ == null) {
        trafficPolicy_ = builderForValue.build();
        onChanged();
      } else {
        trafficPolicyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     */
    public Builder mergeTrafficPolicy(io.ourea.adapter.model.istio.TrafficPolicy value) {
      if (trafficPolicyBuilder_ == null) {
        if (trafficPolicy_ != null) {
          trafficPolicy_ =
            io.ourea.adapter.model.istio.TrafficPolicy.newBuilder(trafficPolicy_).mergeFrom(value).buildPartial();
        } else {
          trafficPolicy_ = value;
        }
        onChanged();
      } else {
        trafficPolicyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     */
    public Builder clearTrafficPolicy() {
      if (trafficPolicyBuilder_ == null) {
        trafficPolicy_ = null;
        onChanged();
      } else {
        trafficPolicy_ = null;
        trafficPolicyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     */
    public io.ourea.adapter.model.istio.TrafficPolicy.Builder getTrafficPolicyBuilder() {
      
      onChanged();
      return getTrafficPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     */
    public io.ourea.adapter.model.istio.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder() {
      if (trafficPolicyBuilder_ != null) {
        return trafficPolicyBuilder_.getMessageOrBuilder();
      } else {
        return trafficPolicy_ == null ?
            io.ourea.adapter.model.istio.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
      }
    }
    /**
     * <pre>
     * Traffic policies to apply (load balancing policy, connection pool
     * sizes, outlier detection).
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.TrafficPolicy, io.ourea.adapter.model.istio.TrafficPolicy.Builder, io.ourea.adapter.model.istio.TrafficPolicyOrBuilder> 
        getTrafficPolicyFieldBuilder() {
      if (trafficPolicyBuilder_ == null) {
        trafficPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.TrafficPolicy, io.ourea.adapter.model.istio.TrafficPolicy.Builder, io.ourea.adapter.model.istio.TrafficPolicyOrBuilder>(
                getTrafficPolicy(),
                getParentForChildren(),
                isClean());
        trafficPolicy_ = null;
      }
      return trafficPolicyBuilder_;
    }

    private java.util.List<io.ourea.adapter.model.istio.Subset> subsets_ =
      java.util.Collections.emptyList();
    private void ensureSubsetsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        subsets_ = new java.util.ArrayList<io.ourea.adapter.model.istio.Subset>(subsets_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.Subset, io.ourea.adapter.model.istio.Subset.Builder, io.ourea.adapter.model.istio.SubsetOrBuilder> subsetsBuilder_;

    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.Subset> getSubsetsList() {
      if (subsetsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(subsets_);
      } else {
        return subsetsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public int getSubsetsCount() {
      if (subsetsBuilder_ == null) {
        return subsets_.size();
      } else {
        return subsetsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public io.ourea.adapter.model.istio.Subset getSubsets(int index) {
      if (subsetsBuilder_ == null) {
        return subsets_.get(index);
      } else {
        return subsetsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public Builder setSubsets(
        int index, io.ourea.adapter.model.istio.Subset value) {
      if (subsetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubsetsIsMutable();
        subsets_.set(index, value);
        onChanged();
      } else {
        subsetsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public Builder setSubsets(
        int index, io.ourea.adapter.model.istio.Subset.Builder builderForValue) {
      if (subsetsBuilder_ == null) {
        ensureSubsetsIsMutable();
        subsets_.set(index, builderForValue.build());
        onChanged();
      } else {
        subsetsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public Builder addSubsets(io.ourea.adapter.model.istio.Subset value) {
      if (subsetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubsetsIsMutable();
        subsets_.add(value);
        onChanged();
      } else {
        subsetsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public Builder addSubsets(
        int index, io.ourea.adapter.model.istio.Subset value) {
      if (subsetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubsetsIsMutable();
        subsets_.add(index, value);
        onChanged();
      } else {
        subsetsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public Builder addSubsets(
        io.ourea.adapter.model.istio.Subset.Builder builderForValue) {
      if (subsetsBuilder_ == null) {
        ensureSubsetsIsMutable();
        subsets_.add(builderForValue.build());
        onChanged();
      } else {
        subsetsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public Builder addSubsets(
        int index, io.ourea.adapter.model.istio.Subset.Builder builderForValue) {
      if (subsetsBuilder_ == null) {
        ensureSubsetsIsMutable();
        subsets_.add(index, builderForValue.build());
        onChanged();
      } else {
        subsetsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public Builder addAllSubsets(
        java.lang.Iterable<? extends io.ourea.adapter.model.istio.Subset> values) {
      if (subsetsBuilder_ == null) {
        ensureSubsetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, subsets_);
        onChanged();
      } else {
        subsetsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public Builder clearSubsets() {
      if (subsetsBuilder_ == null) {
        subsets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        subsetsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public Builder removeSubsets(int index) {
      if (subsetsBuilder_ == null) {
        ensureSubsetsIsMutable();
        subsets_.remove(index);
        onChanged();
      } else {
        subsetsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public io.ourea.adapter.model.istio.Subset.Builder getSubsetsBuilder(
        int index) {
      return getSubsetsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public io.ourea.adapter.model.istio.SubsetOrBuilder getSubsetsOrBuilder(
        int index) {
      if (subsetsBuilder_ == null) {
        return subsets_.get(index);  } else {
        return subsetsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public java.util.List<? extends io.ourea.adapter.model.istio.SubsetOrBuilder> 
         getSubsetsOrBuilderList() {
      if (subsetsBuilder_ != null) {
        return subsetsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(subsets_);
      }
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public io.ourea.adapter.model.istio.Subset.Builder addSubsetsBuilder() {
      return getSubsetsFieldBuilder().addBuilder(
          io.ourea.adapter.model.istio.Subset.getDefaultInstance());
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public io.ourea.adapter.model.istio.Subset.Builder addSubsetsBuilder(
        int index) {
      return getSubsetsFieldBuilder().addBuilder(
          index, io.ourea.adapter.model.istio.Subset.getDefaultInstance());
    }
    /**
     * <pre>
     * One or more named sets that represent individual versions of a
     * service. Traffic policies can be overridden at subset level.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.Subset subsets = 3;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.Subset.Builder> 
         getSubsetsBuilderList() {
      return getSubsetsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.Subset, io.ourea.adapter.model.istio.Subset.Builder, io.ourea.adapter.model.istio.SubsetOrBuilder> 
        getSubsetsFieldBuilder() {
      if (subsetsBuilder_ == null) {
        subsetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.ourea.adapter.model.istio.Subset, io.ourea.adapter.model.istio.Subset.Builder, io.ourea.adapter.model.istio.SubsetOrBuilder>(
                subsets_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        subsets_ = null;
      }
      return subsetsBuilder_;
    }

    private com.google.protobuf.LazyStringList exportTo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureExportToIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        exportTo_ = new com.google.protobuf.LazyStringArrayList(exportTo_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @return A list containing the exportTo.
     */
    public com.google.protobuf.ProtocolStringList
        getExportToList() {
      return exportTo_.getUnmodifiableView();
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @return The count of exportTo.
     */
    public int getExportToCount() {
      return exportTo_.size();
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param index The index of the element to return.
     * @return The exportTo at the given index.
     */
    public java.lang.String getExportTo(int index) {
      return exportTo_.get(index);
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the exportTo at the given index.
     */
    public com.google.protobuf.ByteString
        getExportToBytes(int index) {
      return exportTo_.getByteString(index);
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param index The index to set the value at.
     * @param value The exportTo to set.
     * @return This builder for chaining.
     */
    public Builder setExportTo(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureExportToIsMutable();
      exportTo_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param value The exportTo to add.
     * @return This builder for chaining.
     */
    public Builder addExportTo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureExportToIsMutable();
      exportTo_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param values The exportTo to add.
     * @return This builder for chaining.
     */
    public Builder addAllExportTo(
        java.lang.Iterable<java.lang.String> values) {
      ensureExportToIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, exportTo_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearExportTo() {
      exportTo_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A list of namespaces to which this destination rule is exported.
     * The resolution of a destination rule to apply to a service occurs in the
     * context of a hierarchy of namespaces. Exporting a destination rule allows
     * it to be included in the resolution hierarchy for services in
     * other namespaces. This feature provides a mechanism for service owners
     * and mesh administrators to control the visibility of destination rules
     * across namespace boundaries.
     * If no namespaces are specified then the destination rule is exported to all
     * namespaces by default.
     * The value "." is reserved and defines an export to the same namespace that
     * the destination rule is declared in. Similarly, the value "*" is reserved and
     * defines an export to all namespaces.
     * NOTE: in the current release, the `exportTo` value is restricted to
     * "." or "*" (i.e., the current namespace or all namespaces).
     * </pre>
     *
     * <code>repeated string export_to = 4;</code>
     * @param value The bytes of the exportTo to add.
     * @return This builder for chaining.
     */
    public Builder addExportToBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureExportToIsMutable();
      exportTo_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.DestinationRule)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.DestinationRule)
  private static final io.ourea.adapter.model.istio.DestinationRule DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.DestinationRule();
  }

  public static io.ourea.adapter.model.istio.DestinationRule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DestinationRule>
      PARSER = new com.google.protobuf.AbstractParser<DestinationRule>() {
    @java.lang.Override
    public DestinationRule parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DestinationRule(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DestinationRule> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DestinationRule> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.DestinationRule getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

