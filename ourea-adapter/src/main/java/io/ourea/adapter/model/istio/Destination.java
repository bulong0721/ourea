// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: virtual_service.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * Destination indicates the network addressable service to which the
 * request/connection will be sent after processing a routing rule. The
 * destination.host should unambiguously refer to a service in the service
 * registry. Istio's service registry is composed of all the services found
 * in the platform's service registry (e.g., Kubernetes services, Consul
 * services), as well as services declared through the
 * [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry) resource.
 * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
 * instead of "reviews.default.svc.cluster.local"), Istio will interpret
 * the short name based on the namespace of the rule, not the service. A
 * rule in the "default" namespace containing a host "reviews will be
 * interpreted as "reviews.default.svc.cluster.local", irrespective of the
 * actual namespace associated with the reviews service. _To avoid potential
 * misconfigurations, it is recommended to always use fully qualified
 * domain names over short names._
 * The following Kubernetes example routes all traffic by default to pods
 * of the reviews service with label "version: v1" (i.e., subset v1), and
 * some to subset v2, in a Kubernetes environment.
 * {{&lt;tabset category-name="example"&gt;}}
 * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1alpha3
 * kind: VirtualService
 * metadata:
 *   name: reviews-route
 *   namespace: foo
 * spec:
 *   hosts:
 *   - reviews # interpreted as reviews.foo.svc.cluster.local
 *   http:
 *   - match:
 *     - uri:
 *         prefix: "/wpcatalog"
 *     - uri:
 *         prefix: "/consumercatalog"
 *     rewrite:
 *       uri: "/newcatalog"
 *     route:
 *     - destination:
 *         host: reviews # interpreted as reviews.foo.svc.cluster.local
 *         subset: v2
 *   - route:
 *     - destination:
 *         host: reviews # interpreted as reviews.foo.svc.cluster.local
 *         subset: v1
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1beta1
 * kind: VirtualService
 * metadata:
 *   name: reviews-route
 *   namespace: foo
 * spec:
 *   hosts:
 *   - reviews # interpreted as reviews.foo.svc.cluster.local
 *   http:
 *   - match:
 *     - uri:
 *         prefix: "/wpcatalog"
 *     - uri:
 *         prefix: "/consumercatalog"
 *     rewrite:
 *       uri: "/newcatalog"
 *     route:
 *     - destination:
 *         host: reviews # interpreted as reviews.foo.svc.cluster.local
 *         subset: v2
 *   - route:
 *     - destination:
 *         host: reviews # interpreted as reviews.foo.svc.cluster.local
 *         subset: v1
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;/tabset&gt;}}
 * And the associated DestinationRule
 * {{&lt;tabset category-name="example"&gt;}}
 * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1alpha3
 * kind: DestinationRule
 * metadata:
 *   name: reviews-destination
 *   namespace: foo
 * spec:
 *   host: reviews # interpreted as reviews.foo.svc.cluster.local
 *   subsets:
 *   - name: v1
 *     labels:
 *       version: v1
 *   - name: v2
 *     labels:
 *       version: v2
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1beta1
 * kind: DestinationRule
 * metadata:
 *   name: reviews-destination
 *   namespace: foo
 * spec:
 *   host: reviews # interpreted as reviews.foo.svc.cluster.local
 *   subsets:
 *   - name: v1
 *     labels:
 *       version: v1
 *   - name: v2
 *     labels:
 *       version: v2
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;/tabset&gt;}}
 * The following VirtualService sets a timeout of 5s for all calls to
 * productpage.prod.svc.cluster.local service in Kubernetes. Notice that
 * there are no subsets defined in this rule. Istio will fetch all
 * instances of productpage.prod.svc.cluster.local service from the service
 * registry and populate the sidecar's load balancing pool. Also, notice
 * that this rule is set in the istio-system namespace but uses the fully
 * qualified domain name of the productpage service,
 * productpage.prod.svc.cluster.local. Therefore the rule's namespace does
 * not have an impact in resolving the name of the productpage service.
 * {{&lt;tabset category-name="example"&gt;}}
 * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1alpha3
 * kind: VirtualService
 * metadata:
 *   name: my-productpage-rule
 *   namespace: istio-system
 * spec:
 *   hosts:
 *   - productpage.prod.svc.cluster.local # ignores rule namespace
 *   http:
 *   - timeout: 5s
 *     route:
 *     - destination:
 *         host: productpage.prod.svc.cluster.local
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1beta1
 * kind: VirtualService
 * metadata:
 *   name: my-productpage-rule
 *   namespace: istio-system
 * spec:
 *   hosts:
 *   - productpage.prod.svc.cluster.local # ignores rule namespace
 *   http:
 *   - timeout: 5s
 *     route:
 *     - destination:
 *         host: productpage.prod.svc.cluster.local
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;/tabset&gt;}}
 * To control routing for traffic bound to services outside the mesh, external
 * services must first be added to Istio's internal service registry using the
 * ServiceEntry resource. VirtualServices can then be defined to control traffic
 * bound to these external services. For example, the following rules define a
 * Service for wikipedia.org and set a timeout of 5s for HTTP requests.
 * {{&lt;tabset category-name="example"&gt;}}
 * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1alpha3
 * kind: ServiceEntry
 * metadata:
 *   name: external-svc-wikipedia
 * spec:
 *   hosts:
 *   - wikipedia.org
 *   location: MESH_EXTERNAL
 *   ports:
 *   - number: 80
 *     name: example-http
 *     protocol: HTTP
 *   resolution: DNS
 * apiVersion: networking.istio.io/v1alpha3
 * kind: VirtualService
 * metadata:
 *   name: my-wiki-rule
 * spec:
 *   hosts:
 *   - wikipedia.org
 *   http:
 *   - timeout: 5s
 *     route:
 *     - destination:
 *         host: wikipedia.org
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1beta1
 * kind: ServiceEntry
 * metadata:
 *   name: external-svc-wikipedia
 * spec:
 *   hosts:
 *   - wikipedia.org
 *   location: MESH_EXTERNAL
 *   ports:
 *   - number: 80
 *     name: example-http
 *     protocol: HTTP
 *   resolution: DNS
 * apiVersion: networking.istio.io/v1alpha3
 * kind: VirtualService
 * metadata:
 *   name: my-wiki-rule
 * spec:
 *   hosts:
 *   - wikipedia.org
 *   http:
 *   - timeout: 5s
 *     route:
 *     - destination:
 *         host: wikipedia.org
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;/tabset&gt;}}
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.Destination}
 */
public final class Destination extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.Destination)
    DestinationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Destination.newBuilder() to construct.
  private Destination(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Destination() {
    host_ = "";
    subset_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Destination();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Destination(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            host_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            subset_ = s;
            break;
          }
          case 26: {
            io.ourea.adapter.model.istio.PortSelector.Builder subBuilder = null;
            if (port_ != null) {
              subBuilder = port_.toBuilder();
            }
            port_ = input.readMessage(io.ourea.adapter.model.istio.PortSelector.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(port_);
              port_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_Destination_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_Destination_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.Destination.class, io.ourea.adapter.model.istio.Destination.Builder.class);
  }

  public static final int HOST_FIELD_NUMBER = 1;
  private volatile java.lang.Object host_;
  /**
   * <pre>
   * The name of a service from the service registry. Service
   * names are looked up from the platform's service registry (e.g.,
   * Kubernetes services, Consul services, etc.) and from the hosts
   * declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Traffic forwarded to
   * destinations that are not found in either of the two, will be dropped.
   * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
   * instead of "reviews.default.svc.cluster.local"), Istio will interpret
   * the short name based on the namespace of the rule, not the service. A
   * rule in the "default" namespace containing a host "reviews will be
   * interpreted as "reviews.default.svc.cluster.local", irrespective of
   * the actual namespace associated with the reviews service. To avoid
   * potential misconfiguration, it is recommended to always use fully
   * qualified domain names over short names.
   * </pre>
   *
   * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The host.
   */
  @java.lang.Override
  public java.lang.String getHost() {
    java.lang.Object ref = host_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      host_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of a service from the service registry. Service
   * names are looked up from the platform's service registry (e.g.,
   * Kubernetes services, Consul services, etc.) and from the hosts
   * declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Traffic forwarded to
   * destinations that are not found in either of the two, will be dropped.
   * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
   * instead of "reviews.default.svc.cluster.local"), Istio will interpret
   * the short name based on the namespace of the rule, not the service. A
   * rule in the "default" namespace containing a host "reviews will be
   * interpreted as "reviews.default.svc.cluster.local", irrespective of
   * the actual namespace associated with the reviews service. To avoid
   * potential misconfiguration, it is recommended to always use fully
   * qualified domain names over short names.
   * </pre>
   *
   * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for host.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHostBytes() {
    java.lang.Object ref = host_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      host_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SUBSET_FIELD_NUMBER = 2;
  private volatile java.lang.Object subset_;
  /**
   * <pre>
   * The name of a subset within the service. Applicable only to services
   * within the mesh. The subset must be defined in a corresponding
   * DestinationRule.
   * </pre>
   *
   * <code>string subset = 2;</code>
   * @return The subset.
   */
  @java.lang.Override
  public java.lang.String getSubset() {
    java.lang.Object ref = subset_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subset_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of a subset within the service. Applicable only to services
   * within the mesh. The subset must be defined in a corresponding
   * DestinationRule.
   * </pre>
   *
   * <code>string subset = 2;</code>
   * @return The bytes for subset.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSubsetBytes() {
    java.lang.Object ref = subset_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      subset_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PORT_FIELD_NUMBER = 3;
  private io.ourea.adapter.model.istio.PortSelector port_;
  /**
   * <pre>
   * Specifies the port on the host that is being addressed. If a service
   * exposes only a single port it is not required to explicitly select the
   * port.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
   * @return Whether the port field is set.
   */
  @java.lang.Override
  public boolean hasPort() {
    return port_ != null;
  }
  /**
   * <pre>
   * Specifies the port on the host that is being addressed. If a service
   * exposes only a single port it is not required to explicitly select the
   * port.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
   * @return The port.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.PortSelector getPort() {
    return port_ == null ? io.ourea.adapter.model.istio.PortSelector.getDefaultInstance() : port_;
  }
  /**
   * <pre>
   * Specifies the port on the host that is being addressed. If a service
   * exposes only a single port it is not required to explicitly select the
   * port.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.PortSelectorOrBuilder getPortOrBuilder() {
    return getPort();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getHostBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, host_);
    }
    if (!getSubsetBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, subset_);
    }
    if (port_ != null) {
      output.writeMessage(3, getPort());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getHostBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, host_);
    }
    if (!getSubsetBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, subset_);
    }
    if (port_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPort());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.Destination)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.Destination other = (io.ourea.adapter.model.istio.Destination) obj;

    if (!getHost()
        .equals(other.getHost())) return false;
    if (!getSubset()
        .equals(other.getSubset())) return false;
    if (hasPort() != other.hasPort()) return false;
    if (hasPort()) {
      if (!getPort()
          .equals(other.getPort())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HOST_FIELD_NUMBER;
    hash = (53 * hash) + getHost().hashCode();
    hash = (37 * hash) + SUBSET_FIELD_NUMBER;
    hash = (53 * hash) + getSubset().hashCode();
    if (hasPort()) {
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.Destination parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.Destination parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Destination parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.Destination parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Destination parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.Destination parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Destination parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.Destination parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Destination parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.Destination parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Destination parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.Destination parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.Destination prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Destination indicates the network addressable service to which the
   * request/connection will be sent after processing a routing rule. The
   * destination.host should unambiguously refer to a service in the service
   * registry. Istio's service registry is composed of all the services found
   * in the platform's service registry (e.g., Kubernetes services, Consul
   * services), as well as services declared through the
   * [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry) resource.
   * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
   * instead of "reviews.default.svc.cluster.local"), Istio will interpret
   * the short name based on the namespace of the rule, not the service. A
   * rule in the "default" namespace containing a host "reviews will be
   * interpreted as "reviews.default.svc.cluster.local", irrespective of the
   * actual namespace associated with the reviews service. _To avoid potential
   * misconfigurations, it is recommended to always use fully qualified
   * domain names over short names._
   * The following Kubernetes example routes all traffic by default to pods
   * of the reviews service with label "version: v1" (i.e., subset v1), and
   * some to subset v2, in a Kubernetes environment.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: VirtualService
   * metadata:
   *   name: reviews-route
   *   namespace: foo
   * spec:
   *   hosts:
   *   - reviews # interpreted as reviews.foo.svc.cluster.local
   *   http:
   *   - match:
   *     - uri:
   *         prefix: "/wpcatalog"
   *     - uri:
   *         prefix: "/consumercatalog"
   *     rewrite:
   *       uri: "/newcatalog"
   *     route:
   *     - destination:
   *         host: reviews # interpreted as reviews.foo.svc.cluster.local
   *         subset: v2
   *   - route:
   *     - destination:
   *         host: reviews # interpreted as reviews.foo.svc.cluster.local
   *         subset: v1
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: VirtualService
   * metadata:
   *   name: reviews-route
   *   namespace: foo
   * spec:
   *   hosts:
   *   - reviews # interpreted as reviews.foo.svc.cluster.local
   *   http:
   *   - match:
   *     - uri:
   *         prefix: "/wpcatalog"
   *     - uri:
   *         prefix: "/consumercatalog"
   *     rewrite:
   *       uri: "/newcatalog"
   *     route:
   *     - destination:
   *         host: reviews # interpreted as reviews.foo.svc.cluster.local
   *         subset: v2
   *   - route:
   *     - destination:
   *         host: reviews # interpreted as reviews.foo.svc.cluster.local
   *         subset: v1
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * And the associated DestinationRule
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: reviews-destination
   *   namespace: foo
   * spec:
   *   host: reviews # interpreted as reviews.foo.svc.cluster.local
   *   subsets:
   *   - name: v1
   *     labels:
   *       version: v1
   *   - name: v2
   *     labels:
   *       version: v2
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: reviews-destination
   *   namespace: foo
   * spec:
   *   host: reviews # interpreted as reviews.foo.svc.cluster.local
   *   subsets:
   *   - name: v1
   *     labels:
   *       version: v1
   *   - name: v2
   *     labels:
   *       version: v2
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * The following VirtualService sets a timeout of 5s for all calls to
   * productpage.prod.svc.cluster.local service in Kubernetes. Notice that
   * there are no subsets defined in this rule. Istio will fetch all
   * instances of productpage.prod.svc.cluster.local service from the service
   * registry and populate the sidecar's load balancing pool. Also, notice
   * that this rule is set in the istio-system namespace but uses the fully
   * qualified domain name of the productpage service,
   * productpage.prod.svc.cluster.local. Therefore the rule's namespace does
   * not have an impact in resolving the name of the productpage service.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: VirtualService
   * metadata:
   *   name: my-productpage-rule
   *   namespace: istio-system
   * spec:
   *   hosts:
   *   - productpage.prod.svc.cluster.local # ignores rule namespace
   *   http:
   *   - timeout: 5s
   *     route:
   *     - destination:
   *         host: productpage.prod.svc.cluster.local
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: VirtualService
   * metadata:
   *   name: my-productpage-rule
   *   namespace: istio-system
   * spec:
   *   hosts:
   *   - productpage.prod.svc.cluster.local # ignores rule namespace
   *   http:
   *   - timeout: 5s
   *     route:
   *     - destination:
   *         host: productpage.prod.svc.cluster.local
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * To control routing for traffic bound to services outside the mesh, external
   * services must first be added to Istio's internal service registry using the
   * ServiceEntry resource. VirtualServices can then be defined to control traffic
   * bound to these external services. For example, the following rules define a
   * Service for wikipedia.org and set a timeout of 5s for HTTP requests.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: ServiceEntry
   * metadata:
   *   name: external-svc-wikipedia
   * spec:
   *   hosts:
   *   - wikipedia.org
   *   location: MESH_EXTERNAL
   *   ports:
   *   - number: 80
   *     name: example-http
   *     protocol: HTTP
   *   resolution: DNS
   * apiVersion: networking.istio.io/v1alpha3
   * kind: VirtualService
   * metadata:
   *   name: my-wiki-rule
   * spec:
   *   hosts:
   *   - wikipedia.org
   *   http:
   *   - timeout: 5s
   *     route:
   *     - destination:
   *         host: wikipedia.org
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: ServiceEntry
   * metadata:
   *   name: external-svc-wikipedia
   * spec:
   *   hosts:
   *   - wikipedia.org
   *   location: MESH_EXTERNAL
   *   ports:
   *   - number: 80
   *     name: example-http
   *     protocol: HTTP
   *   resolution: DNS
   * apiVersion: networking.istio.io/v1alpha3
   * kind: VirtualService
   * metadata:
   *   name: my-wiki-rule
   * spec:
   *   hosts:
   *   - wikipedia.org
   *   http:
   *   - timeout: 5s
   *     route:
   *     - destination:
   *         host: wikipedia.org
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.Destination}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.Destination)
      io.ourea.adapter.model.istio.DestinationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_Destination_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_Destination_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.Destination.class, io.ourea.adapter.model.istio.Destination.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.Destination.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      host_ = "";

      subset_ = "";

      if (portBuilder_ == null) {
        port_ = null;
      } else {
        port_ = null;
        portBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_Destination_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.Destination getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.Destination.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.Destination build() {
      io.ourea.adapter.model.istio.Destination result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.Destination buildPartial() {
      io.ourea.adapter.model.istio.Destination result = new io.ourea.adapter.model.istio.Destination(this);
      result.host_ = host_;
      result.subset_ = subset_;
      if (portBuilder_ == null) {
        result.port_ = port_;
      } else {
        result.port_ = portBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.Destination) {
        return mergeFrom((io.ourea.adapter.model.istio.Destination)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.Destination other) {
      if (other == io.ourea.adapter.model.istio.Destination.getDefaultInstance()) return this;
      if (!other.getHost().isEmpty()) {
        host_ = other.host_;
        onChanged();
      }
      if (!other.getSubset().isEmpty()) {
        subset_ = other.subset_;
        onChanged();
      }
      if (other.hasPort()) {
        mergePort(other.getPort());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.Destination parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.Destination) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object host_ = "";
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Traffic forwarded to
     * destinations that are not found in either of the two, will be dropped.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. To avoid
     * potential misconfiguration, it is recommended to always use fully
     * qualified domain names over short names.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The host.
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        host_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Traffic forwarded to
     * destinations that are not found in either of the two, will be dropped.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. To avoid
     * potential misconfiguration, it is recommended to always use fully
     * qualified domain names over short names.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for host.
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Traffic forwarded to
     * destinations that are not found in either of the two, will be dropped.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. To avoid
     * potential misconfiguration, it is recommended to always use fully
     * qualified domain names over short names.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The host to set.
     * @return This builder for chaining.
     */
    public Builder setHost(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      host_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Traffic forwarded to
     * destinations that are not found in either of the two, will be dropped.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. To avoid
     * potential misconfiguration, it is recommended to always use fully
     * qualified domain names over short names.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearHost() {
      
      host_ = getDefaultInstance().getHost();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of a service from the service registry. Service
     * names are looked up from the platform's service registry (e.g.,
     * Kubernetes services, Consul services, etc.) and from the hosts
     * declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Traffic forwarded to
     * destinations that are not found in either of the two, will be dropped.
     * *Note for Kubernetes users*: When short names are used (e.g. "reviews"
     * instead of "reviews.default.svc.cluster.local"), Istio will interpret
     * the short name based on the namespace of the rule, not the service. A
     * rule in the "default" namespace containing a host "reviews will be
     * interpreted as "reviews.default.svc.cluster.local", irrespective of
     * the actual namespace associated with the reviews service. To avoid
     * potential misconfiguration, it is recommended to always use fully
     * qualified domain names over short names.
     * </pre>
     *
     * <code>string host = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for host to set.
     * @return This builder for chaining.
     */
    public Builder setHostBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      host_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object subset_ = "";
    /**
     * <pre>
     * The name of a subset within the service. Applicable only to services
     * within the mesh. The subset must be defined in a corresponding
     * DestinationRule.
     * </pre>
     *
     * <code>string subset = 2;</code>
     * @return The subset.
     */
    public java.lang.String getSubset() {
      java.lang.Object ref = subset_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subset_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of a subset within the service. Applicable only to services
     * within the mesh. The subset must be defined in a corresponding
     * DestinationRule.
     * </pre>
     *
     * <code>string subset = 2;</code>
     * @return The bytes for subset.
     */
    public com.google.protobuf.ByteString
        getSubsetBytes() {
      java.lang.Object ref = subset_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of a subset within the service. Applicable only to services
     * within the mesh. The subset must be defined in a corresponding
     * DestinationRule.
     * </pre>
     *
     * <code>string subset = 2;</code>
     * @param value The subset to set.
     * @return This builder for chaining.
     */
    public Builder setSubset(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      subset_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of a subset within the service. Applicable only to services
     * within the mesh. The subset must be defined in a corresponding
     * DestinationRule.
     * </pre>
     *
     * <code>string subset = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSubset() {
      
      subset_ = getDefaultInstance().getSubset();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of a subset within the service. Applicable only to services
     * within the mesh. The subset must be defined in a corresponding
     * DestinationRule.
     * </pre>
     *
     * <code>string subset = 2;</code>
     * @param value The bytes for subset to set.
     * @return This builder for chaining.
     */
    public Builder setSubsetBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      subset_ = value;
      onChanged();
      return this;
    }

    private io.ourea.adapter.model.istio.PortSelector port_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.PortSelector, io.ourea.adapter.model.istio.PortSelector.Builder, io.ourea.adapter.model.istio.PortSelectorOrBuilder> portBuilder_;
    /**
     * <pre>
     * Specifies the port on the host that is being addressed. If a service
     * exposes only a single port it is not required to explicitly select the
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
     * @return Whether the port field is set.
     */
    public boolean hasPort() {
      return portBuilder_ != null || port_ != null;
    }
    /**
     * <pre>
     * Specifies the port on the host that is being addressed. If a service
     * exposes only a single port it is not required to explicitly select the
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
     * @return The port.
     */
    public io.ourea.adapter.model.istio.PortSelector getPort() {
      if (portBuilder_ == null) {
        return port_ == null ? io.ourea.adapter.model.istio.PortSelector.getDefaultInstance() : port_;
      } else {
        return portBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the port on the host that is being addressed. If a service
     * exposes only a single port it is not required to explicitly select the
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
     */
    public Builder setPort(io.ourea.adapter.model.istio.PortSelector value) {
      if (portBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        port_ = value;
        onChanged();
      } else {
        portBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the port on the host that is being addressed. If a service
     * exposes only a single port it is not required to explicitly select the
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
     */
    public Builder setPort(
        io.ourea.adapter.model.istio.PortSelector.Builder builderForValue) {
      if (portBuilder_ == null) {
        port_ = builderForValue.build();
        onChanged();
      } else {
        portBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the port on the host that is being addressed. If a service
     * exposes only a single port it is not required to explicitly select the
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
     */
    public Builder mergePort(io.ourea.adapter.model.istio.PortSelector value) {
      if (portBuilder_ == null) {
        if (port_ != null) {
          port_ =
            io.ourea.adapter.model.istio.PortSelector.newBuilder(port_).mergeFrom(value).buildPartial();
        } else {
          port_ = value;
        }
        onChanged();
      } else {
        portBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the port on the host that is being addressed. If a service
     * exposes only a single port it is not required to explicitly select the
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
     */
    public Builder clearPort() {
      if (portBuilder_ == null) {
        port_ = null;
        onChanged();
      } else {
        port_ = null;
        portBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the port on the host that is being addressed. If a service
     * exposes only a single port it is not required to explicitly select the
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
     */
    public io.ourea.adapter.model.istio.PortSelector.Builder getPortBuilder() {
      
      onChanged();
      return getPortFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the port on the host that is being addressed. If a service
     * exposes only a single port it is not required to explicitly select the
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
     */
    public io.ourea.adapter.model.istio.PortSelectorOrBuilder getPortOrBuilder() {
      if (portBuilder_ != null) {
        return portBuilder_.getMessageOrBuilder();
      } else {
        return port_ == null ?
            io.ourea.adapter.model.istio.PortSelector.getDefaultInstance() : port_;
      }
    }
    /**
     * <pre>
     * Specifies the port on the host that is being addressed. If a service
     * exposes only a single port it is not required to explicitly select the
     * port.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.PortSelector, io.ourea.adapter.model.istio.PortSelector.Builder, io.ourea.adapter.model.istio.PortSelectorOrBuilder> 
        getPortFieldBuilder() {
      if (portBuilder_ == null) {
        portBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.PortSelector, io.ourea.adapter.model.istio.PortSelector.Builder, io.ourea.adapter.model.istio.PortSelectorOrBuilder>(
                getPort(),
                getParentForChildren(),
                isClean());
        port_ = null;
      }
      return portBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.Destination)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Destination)
  private static final io.ourea.adapter.model.istio.Destination DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.Destination();
  }

  public static io.ourea.adapter.model.istio.Destination getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Destination>
      PARSER = new com.google.protobuf.AbstractParser<Destination>() {
    @java.lang.Override
    public Destination parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Destination(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Destination> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Destination> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.Destination getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

