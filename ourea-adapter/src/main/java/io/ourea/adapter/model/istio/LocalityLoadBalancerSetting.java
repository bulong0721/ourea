// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: destination_rule.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * Locality-weighted load balancing allows administrators to control the
 * distribution of traffic to endpoints based on the localities of where the
 * traffic originates and where it will terminate. These localities are
 * specified using arbitrary labels that designate a hierarchy of localities in
 * {region}/{zone}/{sub-zone} form. For additional detail refer to
 * [Locality Weight](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
 * The following example shows how to setup locality weights mesh-wide.
 * Given a mesh with workloads and their service deployed to "us-west/zone1/&#42;"
 * and "us-west/zone2/&#42;". This example specifies that when traffic accessing a
 * service originates from workloads in "us-west/zone1/&#42;", 80% of the traffic
 * will be sent to endpoints in "us-west/zone1/&#42;", i.e the same zone, and the
 * remaining 20% will go to endpoints in "us-west/zone2/&#42;". This setup is
 * intended to favor routing traffic to endpoints in the same locality.
 * A similar setting is specified for traffic originating in "us-west/zone2/&#42;".
 * ```yaml
 *   distribute:
 *     - from: us-west/zone1/&#42;
 *       to:
 *         "us-west/zone1/&#42;": 80
 *         "us-west/zone2/&#42;": 20
 *     - from: us-west/zone2/&#42;
 *       to:
 *         "us-west/zone1/&#42;": 20
 *         "us-west/zone2/&#42;": 80
 * ```
 * If the goal of the operator is not to distribute load across zones and
 * regions but rather to restrict the regionality of failover to meet other
 * operational requirements an operator can set a 'failover' policy instead of
 * a 'distribute' policy.
 * The following example sets up a locality failover policy for regions.
 * Assume a service resides in zones within us-east, us-west &amp; eu-west
 * this example specifies that when endpoints within us-east become unhealthy
 * traffic should failover to endpoints in any zone or sub-zone within eu-west
 * and similarly us-west should failover to us-east.
 * ```yaml
 *  failover:
 *    - from: us-east
 *      to: eu-west
 *    - from: us-west
 *      to: us-east
 * ```
 * Locality load balancing settings.
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting}
 */
public final class LocalityLoadBalancerSetting extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
    LocalityLoadBalancerSettingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LocalityLoadBalancerSetting.newBuilder() to construct.
  private LocalityLoadBalancerSetting(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LocalityLoadBalancerSetting() {
    distribute_ = java.util.Collections.emptyList();
    failover_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LocalityLoadBalancerSetting();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LocalityLoadBalancerSetting(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              distribute_ = new java.util.ArrayList<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute>();
              mutable_bitField0_ |= 0x00000001;
            }
            distribute_.add(
                input.readMessage(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              failover_ = new java.util.ArrayList<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover>();
              mutable_bitField0_ |= 0x00000002;
            }
            failover_.add(
                input.readMessage(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.parser(), extensionRegistry));
            break;
          }
          case 26: {
            com.google.protobuf.BoolValue.Builder subBuilder = null;
            if (enabled_ != null) {
              subBuilder = enabled_.toBuilder();
            }
            enabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enabled_);
              enabled_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        distribute_ = java.util.Collections.unmodifiableList(distribute_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        failover_ = java.util.Collections.unmodifiableList(failover_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.class, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Builder.class);
  }

  public interface DistributeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
     * </pre>
     *
     * <code>string from = 1;</code>
     * @return The from.
     */
    java.lang.String getFrom();
    /**
     * <pre>
     * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
     * </pre>
     *
     * <code>string from = 1;</code>
     * @return The bytes for from.
     */
    com.google.protobuf.ByteString
        getFromBytes();

    /**
     * <pre>
     * Map of upstream localities to traffic distribution weights. The sum of
     * all weights should be == 100. Any locality not assigned a weight will
     * receive no traffic.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; to = 2;</code>
     */
    int getToCount();
    /**
     * <pre>
     * Map of upstream localities to traffic distribution weights. The sum of
     * all weights should be == 100. Any locality not assigned a weight will
     * receive no traffic.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; to = 2;</code>
     */
    boolean containsTo(
        java.lang.String key);
    /**
     * Use {@link #getToMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getTo();
    /**
     * <pre>
     * Map of upstream localities to traffic distribution weights. The sum of
     * all weights should be == 100. Any locality not assigned a weight will
     * receive no traffic.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; to = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getToMap();
    /**
     * <pre>
     * Map of upstream localities to traffic distribution weights. The sum of
     * all weights should be == 100. Any locality not assigned a weight will
     * receive no traffic.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; to = 2;</code>
     */

    int getToOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * Map of upstream localities to traffic distribution weights. The sum of
     * all weights should be == 100. Any locality not assigned a weight will
     * receive no traffic.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; to = 2;</code>
     */

    int getToOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Describes how traffic originating in the 'from' zone or sub-zone is
   * distributed over a set of 'to' zones. Syntax for specifying a zone is
   * {region}/{zone}/{sub-zone} and terminal wildcards are allowed on any
   * segment of the specification. Examples:
   * * - matches all localities
   * us-west/&#42; - all zones and sub-zones within the us-west region
   * us-west/zone-1/&#42; - all sub-zones within us-west/zone-1
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute}
   */
  public static final class Distribute extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
      DistributeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Distribute.newBuilder() to construct.
    private Distribute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Distribute() {
      from_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Distribute();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Distribute(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              from_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                to_ = com.google.protobuf.MapField.newMapField(
                    ToDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              to__ = input.readMessage(
                  ToDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              to_.getMutableMap().put(
                  to__.getKey(), to__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetTo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.class, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder.class);
    }

    public static final int FROM_FIELD_NUMBER = 1;
    private volatile java.lang.Object from_;
    /**
     * <pre>
     * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
     * </pre>
     *
     * <code>string from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public java.lang.String getFrom() {
      java.lang.Object ref = from_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        from_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
     * </pre>
     *
     * <code>string from = 1;</code>
     * @return The bytes for from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFromBytes() {
      java.lang.Object ref = from_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        from_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TO_FIELD_NUMBER = 2;
    private static final class ToDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_ToEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> to_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetTo() {
      if (to_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ToDefaultEntryHolder.defaultEntry);
      }
      return to_;
    }

    public int getToCount() {
      return internalGetTo().getMap().size();
    }
    /**
     * <pre>
     * Map of upstream localities to traffic distribution weights. The sum of
     * all weights should be == 100. Any locality not assigned a weight will
     * receive no traffic.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; to = 2;</code>
     */

    @java.lang.Override
    public boolean containsTo(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getToMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getTo() {
      return getToMap();
    }
    /**
     * <pre>
     * Map of upstream localities to traffic distribution weights. The sum of
     * all weights should be == 100. Any locality not assigned a weight will
     * receive no traffic.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; to = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getToMap() {
      return internalGetTo().getMap();
    }
    /**
     * <pre>
     * Map of upstream localities to traffic distribution weights. The sum of
     * all weights should be == 100. Any locality not assigned a weight will
     * receive no traffic.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; to = 2;</code>
     */
    @java.lang.Override

    public int getToOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetTo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Map of upstream localities to traffic distribution weights. The sum of
     * all weights should be == 100. Any locality not assigned a weight will
     * receive no traffic.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; to = 2;</code>
     */
    @java.lang.Override

    public int getToOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetTo().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFromBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, from_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTo(),
          ToDefaultEntryHolder.defaultEntry,
          2);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFromBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, from_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetTo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        to__ = ToDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, to__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute)) {
        return super.equals(obj);
      }
      io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute other = (io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute) obj;

      if (!getFrom()
          .equals(other.getFrom())) return false;
      if (!internalGetTo().equals(
          other.internalGetTo())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + getFrom().hashCode();
      if (!internalGetTo().getMap().isEmpty()) {
        hash = (37 * hash) + TO_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes how traffic originating in the 'from' zone or sub-zone is
     * distributed over a set of 'to' zones. Syntax for specifying a zone is
     * {region}/{zone}/{sub-zone} and terminal wildcards are allowed on any
     * segment of the specification. Examples:
     * * - matches all localities
     * us-west/&#42; - all zones and sub-zones within the us-west region
     * us-west/zone-1/&#42; - all sub-zones within us-west/zone-1
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetTo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableTo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.class, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder.class);
      }

      // Construct using io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        from_ = "";

        internalGetMutableTo().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Distribute_descriptor;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute getDefaultInstanceForType() {
        return io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.getDefaultInstance();
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute build() {
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute buildPartial() {
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute result = new io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute(this);
        int from_bitField0_ = bitField0_;
        result.from_ = from_;
        result.to_ = internalGetTo();
        result.to_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute) {
          return mergeFrom((io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute other) {
        if (other == io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.getDefaultInstance()) return this;
        if (!other.getFrom().isEmpty()) {
          from_ = other.from_;
          onChanged();
        }
        internalGetMutableTo().mergeFrom(
            other.internalGetTo());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object from_ = "";
      /**
       * <pre>
       * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      public java.lang.String getFrom() {
        java.lang.Object ref = from_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          from_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      public com.google.protobuf.ByteString
          getFromBytes() {
        java.lang.Object ref = from_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        
        from_ = getDefaultInstance().getFrom();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @param value The bytes for from to set.
       * @return This builder for chaining.
       */
      public Builder setFromBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        from_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> to_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetTo() {
        if (to_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ToDefaultEntryHolder.defaultEntry);
        }
        return to_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableTo() {
        onChanged();;
        if (to_ == null) {
          to_ = com.google.protobuf.MapField.newMapField(
              ToDefaultEntryHolder.defaultEntry);
        }
        if (!to_.isMutable()) {
          to_ = to_.copy();
        }
        return to_;
      }

      public int getToCount() {
        return internalGetTo().getMap().size();
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be == 100. Any locality not assigned a weight will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */

      @java.lang.Override
      public boolean containsTo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetTo().getMap().containsKey(key);
      }
      /**
       * Use {@link #getToMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getTo() {
        return getToMap();
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be == 100. Any locality not assigned a weight will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.Integer> getToMap() {
        return internalGetTo().getMap();
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be == 100. Any locality not assigned a weight will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      @java.lang.Override

      public int getToOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetTo().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be == 100. Any locality not assigned a weight will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      @java.lang.Override

      public int getToOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetTo().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTo() {
        internalGetMutableTo().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be == 100. Any locality not assigned a weight will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */

      public Builder removeTo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTo().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableTo() {
        return internalGetMutableTo().getMutableMap();
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be == 100. Any locality not assigned a weight will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */
      public Builder putTo(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableTo().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Map of upstream localities to traffic distribution weights. The sum of
       * all weights should be == 100. Any locality not assigned a weight will
       * receive no traffic.
       * </pre>
       *
       * <code>map&lt;string, uint32&gt; to = 2;</code>
       */

      public Builder putAllTo(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableTo().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute)
    private static final io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute();
    }

    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Distribute>
        PARSER = new com.google.protobuf.AbstractParser<Distribute>() {
      @java.lang.Override
      public Distribute parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Distribute(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Distribute> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Distribute> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FailoverOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Originating region.
     * </pre>
     *
     * <code>string from = 1;</code>
     * @return The from.
     */
    java.lang.String getFrom();
    /**
     * <pre>
     * Originating region.
     * </pre>
     *
     * <code>string from = 1;</code>
     * @return The bytes for from.
     */
    com.google.protobuf.ByteString
        getFromBytes();

    /**
     * <pre>
     * Destination region the traffic will fail over to when endpoints in
     * the 'from' region becomes unhealthy.
     * </pre>
     *
     * <code>string to = 2;</code>
     * @return The to.
     */
    java.lang.String getTo();
    /**
     * <pre>
     * Destination region the traffic will fail over to when endpoints in
     * the 'from' region becomes unhealthy.
     * </pre>
     *
     * <code>string to = 2;</code>
     * @return The bytes for to.
     */
    com.google.protobuf.ByteString
        getToBytes();
  }
  /**
   * <pre>
   * Specify the traffic failover policy across regions. Since zone and sub-zone
   * failover is supported by default this only needs to be specified for
   * regions when the operator needs to constrain traffic failover so that
   * the default behavior of failing over to any endpoint globally does not
   * apply. This is useful when failing over traffic across regions would not
   * improve service health or may need to be restricted for other reasons
   * like regulatory controls.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover}
   */
  public static final class Failover extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
      FailoverOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Failover.newBuilder() to construct.
    private Failover(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Failover() {
      from_ = "";
      to_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Failover();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Failover(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              from_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              to_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.class, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder.class);
    }

    public static final int FROM_FIELD_NUMBER = 1;
    private volatile java.lang.Object from_;
    /**
     * <pre>
     * Originating region.
     * </pre>
     *
     * <code>string from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public java.lang.String getFrom() {
      java.lang.Object ref = from_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        from_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Originating region.
     * </pre>
     *
     * <code>string from = 1;</code>
     * @return The bytes for from.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFromBytes() {
      java.lang.Object ref = from_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        from_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TO_FIELD_NUMBER = 2;
    private volatile java.lang.Object to_;
    /**
     * <pre>
     * Destination region the traffic will fail over to when endpoints in
     * the 'from' region becomes unhealthy.
     * </pre>
     *
     * <code>string to = 2;</code>
     * @return The to.
     */
    @java.lang.Override
    public java.lang.String getTo() {
      java.lang.Object ref = to_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        to_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Destination region the traffic will fail over to when endpoints in
     * the 'from' region becomes unhealthy.
     * </pre>
     *
     * <code>string to = 2;</code>
     * @return The bytes for to.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getToBytes() {
      java.lang.Object ref = to_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        to_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFromBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, from_);
      }
      if (!getToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, to_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFromBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, from_);
      }
      if (!getToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, to_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover)) {
        return super.equals(obj);
      }
      io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover other = (io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover) obj;

      if (!getFrom()
          .equals(other.getFrom())) return false;
      if (!getTo()
          .equals(other.getTo())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + getFrom().hashCode();
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + getTo().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specify the traffic failover policy across regions. Since zone and sub-zone
     * failover is supported by default this only needs to be specified for
     * regions when the operator needs to constrain traffic failover so that
     * the default behavior of failing over to any endpoint globally does not
     * apply. This is useful when failing over traffic across regions would not
     * improve service health or may need to be restricted for other reasons
     * like regulatory controls.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.class, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder.class);
      }

      // Construct using io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        from_ = "";

        to_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_Failover_descriptor;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover getDefaultInstanceForType() {
        return io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.getDefaultInstance();
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover build() {
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover buildPartial() {
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover result = new io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover(this);
        result.from_ = from_;
        result.to_ = to_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover) {
          return mergeFrom((io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover other) {
        if (other == io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.getDefaultInstance()) return this;
        if (!other.getFrom().isEmpty()) {
          from_ = other.from_;
          onChanged();
        }
        if (!other.getTo().isEmpty()) {
          to_ = other.to_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object from_ = "";
      /**
       * <pre>
       * Originating region.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The from.
       */
      public java.lang.String getFrom() {
        java.lang.Object ref = from_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          from_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Originating region.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return The bytes for from.
       */
      public com.google.protobuf.ByteString
          getFromBytes() {
        java.lang.Object ref = from_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Originating region.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Originating region.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        
        from_ = getDefaultInstance().getFrom();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Originating region.
       * </pre>
       *
       * <code>string from = 1;</code>
       * @param value The bytes for from to set.
       * @return This builder for chaining.
       */
      public Builder setFromBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        from_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object to_ = "";
      /**
       * <pre>
       * Destination region the traffic will fail over to when endpoints in
       * the 'from' region becomes unhealthy.
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The to.
       */
      public java.lang.String getTo() {
        java.lang.Object ref = to_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          to_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Destination region the traffic will fail over to when endpoints in
       * the 'from' region becomes unhealthy.
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return The bytes for to.
       */
      public com.google.protobuf.ByteString
          getToBytes() {
        java.lang.Object ref = to_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          to_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Destination region the traffic will fail over to when endpoints in
       * the 'from' region becomes unhealthy.
       * </pre>
       *
       * <code>string to = 2;</code>
       * @param value The to to set.
       * @return This builder for chaining.
       */
      public Builder setTo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        to_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Destination region the traffic will fail over to when endpoints in
       * the 'from' region becomes unhealthy.
       * </pre>
       *
       * <code>string to = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTo() {
        
        to_ = getDefaultInstance().getTo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Destination region the traffic will fail over to when endpoints in
       * the 'from' region becomes unhealthy.
       * </pre>
       *
       * <code>string to = 2;</code>
       * @param value The bytes for to to set.
       * @return This builder for chaining.
       */
      public Builder setToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        to_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover)
    private static final io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover();
    }

    public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Failover>
        PARSER = new com.google.protobuf.AbstractParser<Failover>() {
      @java.lang.Override
      public Failover parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Failover(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Failover> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Failover> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int DISTRIBUTE_FIELD_NUMBER = 1;
  private java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute> distribute_;
  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  @java.lang.Override
  public java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute> getDistributeList() {
    return distribute_;
  }
  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder> 
      getDistributeOrBuilderList() {
    return distribute_;
  }
  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  @java.lang.Override
  public int getDistributeCount() {
    return distribute_.size();
  }
  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute getDistribute(int index) {
    return distribute_.get(index);
  }
  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder getDistributeOrBuilder(
      int index) {
    return distribute_.get(index);
  }

  public static final int FAILOVER_FIELD_NUMBER = 2;
  private java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover> failover_;
  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover> getFailoverList() {
    return failover_;
  }
  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder> 
      getFailoverOrBuilderList() {
    return failover_;
  }
  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  @java.lang.Override
  public int getFailoverCount() {
    return failover_.size();
  }
  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover getFailover(int index) {
    return failover_.get(index);
  }
  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder getFailoverOrBuilder(
      int index) {
    return failover_.get(index);
  }

  public static final int ENABLED_FIELD_NUMBER = 3;
  private com.google.protobuf.BoolValue enabled_;
  /**
   * <pre>
   * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
   * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue enabled = 3;</code>
   * @return Whether the enabled field is set.
   */
  @java.lang.Override
  public boolean hasEnabled() {
    return enabled_ != null;
  }
  /**
   * <pre>
   * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
   * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue enabled = 3;</code>
   * @return The enabled.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getEnabled() {
    return enabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
  }
  /**
   * <pre>
   * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
   * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue enabled = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getEnabledOrBuilder() {
    return getEnabled();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < distribute_.size(); i++) {
      output.writeMessage(1, distribute_.get(i));
    }
    for (int i = 0; i < failover_.size(); i++) {
      output.writeMessage(2, failover_.get(i));
    }
    if (enabled_ != null) {
      output.writeMessage(3, getEnabled());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < distribute_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, distribute_.get(i));
    }
    for (int i = 0; i < failover_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, failover_.get(i));
    }
    if (enabled_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getEnabled());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.LocalityLoadBalancerSetting)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.LocalityLoadBalancerSetting other = (io.ourea.adapter.model.istio.LocalityLoadBalancerSetting) obj;

    if (!getDistributeList()
        .equals(other.getDistributeList())) return false;
    if (!getFailoverList()
        .equals(other.getFailoverList())) return false;
    if (hasEnabled() != other.hasEnabled()) return false;
    if (hasEnabled()) {
      if (!getEnabled()
          .equals(other.getEnabled())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDistributeCount() > 0) {
      hash = (37 * hash) + DISTRIBUTE_FIELD_NUMBER;
      hash = (53 * hash) + getDistributeList().hashCode();
    }
    if (getFailoverCount() > 0) {
      hash = (37 * hash) + FAILOVER_FIELD_NUMBER;
      hash = (53 * hash) + getFailoverList().hashCode();
    }
    if (hasEnabled()) {
      hash = (37 * hash) + ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + getEnabled().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Locality-weighted load balancing allows administrators to control the
   * distribution of traffic to endpoints based on the localities of where the
   * traffic originates and where it will terminate. These localities are
   * specified using arbitrary labels that designate a hierarchy of localities in
   * {region}/{zone}/{sub-zone} form. For additional detail refer to
   * [Locality Weight](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * The following example shows how to setup locality weights mesh-wide.
   * Given a mesh with workloads and their service deployed to "us-west/zone1/&#42;"
   * and "us-west/zone2/&#42;". This example specifies that when traffic accessing a
   * service originates from workloads in "us-west/zone1/&#42;", 80% of the traffic
   * will be sent to endpoints in "us-west/zone1/&#42;", i.e the same zone, and the
   * remaining 20% will go to endpoints in "us-west/zone2/&#42;". This setup is
   * intended to favor routing traffic to endpoints in the same locality.
   * A similar setting is specified for traffic originating in "us-west/zone2/&#42;".
   * ```yaml
   *   distribute:
   *     - from: us-west/zone1/&#42;
   *       to:
   *         "us-west/zone1/&#42;": 80
   *         "us-west/zone2/&#42;": 20
   *     - from: us-west/zone2/&#42;
   *       to:
   *         "us-west/zone1/&#42;": 20
   *         "us-west/zone2/&#42;": 80
   * ```
   * If the goal of the operator is not to distribute load across zones and
   * regions but rather to restrict the regionality of failover to meet other
   * operational requirements an operator can set a 'failover' policy instead of
   * a 'distribute' policy.
   * The following example sets up a locality failover policy for regions.
   * Assume a service resides in zones within us-east, us-west &amp; eu-west
   * this example specifies that when endpoints within us-east become unhealthy
   * traffic should failover to endpoints in any zone or sub-zone within eu-west
   * and similarly us-west should failover to us-east.
   * ```yaml
   *  failover:
   *    - from: us-east
   *      to: eu-west
   *    - from: us-west
   *      to: us-east
   * ```
   * Locality load balancing settings.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.LocalityLoadBalancerSetting}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
      io.ourea.adapter.model.istio.LocalityLoadBalancerSettingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.class, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDistributeFieldBuilder();
        getFailoverFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (distributeBuilder_ == null) {
        distribute_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        distributeBuilder_.clear();
      }
      if (failoverBuilder_ == null) {
        failover_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        failoverBuilder_.clear();
      }
      if (enabledBuilder_ == null) {
        enabled_ = null;
      } else {
        enabled_ = null;
        enabledBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_LocalityLoadBalancerSetting_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting build() {
      io.ourea.adapter.model.istio.LocalityLoadBalancerSetting result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting buildPartial() {
      io.ourea.adapter.model.istio.LocalityLoadBalancerSetting result = new io.ourea.adapter.model.istio.LocalityLoadBalancerSetting(this);
      int from_bitField0_ = bitField0_;
      if (distributeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          distribute_ = java.util.Collections.unmodifiableList(distribute_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.distribute_ = distribute_;
      } else {
        result.distribute_ = distributeBuilder_.build();
      }
      if (failoverBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          failover_ = java.util.Collections.unmodifiableList(failover_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.failover_ = failover_;
      } else {
        result.failover_ = failoverBuilder_.build();
      }
      if (enabledBuilder_ == null) {
        result.enabled_ = enabled_;
      } else {
        result.enabled_ = enabledBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.LocalityLoadBalancerSetting) {
        return mergeFrom((io.ourea.adapter.model.istio.LocalityLoadBalancerSetting)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting other) {
      if (other == io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.getDefaultInstance()) return this;
      if (distributeBuilder_ == null) {
        if (!other.distribute_.isEmpty()) {
          if (distribute_.isEmpty()) {
            distribute_ = other.distribute_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDistributeIsMutable();
            distribute_.addAll(other.distribute_);
          }
          onChanged();
        }
      } else {
        if (!other.distribute_.isEmpty()) {
          if (distributeBuilder_.isEmpty()) {
            distributeBuilder_.dispose();
            distributeBuilder_ = null;
            distribute_ = other.distribute_;
            bitField0_ = (bitField0_ & ~0x00000001);
            distributeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDistributeFieldBuilder() : null;
          } else {
            distributeBuilder_.addAllMessages(other.distribute_);
          }
        }
      }
      if (failoverBuilder_ == null) {
        if (!other.failover_.isEmpty()) {
          if (failover_.isEmpty()) {
            failover_ = other.failover_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFailoverIsMutable();
            failover_.addAll(other.failover_);
          }
          onChanged();
        }
      } else {
        if (!other.failover_.isEmpty()) {
          if (failoverBuilder_.isEmpty()) {
            failoverBuilder_.dispose();
            failoverBuilder_ = null;
            failover_ = other.failover_;
            bitField0_ = (bitField0_ & ~0x00000002);
            failoverBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFailoverFieldBuilder() : null;
          } else {
            failoverBuilder_.addAllMessages(other.failover_);
          }
        }
      }
      if (other.hasEnabled()) {
        mergeEnabled(other.getEnabled());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.LocalityLoadBalancerSetting parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.LocalityLoadBalancerSetting) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute> distribute_ =
      java.util.Collections.emptyList();
    private void ensureDistributeIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        distribute_ = new java.util.ArrayList<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute>(distribute_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder> distributeBuilder_;

    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute> getDistributeList() {
      if (distributeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(distribute_);
      } else {
        return distributeBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public int getDistributeCount() {
      if (distributeBuilder_ == null) {
        return distribute_.size();
      } else {
        return distributeBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute getDistribute(int index) {
      if (distributeBuilder_ == null) {
        return distribute_.get(index);
      } else {
        return distributeBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public Builder setDistribute(
        int index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute value) {
      if (distributeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDistributeIsMutable();
        distribute_.set(index, value);
        onChanged();
      } else {
        distributeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public Builder setDistribute(
        int index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder builderForValue) {
      if (distributeBuilder_ == null) {
        ensureDistributeIsMutable();
        distribute_.set(index, builderForValue.build());
        onChanged();
      } else {
        distributeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public Builder addDistribute(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute value) {
      if (distributeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDistributeIsMutable();
        distribute_.add(value);
        onChanged();
      } else {
        distributeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public Builder addDistribute(
        int index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute value) {
      if (distributeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDistributeIsMutable();
        distribute_.add(index, value);
        onChanged();
      } else {
        distributeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public Builder addDistribute(
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder builderForValue) {
      if (distributeBuilder_ == null) {
        ensureDistributeIsMutable();
        distribute_.add(builderForValue.build());
        onChanged();
      } else {
        distributeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public Builder addDistribute(
        int index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder builderForValue) {
      if (distributeBuilder_ == null) {
        ensureDistributeIsMutable();
        distribute_.add(index, builderForValue.build());
        onChanged();
      } else {
        distributeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public Builder addAllDistribute(
        java.lang.Iterable<? extends io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute> values) {
      if (distributeBuilder_ == null) {
        ensureDistributeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, distribute_);
        onChanged();
      } else {
        distributeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public Builder clearDistribute() {
      if (distributeBuilder_ == null) {
        distribute_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        distributeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public Builder removeDistribute(int index) {
      if (distributeBuilder_ == null) {
        ensureDistributeIsMutable();
        distribute_.remove(index);
        onChanged();
      } else {
        distributeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder getDistributeBuilder(
        int index) {
      return getDistributeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder getDistributeOrBuilder(
        int index) {
      if (distributeBuilder_ == null) {
        return distribute_.get(index);  } else {
        return distributeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public java.util.List<? extends io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder> 
         getDistributeOrBuilderList() {
      if (distributeBuilder_ != null) {
        return distributeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(distribute_);
      }
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder addDistributeBuilder() {
      return getDistributeFieldBuilder().addBuilder(
          io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder addDistributeBuilder(
        int index) {
      return getDistributeFieldBuilder().addBuilder(
          index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional: only one of distribute or failover can be set.
     * Explicitly specify loadbalancing weight across different zones and geographical locations.
     * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
     * If empty, the locality weight is set according to the endpoints number within it.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder> 
         getDistributeBuilderList() {
      return getDistributeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder> 
        getDistributeFieldBuilder() {
      if (distributeBuilder_ == null) {
        distributeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute.Builder, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder>(
                distribute_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        distribute_ = null;
      }
      return distributeBuilder_;
    }

    private java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover> failover_ =
      java.util.Collections.emptyList();
    private void ensureFailoverIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        failover_ = new java.util.ArrayList<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover>(failover_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder> failoverBuilder_;

    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover> getFailoverList() {
      if (failoverBuilder_ == null) {
        return java.util.Collections.unmodifiableList(failover_);
      } else {
        return failoverBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public int getFailoverCount() {
      if (failoverBuilder_ == null) {
        return failover_.size();
      } else {
        return failoverBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover getFailover(int index) {
      if (failoverBuilder_ == null) {
        return failover_.get(index);
      } else {
        return failoverBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public Builder setFailover(
        int index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover value) {
      if (failoverBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailoverIsMutable();
        failover_.set(index, value);
        onChanged();
      } else {
        failoverBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public Builder setFailover(
        int index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder builderForValue) {
      if (failoverBuilder_ == null) {
        ensureFailoverIsMutable();
        failover_.set(index, builderForValue.build());
        onChanged();
      } else {
        failoverBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public Builder addFailover(io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover value) {
      if (failoverBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailoverIsMutable();
        failover_.add(value);
        onChanged();
      } else {
        failoverBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public Builder addFailover(
        int index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover value) {
      if (failoverBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFailoverIsMutable();
        failover_.add(index, value);
        onChanged();
      } else {
        failoverBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public Builder addFailover(
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder builderForValue) {
      if (failoverBuilder_ == null) {
        ensureFailoverIsMutable();
        failover_.add(builderForValue.build());
        onChanged();
      } else {
        failoverBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public Builder addFailover(
        int index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder builderForValue) {
      if (failoverBuilder_ == null) {
        ensureFailoverIsMutable();
        failover_.add(index, builderForValue.build());
        onChanged();
      } else {
        failoverBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public Builder addAllFailover(
        java.lang.Iterable<? extends io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover> values) {
      if (failoverBuilder_ == null) {
        ensureFailoverIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, failover_);
        onChanged();
      } else {
        failoverBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public Builder clearFailover() {
      if (failoverBuilder_ == null) {
        failover_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        failoverBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public Builder removeFailover(int index) {
      if (failoverBuilder_ == null) {
        ensureFailoverIsMutable();
        failover_.remove(index);
        onChanged();
      } else {
        failoverBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder getFailoverBuilder(
        int index) {
      return getFailoverFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder getFailoverOrBuilder(
        int index) {
      if (failoverBuilder_ == null) {
        return failover_.get(index);  } else {
        return failoverBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public java.util.List<? extends io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder> 
         getFailoverOrBuilderList() {
      if (failoverBuilder_ != null) {
        return failoverBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(failover_);
      }
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder addFailoverBuilder() {
      return getFailoverFieldBuilder().addBuilder(
          io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder addFailoverBuilder(
        int index) {
      return getFailoverFieldBuilder().addBuilder(
          index, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional: only failover or distribute can be set.
     * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
     * Should be used together with OutlierDetection to detect unhealthy endpoints.
     * Note: if no OutlierDetection specified, this will not take effect.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder> 
         getFailoverBuilderList() {
      return getFailoverFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder> 
        getFailoverFieldBuilder() {
      if (failoverBuilder_ == null) {
        failoverBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover.Builder, io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder>(
                failover_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        failover_ = null;
      }
      return failoverBuilder_;
    }

    private com.google.protobuf.BoolValue enabled_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> enabledBuilder_;
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     * @return Whether the enabled field is set.
     */
    public boolean hasEnabled() {
      return enabledBuilder_ != null || enabled_ != null;
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     * @return The enabled.
     */
    public com.google.protobuf.BoolValue getEnabled() {
      if (enabledBuilder_ == null) {
        return enabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
      } else {
        return enabledBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     */
    public Builder setEnabled(com.google.protobuf.BoolValue value) {
      if (enabledBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enabled_ = value;
        onChanged();
      } else {
        enabledBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     */
    public Builder setEnabled(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (enabledBuilder_ == null) {
        enabled_ = builderForValue.build();
        onChanged();
      } else {
        enabledBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     */
    public Builder mergeEnabled(com.google.protobuf.BoolValue value) {
      if (enabledBuilder_ == null) {
        if (enabled_ != null) {
          enabled_ =
            com.google.protobuf.BoolValue.newBuilder(enabled_).mergeFrom(value).buildPartial();
        } else {
          enabled_ = value;
        }
        onChanged();
      } else {
        enabledBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     */
    public Builder clearEnabled() {
      if (enabledBuilder_ == null) {
        enabled_ = null;
        onChanged();
      } else {
        enabled_ = null;
        enabledBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     */
    public com.google.protobuf.BoolValue.Builder getEnabledBuilder() {
      
      onChanged();
      return getEnabledFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getEnabledOrBuilder() {
      if (enabledBuilder_ != null) {
        return enabledBuilder_.getMessageOrBuilder();
      } else {
        return enabled_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
      }
    }
    /**
     * <pre>
     * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
     * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getEnabledFieldBuilder() {
      if (enabledBuilder_ == null) {
        enabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getEnabled(),
                getParentForChildren(),
                isClean());
        enabled_ = null;
      }
      return enabledBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
  private static final io.ourea.adapter.model.istio.LocalityLoadBalancerSetting DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.LocalityLoadBalancerSetting();
  }

  public static io.ourea.adapter.model.istio.LocalityLoadBalancerSetting getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LocalityLoadBalancerSetting>
      PARSER = new com.google.protobuf.AbstractParser<LocalityLoadBalancerSetting>() {
    @java.lang.Override
    public LocalityLoadBalancerSetting parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LocalityLoadBalancerSetting(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LocalityLoadBalancerSetting> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LocalityLoadBalancerSetting> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.LocalityLoadBalancerSetting getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

