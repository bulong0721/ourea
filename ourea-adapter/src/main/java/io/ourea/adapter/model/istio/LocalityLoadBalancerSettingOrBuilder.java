// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: destination_rule.proto

package io.ourea.adapter.model.istio;

public interface LocalityLoadBalancerSettingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.LocalityLoadBalancerSetting)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute> 
      getDistributeList();
  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Distribute getDistribute(int index);
  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  int getDistributeCount();
  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  java.util.List<? extends io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder> 
      getDistributeOrBuilderList();
  /**
   * <pre>
   * Optional: only one of distribute or failover can be set.
   * Explicitly specify loadbalancing weight across different zones and geographical locations.
   * Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight)
   * If empty, the locality weight is set according to the endpoints number within it.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Distribute distribute = 1;</code>
   */
  io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.DistributeOrBuilder getDistributeOrBuilder(
      int index);

  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  java.util.List<io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover> 
      getFailoverList();
  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.Failover getFailover(int index);
  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  int getFailoverCount();
  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  java.util.List<? extends io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder> 
      getFailoverOrBuilderList();
  /**
   * <pre>
   * Optional: only failover or distribute can be set.
   * Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy.
   * Should be used together with OutlierDetection to detect unhealthy endpoints.
   * Note: if no OutlierDetection specified, this will not take effect.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.LocalityLoadBalancerSetting.Failover failover = 2;</code>
   */
  io.ourea.adapter.model.istio.LocalityLoadBalancerSetting.FailoverOrBuilder getFailoverOrBuilder(
      int index);

  /**
   * <pre>
   * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
   * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue enabled = 3;</code>
   * @return Whether the enabled field is set.
   */
  boolean hasEnabled();
  /**
   * <pre>
   * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
   * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue enabled = 3;</code>
   * @return The enabled.
   */
  com.google.protobuf.BoolValue getEnabled();
  /**
   * <pre>
   * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
   * e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh wide settings is.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue enabled = 3;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getEnabledOrBuilder();
}
