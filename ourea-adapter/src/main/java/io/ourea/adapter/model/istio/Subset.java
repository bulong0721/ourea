// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: destination_rule.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * A subset of endpoints of a service. Subsets can be used for scenarios
 * like A/B testing, or routing to a specific version of a service. Refer
 * to [VirtualService](https://istio.io/docs/reference/config/networking/virtual-service/#VirtualService) documentation for examples of using
 * subsets in these scenarios. In addition, traffic policies defined at the
 * service-level can be overridden at a subset-level. The following rule
 * uses a round robin load balancing policy for all traffic going to a
 * subset named testversion that is composed of endpoints (e.g., pods) with
 * labels (version:v3).
 * {{&lt;tabset category-name="example"&gt;}}
 * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1alpha3
 * kind: DestinationRule
 * metadata:
 *   name: bookinfo-ratings
 * spec:
 *   host: ratings.prod.svc.cluster.local
 *   trafficPolicy:
 *     loadBalancer:
 *       simple: LEAST_CONN
 *   subsets:
 *   - name: testversion
 *     labels:
 *       version: v3
 *     trafficPolicy:
 *       loadBalancer:
 *         simple: ROUND_ROBIN
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1beta1
 * kind: DestinationRule
 * metadata:
 *   name: bookinfo-ratings
 * spec:
 *   host: ratings.prod.svc.cluster.local
 *   trafficPolicy:
 *     loadBalancer:
 *       simple: LEAST_CONN
 *   subsets:
 *   - name: testversion
 *     labels:
 *       version: v3
 *     trafficPolicy:
 *       loadBalancer:
 *         simple: ROUND_ROBIN
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;/tabset&gt;}}
 * **Note:** Policies specified for subsets will not take effect until
 * a route rule explicitly sends traffic to this subset.
 * One or more labels are typically required to identify the subset destination,
 * however, when the corresponding DestinationRule represents a host that
 * supports multiple SNI hosts (e.g., an egress gateway), a subset without labels
 * may be meaningful. In this case a traffic policy with [ClientTLSSettings](#ClientTLSSettings)
 * can be used to identify a specific SNI host corresponding to the named subset.
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.Subset}
 */
public final class Subset extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.Subset)
    SubsetOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Subset.newBuilder() to construct.
  private Subset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Subset() {
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Subset();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Subset(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              labels_ = com.google.protobuf.MapField.newMapField(
                  LabelsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            labels__ = input.readMessage(
                LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            labels_.getMutableMap().put(
                labels__.getKey(), labels__.getValue());
            break;
          }
          case 26: {
            io.ourea.adapter.model.istio.TrafficPolicy.Builder subBuilder = null;
            if (trafficPolicy_ != null) {
              subBuilder = trafficPolicy_.toBuilder();
            }
            trafficPolicy_ = input.readMessage(io.ourea.adapter.model.istio.TrafficPolicy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(trafficPolicy_);
              trafficPolicy_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetLabels();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.Subset.class, io.ourea.adapter.model.istio.Subset.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Name of the subset. The service name and the subset name can
   * be used for traffic splitting in a route rule.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the subset. The service name and the subset name can
   * be used for traffic splitting in a route rule.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LABELS_FIELD_NUMBER = 2;
  private static final class LabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_LabelsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> labels_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetLabels() {
    if (labels_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LabelsDefaultEntryHolder.defaultEntry);
    }
    return labels_;
  }

  public int getLabelsCount() {
    return internalGetLabels().getMap().size();
  }
  /**
   * <pre>
   * Labels apply a filter over the endpoints of a service in the
   * service registry. See route rules for examples of usage.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */

  @java.lang.Override
  public boolean containsLabels(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetLabels().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getLabels() {
    return getLabelsMap();
  }
  /**
   * <pre>
   * Labels apply a filter over the endpoints of a service in the
   * service registry. See route rules for examples of usage.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
    return internalGetLabels().getMap();
  }
  /**
   * <pre>
   * Labels apply a filter over the endpoints of a service in the
   * service registry. See route rules for examples of usage.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getLabelsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Labels apply a filter over the endpoints of a service in the
   * service registry. See route rules for examples of usage.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getLabelsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TRAFFIC_POLICY_FIELD_NUMBER = 3;
  private io.ourea.adapter.model.istio.TrafficPolicy trafficPolicy_;
  /**
   * <pre>
   * Traffic policies that apply to this subset. Subsets inherit the
   * traffic policies specified at the DestinationRule level. Settings
   * specified at the subset level will override the corresponding settings
   * specified at the DestinationRule level.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
   * @return Whether the trafficPolicy field is set.
   */
  @java.lang.Override
  public boolean hasTrafficPolicy() {
    return trafficPolicy_ != null;
  }
  /**
   * <pre>
   * Traffic policies that apply to this subset. Subsets inherit the
   * traffic policies specified at the DestinationRule level. Settings
   * specified at the subset level will override the corresponding settings
   * specified at the DestinationRule level.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
   * @return The trafficPolicy.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.TrafficPolicy getTrafficPolicy() {
    return trafficPolicy_ == null ? io.ourea.adapter.model.istio.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
  }
  /**
   * <pre>
   * Traffic policies that apply to this subset. Subsets inherit the
   * traffic policies specified at the DestinationRule level. Settings
   * specified at the subset level will override the corresponding settings
   * specified at the DestinationRule level.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder() {
    return getTrafficPolicy();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetLabels(),
        LabelsDefaultEntryHolder.defaultEntry,
        2);
    if (trafficPolicy_ != null) {
      output.writeMessage(3, getTrafficPolicy());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetLabels().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, labels__);
    }
    if (trafficPolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTrafficPolicy());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.Subset)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.Subset other = (io.ourea.adapter.model.istio.Subset) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!internalGetLabels().equals(
        other.internalGetLabels())) return false;
    if (hasTrafficPolicy() != other.hasTrafficPolicy()) return false;
    if (hasTrafficPolicy()) {
      if (!getTrafficPolicy()
          .equals(other.getTrafficPolicy())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (!internalGetLabels().getMap().isEmpty()) {
      hash = (37 * hash) + LABELS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLabels().hashCode();
    }
    if (hasTrafficPolicy()) {
      hash = (37 * hash) + TRAFFIC_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getTrafficPolicy().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.Subset parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.Subset parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Subset parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.Subset parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Subset parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.Subset parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Subset parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.Subset parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Subset parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.Subset parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Subset parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.Subset parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.Subset prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A subset of endpoints of a service. Subsets can be used for scenarios
   * like A/B testing, or routing to a specific version of a service. Refer
   * to [VirtualService](https://istio.io/docs/reference/config/networking/virtual-service/#VirtualService) documentation for examples of using
   * subsets in these scenarios. In addition, traffic policies defined at the
   * service-level can be overridden at a subset-level. The following rule
   * uses a round robin load balancing policy for all traffic going to a
   * subset named testversion that is composed of endpoints (e.g., pods) with
   * labels (version:v3).
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-ratings
   * spec:
   *   host: ratings.prod.svc.cluster.local
   *   trafficPolicy:
   *     loadBalancer:
   *       simple: LEAST_CONN
   *   subsets:
   *   - name: testversion
   *     labels:
   *       version: v3
   *     trafficPolicy:
   *       loadBalancer:
   *         simple: ROUND_ROBIN
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-ratings
   * spec:
   *   host: ratings.prod.svc.cluster.local
   *   trafficPolicy:
   *     loadBalancer:
   *       simple: LEAST_CONN
   *   subsets:
   *   - name: testversion
   *     labels:
   *       version: v3
   *     trafficPolicy:
   *       loadBalancer:
   *         simple: ROUND_ROBIN
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * **Note:** Policies specified for subsets will not take effect until
   * a route rule explicitly sends traffic to this subset.
   * One or more labels are typically required to identify the subset destination,
   * however, when the corresponding DestinationRule represents a host that
   * supports multiple SNI hosts (e.g., an egress gateway), a subset without labels
   * may be meaningful. In this case a traffic policy with [ClientTLSSettings](#ClientTLSSettings)
   * can be used to identify a specific SNI host corresponding to the named subset.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.Subset}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.Subset)
      io.ourea.adapter.model.istio.SubsetOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.Subset.class, io.ourea.adapter.model.istio.Subset.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.Subset.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      internalGetMutableLabels().clear();
      if (trafficPolicyBuilder_ == null) {
        trafficPolicy_ = null;
      } else {
        trafficPolicy_ = null;
        trafficPolicyBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_Subset_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.Subset getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.Subset.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.Subset build() {
      io.ourea.adapter.model.istio.Subset result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.Subset buildPartial() {
      io.ourea.adapter.model.istio.Subset result = new io.ourea.adapter.model.istio.Subset(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      result.labels_ = internalGetLabels();
      result.labels_.makeImmutable();
      if (trafficPolicyBuilder_ == null) {
        result.trafficPolicy_ = trafficPolicy_;
      } else {
        result.trafficPolicy_ = trafficPolicyBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.Subset) {
        return mergeFrom((io.ourea.adapter.model.istio.Subset)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.Subset other) {
      if (other == io.ourea.adapter.model.istio.Subset.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      internalGetMutableLabels().mergeFrom(
          other.internalGetLabels());
      if (other.hasTrafficPolicy()) {
        mergeTrafficPolicy(other.getTrafficPolicy());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.Subset parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.Subset) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Name of the subset. The service name and the subset name can
     * be used for traffic splitting in a route rule.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the subset. The service name and the subset name can
     * be used for traffic splitting in a route rule.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the subset. The service name and the subset name can
     * be used for traffic splitting in a route rule.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the subset. The service name and the subset name can
     * be used for traffic splitting in a route rule.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the subset. The service name and the subset name can
     * be used for traffic splitting in a route rule.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableLabels() {
      onChanged();;
      if (labels_ == null) {
        labels_ = com.google.protobuf.MapField.newMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      if (!labels_.isMutable()) {
        labels_ = labels_.copy();
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */

    @java.lang.Override
    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLabels() {
      internalGetMutableLabels().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */

    public Builder removeLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableLabels().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableLabels() {
      return internalGetMutableLabels().getMutableMap();
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */
    public Builder putLabels(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableLabels().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Labels apply a filter over the endpoints of a service in the
     * service registry. See route rules for examples of usage.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 2;</code>
     */

    public Builder putAllLabels(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableLabels().getMutableMap()
          .putAll(values);
      return this;
    }

    private io.ourea.adapter.model.istio.TrafficPolicy trafficPolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.TrafficPolicy, io.ourea.adapter.model.istio.TrafficPolicy.Builder, io.ourea.adapter.model.istio.TrafficPolicyOrBuilder> trafficPolicyBuilder_;
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     * @return Whether the trafficPolicy field is set.
     */
    public boolean hasTrafficPolicy() {
      return trafficPolicyBuilder_ != null || trafficPolicy_ != null;
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     * @return The trafficPolicy.
     */
    public io.ourea.adapter.model.istio.TrafficPolicy getTrafficPolicy() {
      if (trafficPolicyBuilder_ == null) {
        return trafficPolicy_ == null ? io.ourea.adapter.model.istio.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
      } else {
        return trafficPolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     */
    public Builder setTrafficPolicy(io.ourea.adapter.model.istio.TrafficPolicy value) {
      if (trafficPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        trafficPolicy_ = value;
        onChanged();
      } else {
        trafficPolicyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     */
    public Builder setTrafficPolicy(
        io.ourea.adapter.model.istio.TrafficPolicy.Builder builderForValue) {
      if (trafficPolicyBuilder_ == null) {
        trafficPolicy_ = builderForValue.build();
        onChanged();
      } else {
        trafficPolicyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     */
    public Builder mergeTrafficPolicy(io.ourea.adapter.model.istio.TrafficPolicy value) {
      if (trafficPolicyBuilder_ == null) {
        if (trafficPolicy_ != null) {
          trafficPolicy_ =
            io.ourea.adapter.model.istio.TrafficPolicy.newBuilder(trafficPolicy_).mergeFrom(value).buildPartial();
        } else {
          trafficPolicy_ = value;
        }
        onChanged();
      } else {
        trafficPolicyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     */
    public Builder clearTrafficPolicy() {
      if (trafficPolicyBuilder_ == null) {
        trafficPolicy_ = null;
        onChanged();
      } else {
        trafficPolicy_ = null;
        trafficPolicyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     */
    public io.ourea.adapter.model.istio.TrafficPolicy.Builder getTrafficPolicyBuilder() {
      
      onChanged();
      return getTrafficPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     */
    public io.ourea.adapter.model.istio.TrafficPolicyOrBuilder getTrafficPolicyOrBuilder() {
      if (trafficPolicyBuilder_ != null) {
        return trafficPolicyBuilder_.getMessageOrBuilder();
      } else {
        return trafficPolicy_ == null ?
            io.ourea.adapter.model.istio.TrafficPolicy.getDefaultInstance() : trafficPolicy_;
      }
    }
    /**
     * <pre>
     * Traffic policies that apply to this subset. Subsets inherit the
     * traffic policies specified at the DestinationRule level. Settings
     * specified at the subset level will override the corresponding settings
     * specified at the DestinationRule level.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.TrafficPolicy traffic_policy = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.TrafficPolicy, io.ourea.adapter.model.istio.TrafficPolicy.Builder, io.ourea.adapter.model.istio.TrafficPolicyOrBuilder> 
        getTrafficPolicyFieldBuilder() {
      if (trafficPolicyBuilder_ == null) {
        trafficPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.TrafficPolicy, io.ourea.adapter.model.istio.TrafficPolicy.Builder, io.ourea.adapter.model.istio.TrafficPolicyOrBuilder>(
                getTrafficPolicy(),
                getParentForChildren(),
                isClean());
        trafficPolicy_ = null;
      }
      return trafficPolicyBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.Subset)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Subset)
  private static final io.ourea.adapter.model.istio.Subset DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.Subset();
  }

  public static io.ourea.adapter.model.istio.Subset getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Subset>
      PARSER = new com.google.protobuf.AbstractParser<Subset>() {
    @java.lang.Override
    public Subset parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Subset(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Subset> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Subset> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.Subset getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

