// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: destination_rule.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * Connection pool settings for an upstream host. The settings apply to
 * each individual host in the upstream service.  See Envoy's [circuit
 * breaker](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/circuit_breaking)
 * for more details. Connection pool settings can be applied at the TCP
 * level as well as at HTTP level.
 * For example, the following rule sets a limit of 100 connections to redis
 * service called myredissrv with a connect timeout of 30ms
 * {{&lt;tabset category-name="example"&gt;}}
 * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1alpha3
 * kind: DestinationRule
 * metadata:
 *   name: bookinfo-redis
 * spec:
 *   host: myredissrv.prod.svc.cluster.local
 *   trafficPolicy:
 *     connectionPool:
 *       tcp:
 *         maxConnections: 100
 *         connectTimeout: 30ms
 *         tcpKeepalive:
 *           time: 7200s
 *           interval: 75s
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1beta1
 * kind: DestinationRule
 * metadata:
 *   name: bookinfo-redis
 * spec:
 *   host: myredissrv.prod.svc.cluster.local
 *   trafficPolicy:
 *     connectionPool:
 *       tcp:
 *         maxConnections: 100
 *         connectTimeout: 30ms
 *         tcpKeepalive:
 *           time: 7200s
 *           interval: 75s
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;/tabset&gt;}}
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings}
 */
public final class ConnectionPoolSettings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ConnectionPoolSettings)
    ConnectionPoolSettingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ConnectionPoolSettings.newBuilder() to construct.
  private ConnectionPoolSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConnectionPoolSettings() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ConnectionPoolSettings();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ConnectionPoolSettings(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.Builder subBuilder = null;
            if (tcp_ != null) {
              subBuilder = tcp_.toBuilder();
            }
            tcp_ = input.readMessage(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tcp_);
              tcp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.Builder subBuilder = null;
            if (http_ != null) {
              subBuilder = http_.toBuilder();
            }
            http_ = input.readMessage(io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(http_);
              http_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.ConnectionPoolSettings.class, io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder.class);
  }

  public interface TCPSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
     * </pre>
     *
     * <code>int32 max_connections = 1;</code>
     * @return The maxConnections.
     */
    int getMaxConnections();

    /**
     * <pre>
     * TCP connection timeout. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration connect_timeout = 2;</code>
     * @return Whether the connectTimeout field is set.
     */
    boolean hasConnectTimeout();
    /**
     * <pre>
     * TCP connection timeout. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration connect_timeout = 2;</code>
     * @return The connectTimeout.
     */
    com.google.protobuf.Duration getConnectTimeout();
    /**
     * <pre>
     * TCP connection timeout. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration connect_timeout = 2;</code>
     */
    com.google.protobuf.DurationOrBuilder getConnectTimeoutOrBuilder();

    /**
     * <pre>
     * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
     * @return Whether the tcpKeepalive field is set.
     */
    boolean hasTcpKeepalive();
    /**
     * <pre>
     * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
     * @return The tcpKeepalive.
     */
    io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive getTcpKeepalive();
    /**
     * <pre>
     * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
     */
    io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder getTcpKeepaliveOrBuilder();
  }
  /**
   * <pre>
   * Settings common to both HTTP and TCP upstream connections.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings}
   */
  public static final class TCPSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
      TCPSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TCPSettings.newBuilder() to construct.
    private TCPSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TCPSettings() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TCPSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TCPSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              maxConnections_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (connectTimeout_ != null) {
                subBuilder = connectTimeout_.toBuilder();
              }
              connectTimeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connectTimeout_);
                connectTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder subBuilder = null;
              if (tcpKeepalive_ != null) {
                subBuilder = tcpKeepalive_.toBuilder();
              }
              tcpKeepalive_ = input.readMessage(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tcpKeepalive_);
                tcpKeepalive_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.class, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.Builder.class);
    }

    public interface TcpKeepaliveOrBuilder extends
        // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Maximum number of keepalive probes to send without response before
       * deciding the connection is dead. Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 9.)
       * </pre>
       *
       * <code>uint32 probes = 1;</code>
       * @return The probes.
       */
      int getProbes();

      /**
       * <pre>
       * The time duration a connection needs to be idle before keep-alive
       * probes start being sent. Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
       * </pre>
       *
       * <code>.google.protobuf.Duration time = 2;</code>
       * @return Whether the time field is set.
       */
      boolean hasTime();
      /**
       * <pre>
       * The time duration a connection needs to be idle before keep-alive
       * probes start being sent. Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
       * </pre>
       *
       * <code>.google.protobuf.Duration time = 2;</code>
       * @return The time.
       */
      com.google.protobuf.Duration getTime();
      /**
       * <pre>
       * The time duration a connection needs to be idle before keep-alive
       * probes start being sent. Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
       * </pre>
       *
       * <code>.google.protobuf.Duration time = 2;</code>
       */
      com.google.protobuf.DurationOrBuilder getTimeOrBuilder();

      /**
       * <pre>
       * The time duration between keep-alive probes.
       * Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 75s.)
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 3;</code>
       * @return Whether the interval field is set.
       */
      boolean hasInterval();
      /**
       * <pre>
       * The time duration between keep-alive probes.
       * Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 75s.)
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 3;</code>
       * @return The interval.
       */
      com.google.protobuf.Duration getInterval();
      /**
       * <pre>
       * The time duration between keep-alive probes.
       * Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 75s.)
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 3;</code>
       */
      com.google.protobuf.DurationOrBuilder getIntervalOrBuilder();
    }
    /**
     * <pre>
     * TCP keepalive.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive}
     */
    public static final class TcpKeepalive extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
        TcpKeepaliveOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TcpKeepalive.newBuilder() to construct.
      private TcpKeepalive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TcpKeepalive() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TcpKeepalive();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TcpKeepalive(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                probes_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (time_ != null) {
                  subBuilder = time_.toBuilder();
                }
                time_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(time_);
                  time_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (interval_ != null) {
                  subBuilder = interval_.toBuilder();
                }
                interval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(interval_);
                  interval_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.class, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder.class);
      }

      public static final int PROBES_FIELD_NUMBER = 1;
      private int probes_;
      /**
       * <pre>
       * Maximum number of keepalive probes to send without response before
       * deciding the connection is dead. Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 9.)
       * </pre>
       *
       * <code>uint32 probes = 1;</code>
       * @return The probes.
       */
      @java.lang.Override
      public int getProbes() {
        return probes_;
      }

      public static final int TIME_FIELD_NUMBER = 2;
      private com.google.protobuf.Duration time_;
      /**
       * <pre>
       * The time duration a connection needs to be idle before keep-alive
       * probes start being sent. Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
       * </pre>
       *
       * <code>.google.protobuf.Duration time = 2;</code>
       * @return Whether the time field is set.
       */
      @java.lang.Override
      public boolean hasTime() {
        return time_ != null;
      }
      /**
       * <pre>
       * The time duration a connection needs to be idle before keep-alive
       * probes start being sent. Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
       * </pre>
       *
       * <code>.google.protobuf.Duration time = 2;</code>
       * @return The time.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getTime() {
        return time_ == null ? com.google.protobuf.Duration.getDefaultInstance() : time_;
      }
      /**
       * <pre>
       * The time duration a connection needs to be idle before keep-alive
       * probes start being sent. Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
       * </pre>
       *
       * <code>.google.protobuf.Duration time = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getTimeOrBuilder() {
        return getTime();
      }

      public static final int INTERVAL_FIELD_NUMBER = 3;
      private com.google.protobuf.Duration interval_;
      /**
       * <pre>
       * The time duration between keep-alive probes.
       * Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 75s.)
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 3;</code>
       * @return Whether the interval field is set.
       */
      @java.lang.Override
      public boolean hasInterval() {
        return interval_ != null;
      }
      /**
       * <pre>
       * The time duration between keep-alive probes.
       * Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 75s.)
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 3;</code>
       * @return The interval.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getInterval() {
        return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
      }
      /**
       * <pre>
       * The time duration between keep-alive probes.
       * Default is to use the OS level configuration
       * (unless overridden, Linux defaults to 75s.)
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
        return getInterval();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (probes_ != 0) {
          output.writeUInt32(1, probes_);
        }
        if (time_ != null) {
          output.writeMessage(2, getTime());
        }
        if (interval_ != null) {
          output.writeMessage(3, getInterval());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (probes_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, probes_);
        }
        if (time_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getTime());
        }
        if (interval_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getInterval());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive)) {
          return super.equals(obj);
        }
        io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive other = (io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive) obj;

        if (getProbes()
            != other.getProbes()) return false;
        if (hasTime() != other.hasTime()) return false;
        if (hasTime()) {
          if (!getTime()
              .equals(other.getTime())) return false;
        }
        if (hasInterval() != other.hasInterval()) return false;
        if (hasInterval()) {
          if (!getInterval()
              .equals(other.getInterval())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PROBES_FIELD_NUMBER;
        hash = (53 * hash) + getProbes();
        if (hasTime()) {
          hash = (37 * hash) + TIME_FIELD_NUMBER;
          hash = (53 * hash) + getTime().hashCode();
        }
        if (hasInterval()) {
          hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getInterval().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * TCP keepalive.
       * </pre>
       *
       * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
          io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.class, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder.class);
        }

        // Construct using io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          probes_ = 0;

          if (timeBuilder_ == null) {
            time_ = null;
          } else {
            time_ = null;
            timeBuilder_ = null;
          }
          if (intervalBuilder_ == null) {
            interval_ = null;
          } else {
            interval_ = null;
            intervalBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_TcpKeepalive_descriptor;
        }

        @java.lang.Override
        public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive getDefaultInstanceForType() {
          return io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance();
        }

        @java.lang.Override
        public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive build() {
          io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive buildPartial() {
          io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive result = new io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive(this);
          result.probes_ = probes_;
          if (timeBuilder_ == null) {
            result.time_ = time_;
          } else {
            result.time_ = timeBuilder_.build();
          }
          if (intervalBuilder_ == null) {
            result.interval_ = interval_;
          } else {
            result.interval_ = intervalBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive) {
            return mergeFrom((io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive other) {
          if (other == io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance()) return this;
          if (other.getProbes() != 0) {
            setProbes(other.getProbes());
          }
          if (other.hasTime()) {
            mergeTime(other.getTime());
          }
          if (other.hasInterval()) {
            mergeInterval(other.getInterval());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int probes_ ;
        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before
         * deciding the connection is dead. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>uint32 probes = 1;</code>
         * @return The probes.
         */
        @java.lang.Override
        public int getProbes() {
          return probes_;
        }
        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before
         * deciding the connection is dead. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>uint32 probes = 1;</code>
         * @param value The probes to set.
         * @return This builder for chaining.
         */
        public Builder setProbes(int value) {
          
          probes_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before
         * deciding the connection is dead. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>uint32 probes = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearProbes() {
          
          probes_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Duration time_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> timeBuilder_;
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         * @return Whether the time field is set.
         */
        public boolean hasTime() {
          return timeBuilder_ != null || time_ != null;
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         * @return The time.
         */
        public com.google.protobuf.Duration getTime() {
          if (timeBuilder_ == null) {
            return time_ == null ? com.google.protobuf.Duration.getDefaultInstance() : time_;
          } else {
            return timeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         */
        public Builder setTime(com.google.protobuf.Duration value) {
          if (timeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            time_ = value;
            onChanged();
          } else {
            timeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         */
        public Builder setTime(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (timeBuilder_ == null) {
            time_ = builderForValue.build();
            onChanged();
          } else {
            timeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         */
        public Builder mergeTime(com.google.protobuf.Duration value) {
          if (timeBuilder_ == null) {
            if (time_ != null) {
              time_ =
                com.google.protobuf.Duration.newBuilder(time_).mergeFrom(value).buildPartial();
            } else {
              time_ = value;
            }
            onChanged();
          } else {
            timeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         */
        public Builder clearTime() {
          if (timeBuilder_ == null) {
            time_ = null;
            onChanged();
          } else {
            time_ = null;
            timeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         */
        public com.google.protobuf.Duration.Builder getTimeBuilder() {
          
          onChanged();
          return getTimeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         */
        public com.google.protobuf.DurationOrBuilder getTimeOrBuilder() {
          if (timeBuilder_ != null) {
            return timeBuilder_.getMessageOrBuilder();
          } else {
            return time_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : time_;
          }
        }
        /**
         * <pre>
         * The time duration a connection needs to be idle before keep-alive
         * probes start being sent. Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.Duration time = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getTimeFieldBuilder() {
          if (timeBuilder_ == null) {
            timeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getTime(),
                    getParentForChildren(),
                    isClean());
            time_ = null;
          }
          return timeBuilder_;
        }

        private com.google.protobuf.Duration interval_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> intervalBuilder_;
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         * @return Whether the interval field is set.
         */
        public boolean hasInterval() {
          return intervalBuilder_ != null || interval_ != null;
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         * @return The interval.
         */
        public com.google.protobuf.Duration getInterval() {
          if (intervalBuilder_ == null) {
            return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
          } else {
            return intervalBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         */
        public Builder setInterval(com.google.protobuf.Duration value) {
          if (intervalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            interval_ = value;
            onChanged();
          } else {
            intervalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         */
        public Builder setInterval(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (intervalBuilder_ == null) {
            interval_ = builderForValue.build();
            onChanged();
          } else {
            intervalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         */
        public Builder mergeInterval(com.google.protobuf.Duration value) {
          if (intervalBuilder_ == null) {
            if (interval_ != null) {
              interval_ =
                com.google.protobuf.Duration.newBuilder(interval_).mergeFrom(value).buildPartial();
            } else {
              interval_ = value;
            }
            onChanged();
          } else {
            intervalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         */
        public Builder clearInterval() {
          if (intervalBuilder_ == null) {
            interval_ = null;
            onChanged();
          } else {
            interval_ = null;
            intervalBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         */
        public com.google.protobuf.Duration.Builder getIntervalBuilder() {
          
          onChanged();
          return getIntervalFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         */
        public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
          if (intervalBuilder_ != null) {
            return intervalBuilder_.getMessageOrBuilder();
          } else {
            return interval_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : interval_;
          }
        }
        /**
         * <pre>
         * The time duration between keep-alive probes.
         * Default is to use the OS level configuration
         * (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getIntervalFieldBuilder() {
          if (intervalBuilder_ == null) {
            intervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getInterval(),
                    getParentForChildren(),
                    isClean());
            interval_ = null;
          }
          return intervalBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
      }

      // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive)
      private static final io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive();
      }

      public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TcpKeepalive>
          PARSER = new com.google.protobuf.AbstractParser<TcpKeepalive>() {
        @java.lang.Override
        public TcpKeepalive parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TcpKeepalive(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TcpKeepalive> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TcpKeepalive> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int MAX_CONNECTIONS_FIELD_NUMBER = 1;
    private int maxConnections_;
    /**
     * <pre>
     * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
     * </pre>
     *
     * <code>int32 max_connections = 1;</code>
     * @return The maxConnections.
     */
    @java.lang.Override
    public int getMaxConnections() {
      return maxConnections_;
    }

    public static final int CONNECT_TIMEOUT_FIELD_NUMBER = 2;
    private com.google.protobuf.Duration connectTimeout_;
    /**
     * <pre>
     * TCP connection timeout. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration connect_timeout = 2;</code>
     * @return Whether the connectTimeout field is set.
     */
    @java.lang.Override
    public boolean hasConnectTimeout() {
      return connectTimeout_ != null;
    }
    /**
     * <pre>
     * TCP connection timeout. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration connect_timeout = 2;</code>
     * @return The connectTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getConnectTimeout() {
      return connectTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : connectTimeout_;
    }
    /**
     * <pre>
     * TCP connection timeout. format:
     * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration connect_timeout = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getConnectTimeoutOrBuilder() {
      return getConnectTimeout();
    }

    public static final int TCP_KEEPALIVE_FIELD_NUMBER = 3;
    private io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcpKeepalive_;
    /**
     * <pre>
     * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
     * @return Whether the tcpKeepalive field is set.
     */
    @java.lang.Override
    public boolean hasTcpKeepalive() {
      return tcpKeepalive_ != null;
    }
    /**
     * <pre>
     * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
     * @return The tcpKeepalive.
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive getTcpKeepalive() {
      return tcpKeepalive_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance() : tcpKeepalive_;
    }
    /**
     * <pre>
     * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder getTcpKeepaliveOrBuilder() {
      return getTcpKeepalive();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxConnections_ != 0) {
        output.writeInt32(1, maxConnections_);
      }
      if (connectTimeout_ != null) {
        output.writeMessage(2, getConnectTimeout());
      }
      if (tcpKeepalive_ != null) {
        output.writeMessage(3, getTcpKeepalive());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxConnections_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxConnections_);
      }
      if (connectTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConnectTimeout());
      }
      if (tcpKeepalive_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTcpKeepalive());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings)) {
        return super.equals(obj);
      }
      io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings other = (io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings) obj;

      if (getMaxConnections()
          != other.getMaxConnections()) return false;
      if (hasConnectTimeout() != other.hasConnectTimeout()) return false;
      if (hasConnectTimeout()) {
        if (!getConnectTimeout()
            .equals(other.getConnectTimeout())) return false;
      }
      if (hasTcpKeepalive() != other.hasTcpKeepalive()) return false;
      if (hasTcpKeepalive()) {
        if (!getTcpKeepalive()
            .equals(other.getTcpKeepalive())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAX_CONNECTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxConnections();
      if (hasConnectTimeout()) {
        hash = (37 * hash) + CONNECT_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getConnectTimeout().hashCode();
      }
      if (hasTcpKeepalive()) {
        hash = (37 * hash) + TCP_KEEPALIVE_FIELD_NUMBER;
        hash = (53 * hash) + getTcpKeepalive().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
        io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.class, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.Builder.class);
      }

      // Construct using io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        maxConnections_ = 0;

        if (connectTimeoutBuilder_ == null) {
          connectTimeout_ = null;
        } else {
          connectTimeout_ = null;
          connectTimeoutBuilder_ = null;
        }
        if (tcpKeepaliveBuilder_ == null) {
          tcpKeepalive_ = null;
        } else {
          tcpKeepalive_ = null;
          tcpKeepaliveBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_TCPSettings_descriptor;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings getDefaultInstanceForType() {
        return io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.getDefaultInstance();
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings build() {
        io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings buildPartial() {
        io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings result = new io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings(this);
        result.maxConnections_ = maxConnections_;
        if (connectTimeoutBuilder_ == null) {
          result.connectTimeout_ = connectTimeout_;
        } else {
          result.connectTimeout_ = connectTimeoutBuilder_.build();
        }
        if (tcpKeepaliveBuilder_ == null) {
          result.tcpKeepalive_ = tcpKeepalive_;
        } else {
          result.tcpKeepalive_ = tcpKeepaliveBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings) {
          return mergeFrom((io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings other) {
        if (other == io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.getDefaultInstance()) return this;
        if (other.getMaxConnections() != 0) {
          setMaxConnections(other.getMaxConnections());
        }
        if (other.hasConnectTimeout()) {
          mergeConnectTimeout(other.getConnectTimeout());
        }
        if (other.hasTcpKeepalive()) {
          mergeTcpKeepalive(other.getTcpKeepalive());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int maxConnections_ ;
      /**
       * <pre>
       * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
       * </pre>
       *
       * <code>int32 max_connections = 1;</code>
       * @return The maxConnections.
       */
      @java.lang.Override
      public int getMaxConnections() {
        return maxConnections_;
      }
      /**
       * <pre>
       * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
       * </pre>
       *
       * <code>int32 max_connections = 1;</code>
       * @param value The maxConnections to set.
       * @return This builder for chaining.
       */
      public Builder setMaxConnections(int value) {
        
        maxConnections_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.
       * </pre>
       *
       * <code>int32 max_connections = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxConnections() {
        
        maxConnections_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Duration connectTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> connectTimeoutBuilder_;
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       * @return Whether the connectTimeout field is set.
       */
      public boolean hasConnectTimeout() {
        return connectTimeoutBuilder_ != null || connectTimeout_ != null;
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       * @return The connectTimeout.
       */
      public com.google.protobuf.Duration getConnectTimeout() {
        if (connectTimeoutBuilder_ == null) {
          return connectTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : connectTimeout_;
        } else {
          return connectTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       */
      public Builder setConnectTimeout(com.google.protobuf.Duration value) {
        if (connectTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connectTimeout_ = value;
          onChanged();
        } else {
          connectTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       */
      public Builder setConnectTimeout(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (connectTimeoutBuilder_ == null) {
          connectTimeout_ = builderForValue.build();
          onChanged();
        } else {
          connectTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       */
      public Builder mergeConnectTimeout(com.google.protobuf.Duration value) {
        if (connectTimeoutBuilder_ == null) {
          if (connectTimeout_ != null) {
            connectTimeout_ =
              com.google.protobuf.Duration.newBuilder(connectTimeout_).mergeFrom(value).buildPartial();
          } else {
            connectTimeout_ = value;
          }
          onChanged();
        } else {
          connectTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       */
      public Builder clearConnectTimeout() {
        if (connectTimeoutBuilder_ == null) {
          connectTimeout_ = null;
          onChanged();
        } else {
          connectTimeout_ = null;
          connectTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       */
      public com.google.protobuf.Duration.Builder getConnectTimeoutBuilder() {
        
        onChanged();
        return getConnectTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       */
      public com.google.protobuf.DurationOrBuilder getConnectTimeoutOrBuilder() {
        if (connectTimeoutBuilder_ != null) {
          return connectTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return connectTimeout_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : connectTimeout_;
        }
      }
      /**
       * <pre>
       * TCP connection timeout. format:
       * 1h/1m/1s/1ms. MUST BE &gt;=1ms. Default is 10s.
       * </pre>
       *
       * <code>.google.protobuf.Duration connect_timeout = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getConnectTimeoutFieldBuilder() {
        if (connectTimeoutBuilder_ == null) {
          connectTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getConnectTimeout(),
                  getParentForChildren(),
                  isClean());
          connectTimeout_ = null;
        }
        return connectTimeoutBuilder_;
      }

      private io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcpKeepalive_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder> tcpKeepaliveBuilder_;
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       * @return Whether the tcpKeepalive field is set.
       */
      public boolean hasTcpKeepalive() {
        return tcpKeepaliveBuilder_ != null || tcpKeepalive_ != null;
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       * @return The tcpKeepalive.
       */
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive getTcpKeepalive() {
        if (tcpKeepaliveBuilder_ == null) {
          return tcpKeepalive_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance() : tcpKeepalive_;
        } else {
          return tcpKeepaliveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       */
      public Builder setTcpKeepalive(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive value) {
        if (tcpKeepaliveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tcpKeepalive_ = value;
          onChanged();
        } else {
          tcpKeepaliveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       */
      public Builder setTcpKeepalive(
          io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder builderForValue) {
        if (tcpKeepaliveBuilder_ == null) {
          tcpKeepalive_ = builderForValue.build();
          onChanged();
        } else {
          tcpKeepaliveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       */
      public Builder mergeTcpKeepalive(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive value) {
        if (tcpKeepaliveBuilder_ == null) {
          if (tcpKeepalive_ != null) {
            tcpKeepalive_ =
              io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.newBuilder(tcpKeepalive_).mergeFrom(value).buildPartial();
          } else {
            tcpKeepalive_ = value;
          }
          onChanged();
        } else {
          tcpKeepaliveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       */
      public Builder clearTcpKeepalive() {
        if (tcpKeepaliveBuilder_ == null) {
          tcpKeepalive_ = null;
          onChanged();
        } else {
          tcpKeepalive_ = null;
          tcpKeepaliveBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       */
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder getTcpKeepaliveBuilder() {
        
        onChanged();
        return getTcpKeepaliveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       */
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder getTcpKeepaliveOrBuilder() {
        if (tcpKeepaliveBuilder_ != null) {
          return tcpKeepaliveBuilder_.getMessageOrBuilder();
        } else {
          return tcpKeepalive_ == null ?
              io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.getDefaultInstance() : tcpKeepalive_;
        }
      }
      /**
       * <pre>
       * If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder> 
          getTcpKeepaliveFieldBuilder() {
        if (tcpKeepaliveBuilder_ == null) {
          tcpKeepaliveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepalive.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.TcpKeepaliveOrBuilder>(
                  getTcpKeepalive(),
                  getParentForChildren(),
                  isClean());
          tcpKeepalive_ = null;
        }
        return tcpKeepaliveBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings)
    private static final io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings();
    }

    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TCPSettings>
        PARSER = new com.google.protobuf.AbstractParser<TCPSettings>() {
      @java.lang.Override
      public TCPSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TCPSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TCPSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TCPSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HTTPSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
     * </pre>
     *
     * <code>int32 http1_max_pending_requests = 1;</code>
     * @return The http1MaxPendingRequests.
     */
    int getHttp1MaxPendingRequests();

    /**
     * <pre>
     * Maximum number of requests to a backend. Default 2^32-1.
     * </pre>
     *
     * <code>int32 http2_max_requests = 2;</code>
     * @return The http2MaxRequests.
     */
    int getHttp2MaxRequests();

    /**
     * <pre>
     * Maximum number of requests per connection to a backend. Setting this
     * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
     * up to 2^29.
     * </pre>
     *
     * <code>int32 max_requests_per_connection = 3;</code>
     * @return The maxRequestsPerConnection.
     */
    int getMaxRequestsPerConnection();

    /**
     * <pre>
     * Maximum number of retries that can be outstanding to all hosts in a
     * cluster at a given time. Defaults to 2^32-1.
     * </pre>
     *
     * <code>int32 max_retries = 4;</code>
     * @return The maxRetries.
     */
    int getMaxRetries();

    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
     * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
     * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 5;</code>
     * @return Whether the idleTimeout field is set.
     */
    boolean hasIdleTimeout();
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
     * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
     * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 5;</code>
     * @return The idleTimeout.
     */
    com.google.protobuf.Duration getIdleTimeout();
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
     * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
     * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 5;</code>
     */
    com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder();

    /**
     * <pre>
     * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
     * @return The enum numeric value on the wire for h2UpgradePolicy.
     */
    int getH2UpgradePolicyValue();
    /**
     * <pre>
     * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
     * @return The h2UpgradePolicy.
     */
    io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy getH2UpgradePolicy();
  }
  /**
   * <pre>
   * Settings applicable to HTTP1.1/HTTP2/GRPC connections.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings}
   */
  public static final class HTTPSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
      HTTPSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HTTPSettings.newBuilder() to construct.
    private HTTPSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HTTPSettings() {
      h2UpgradePolicy_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HTTPSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HTTPSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              http1MaxPendingRequests_ = input.readInt32();
              break;
            }
            case 16: {

              http2MaxRequests_ = input.readInt32();
              break;
            }
            case 24: {

              maxRequestsPerConnection_ = input.readInt32();
              break;
            }
            case 32: {

              maxRetries_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (idleTimeout_ != null) {
                subBuilder = idleTimeout_.toBuilder();
              }
              idleTimeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(idleTimeout_);
                idleTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              h2UpgradePolicy_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.class, io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.Builder.class);
    }

    /**
     * <pre>
     * Policy for upgrading http1.1 connections to http2.
     * </pre>
     *
     * Protobuf enum {@code istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy}
     */
    public enum H2UpgradePolicy
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Use the global default.
       * </pre>
       *
       * <code>DEFAULT = 0;</code>
       */
      DEFAULT(0),
      /**
       * <pre>
       * Do not upgrade the connection to http2.
       * This opt-out option overrides the default.
       * </pre>
       *
       * <code>DO_NOT_UPGRADE = 1;</code>
       */
      DO_NOT_UPGRADE(1),
      /**
       * <pre>
       * Upgrade the connection to http2.
       * This opt-in option overrides the default.
       * </pre>
       *
       * <code>UPGRADE = 2;</code>
       */
      UPGRADE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Use the global default.
       * </pre>
       *
       * <code>DEFAULT = 0;</code>
       */
      public static final int DEFAULT_VALUE = 0;
      /**
       * <pre>
       * Do not upgrade the connection to http2.
       * This opt-out option overrides the default.
       * </pre>
       *
       * <code>DO_NOT_UPGRADE = 1;</code>
       */
      public static final int DO_NOT_UPGRADE_VALUE = 1;
      /**
       * <pre>
       * Upgrade the connection to http2.
       * This opt-in option overrides the default.
       * </pre>
       *
       * <code>UPGRADE = 2;</code>
       */
      public static final int UPGRADE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static H2UpgradePolicy valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static H2UpgradePolicy forNumber(int value) {
        switch (value) {
          case 0: return DEFAULT;
          case 1: return DO_NOT_UPGRADE;
          case 2: return UPGRADE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<H2UpgradePolicy>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          H2UpgradePolicy> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<H2UpgradePolicy>() {
              public H2UpgradePolicy findValueByNumber(int number) {
                return H2UpgradePolicy.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.getDescriptor().getEnumTypes().get(0);
      }

      private static final H2UpgradePolicy[] VALUES = values();

      public static H2UpgradePolicy valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private H2UpgradePolicy(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy)
    }

    public static final int HTTP1_MAX_PENDING_REQUESTS_FIELD_NUMBER = 1;
    private int http1MaxPendingRequests_;
    /**
     * <pre>
     * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
     * </pre>
     *
     * <code>int32 http1_max_pending_requests = 1;</code>
     * @return The http1MaxPendingRequests.
     */
    @java.lang.Override
    public int getHttp1MaxPendingRequests() {
      return http1MaxPendingRequests_;
    }

    public static final int HTTP2_MAX_REQUESTS_FIELD_NUMBER = 2;
    private int http2MaxRequests_;
    /**
     * <pre>
     * Maximum number of requests to a backend. Default 2^32-1.
     * </pre>
     *
     * <code>int32 http2_max_requests = 2;</code>
     * @return The http2MaxRequests.
     */
    @java.lang.Override
    public int getHttp2MaxRequests() {
      return http2MaxRequests_;
    }

    public static final int MAX_REQUESTS_PER_CONNECTION_FIELD_NUMBER = 3;
    private int maxRequestsPerConnection_;
    /**
     * <pre>
     * Maximum number of requests per connection to a backend. Setting this
     * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
     * up to 2^29.
     * </pre>
     *
     * <code>int32 max_requests_per_connection = 3;</code>
     * @return The maxRequestsPerConnection.
     */
    @java.lang.Override
    public int getMaxRequestsPerConnection() {
      return maxRequestsPerConnection_;
    }

    public static final int MAX_RETRIES_FIELD_NUMBER = 4;
    private int maxRetries_;
    /**
     * <pre>
     * Maximum number of retries that can be outstanding to all hosts in a
     * cluster at a given time. Defaults to 2^32-1.
     * </pre>
     *
     * <code>int32 max_retries = 4;</code>
     * @return The maxRetries.
     */
    @java.lang.Override
    public int getMaxRetries() {
      return maxRetries_;
    }

    public static final int IDLE_TIMEOUT_FIELD_NUMBER = 5;
    private com.google.protobuf.Duration idleTimeout_;
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
     * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
     * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 5;</code>
     * @return Whether the idleTimeout field is set.
     */
    @java.lang.Override
    public boolean hasIdleTimeout() {
      return idleTimeout_ != null;
    }
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
     * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
     * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 5;</code>
     * @return The idleTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getIdleTimeout() {
      return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
    }
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
     * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
     * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
      return getIdleTimeout();
    }

    public static final int H2_UPGRADE_POLICY_FIELD_NUMBER = 6;
    private int h2UpgradePolicy_;
    /**
     * <pre>
     * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
     * @return The enum numeric value on the wire for h2UpgradePolicy.
     */
    @java.lang.Override public int getH2UpgradePolicyValue() {
      return h2UpgradePolicy_;
    }
    /**
     * <pre>
     * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
     * @return The h2UpgradePolicy.
     */
    @java.lang.Override public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy getH2UpgradePolicy() {
      @SuppressWarnings("deprecation")
      io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy result = io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.valueOf(h2UpgradePolicy_);
      return result == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (http1MaxPendingRequests_ != 0) {
        output.writeInt32(1, http1MaxPendingRequests_);
      }
      if (http2MaxRequests_ != 0) {
        output.writeInt32(2, http2MaxRequests_);
      }
      if (maxRequestsPerConnection_ != 0) {
        output.writeInt32(3, maxRequestsPerConnection_);
      }
      if (maxRetries_ != 0) {
        output.writeInt32(4, maxRetries_);
      }
      if (idleTimeout_ != null) {
        output.writeMessage(5, getIdleTimeout());
      }
      if (h2UpgradePolicy_ != io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.DEFAULT.getNumber()) {
        output.writeEnum(6, h2UpgradePolicy_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (http1MaxPendingRequests_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, http1MaxPendingRequests_);
      }
      if (http2MaxRequests_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, http2MaxRequests_);
      }
      if (maxRequestsPerConnection_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxRequestsPerConnection_);
      }
      if (maxRetries_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxRetries_);
      }
      if (idleTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getIdleTimeout());
      }
      if (h2UpgradePolicy_ != io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.DEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, h2UpgradePolicy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings)) {
        return super.equals(obj);
      }
      io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings other = (io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings) obj;

      if (getHttp1MaxPendingRequests()
          != other.getHttp1MaxPendingRequests()) return false;
      if (getHttp2MaxRequests()
          != other.getHttp2MaxRequests()) return false;
      if (getMaxRequestsPerConnection()
          != other.getMaxRequestsPerConnection()) return false;
      if (getMaxRetries()
          != other.getMaxRetries()) return false;
      if (hasIdleTimeout() != other.hasIdleTimeout()) return false;
      if (hasIdleTimeout()) {
        if (!getIdleTimeout()
            .equals(other.getIdleTimeout())) return false;
      }
      if (h2UpgradePolicy_ != other.h2UpgradePolicy_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HTTP1_MAX_PENDING_REQUESTS_FIELD_NUMBER;
      hash = (53 * hash) + getHttp1MaxPendingRequests();
      hash = (37 * hash) + HTTP2_MAX_REQUESTS_FIELD_NUMBER;
      hash = (53 * hash) + getHttp2MaxRequests();
      hash = (37 * hash) + MAX_REQUESTS_PER_CONNECTION_FIELD_NUMBER;
      hash = (53 * hash) + getMaxRequestsPerConnection();
      hash = (37 * hash) + MAX_RETRIES_FIELD_NUMBER;
      hash = (53 * hash) + getMaxRetries();
      if (hasIdleTimeout()) {
        hash = (37 * hash) + IDLE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getIdleTimeout().hashCode();
      }
      hash = (37 * hash) + H2_UPGRADE_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + h2UpgradePolicy_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Settings applicable to HTTP1.1/HTTP2/GRPC connections.
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
        io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.class, io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.Builder.class);
      }

      // Construct using io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        http1MaxPendingRequests_ = 0;

        http2MaxRequests_ = 0;

        maxRequestsPerConnection_ = 0;

        maxRetries_ = 0;

        if (idleTimeoutBuilder_ == null) {
          idleTimeout_ = null;
        } else {
          idleTimeout_ = null;
          idleTimeoutBuilder_ = null;
        }
        h2UpgradePolicy_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_HTTPSettings_descriptor;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings getDefaultInstanceForType() {
        return io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.getDefaultInstance();
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings build() {
        io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings buildPartial() {
        io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings result = new io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings(this);
        result.http1MaxPendingRequests_ = http1MaxPendingRequests_;
        result.http2MaxRequests_ = http2MaxRequests_;
        result.maxRequestsPerConnection_ = maxRequestsPerConnection_;
        result.maxRetries_ = maxRetries_;
        if (idleTimeoutBuilder_ == null) {
          result.idleTimeout_ = idleTimeout_;
        } else {
          result.idleTimeout_ = idleTimeoutBuilder_.build();
        }
        result.h2UpgradePolicy_ = h2UpgradePolicy_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings) {
          return mergeFrom((io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings other) {
        if (other == io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.getDefaultInstance()) return this;
        if (other.getHttp1MaxPendingRequests() != 0) {
          setHttp1MaxPendingRequests(other.getHttp1MaxPendingRequests());
        }
        if (other.getHttp2MaxRequests() != 0) {
          setHttp2MaxRequests(other.getHttp2MaxRequests());
        }
        if (other.getMaxRequestsPerConnection() != 0) {
          setMaxRequestsPerConnection(other.getMaxRequestsPerConnection());
        }
        if (other.getMaxRetries() != 0) {
          setMaxRetries(other.getMaxRetries());
        }
        if (other.hasIdleTimeout()) {
          mergeIdleTimeout(other.getIdleTimeout());
        }
        if (other.h2UpgradePolicy_ != 0) {
          setH2UpgradePolicyValue(other.getH2UpgradePolicyValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int http1MaxPendingRequests_ ;
      /**
       * <pre>
       * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http1_max_pending_requests = 1;</code>
       * @return The http1MaxPendingRequests.
       */
      @java.lang.Override
      public int getHttp1MaxPendingRequests() {
        return http1MaxPendingRequests_;
      }
      /**
       * <pre>
       * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http1_max_pending_requests = 1;</code>
       * @param value The http1MaxPendingRequests to set.
       * @return This builder for chaining.
       */
      public Builder setHttp1MaxPendingRequests(int value) {
        
        http1MaxPendingRequests_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of pending HTTP requests to a destination. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http1_max_pending_requests = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHttp1MaxPendingRequests() {
        
        http1MaxPendingRequests_ = 0;
        onChanged();
        return this;
      }

      private int http2MaxRequests_ ;
      /**
       * <pre>
       * Maximum number of requests to a backend. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http2_max_requests = 2;</code>
       * @return The http2MaxRequests.
       */
      @java.lang.Override
      public int getHttp2MaxRequests() {
        return http2MaxRequests_;
      }
      /**
       * <pre>
       * Maximum number of requests to a backend. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http2_max_requests = 2;</code>
       * @param value The http2MaxRequests to set.
       * @return This builder for chaining.
       */
      public Builder setHttp2MaxRequests(int value) {
        
        http2MaxRequests_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of requests to a backend. Default 2^32-1.
       * </pre>
       *
       * <code>int32 http2_max_requests = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHttp2MaxRequests() {
        
        http2MaxRequests_ = 0;
        onChanged();
        return this;
      }

      private int maxRequestsPerConnection_ ;
      /**
       * <pre>
       * Maximum number of requests per connection to a backend. Setting this
       * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
       * up to 2^29.
       * </pre>
       *
       * <code>int32 max_requests_per_connection = 3;</code>
       * @return The maxRequestsPerConnection.
       */
      @java.lang.Override
      public int getMaxRequestsPerConnection() {
        return maxRequestsPerConnection_;
      }
      /**
       * <pre>
       * Maximum number of requests per connection to a backend. Setting this
       * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
       * up to 2^29.
       * </pre>
       *
       * <code>int32 max_requests_per_connection = 3;</code>
       * @param value The maxRequestsPerConnection to set.
       * @return This builder for chaining.
       */
      public Builder setMaxRequestsPerConnection(int value) {
        
        maxRequestsPerConnection_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of requests per connection to a backend. Setting this
       * parameter to 1 disables keep alive. Default 0, meaning "unlimited",
       * up to 2^29.
       * </pre>
       *
       * <code>int32 max_requests_per_connection = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxRequestsPerConnection() {
        
        maxRequestsPerConnection_ = 0;
        onChanged();
        return this;
      }

      private int maxRetries_ ;
      /**
       * <pre>
       * Maximum number of retries that can be outstanding to all hosts in a
       * cluster at a given time. Defaults to 2^32-1.
       * </pre>
       *
       * <code>int32 max_retries = 4;</code>
       * @return The maxRetries.
       */
      @java.lang.Override
      public int getMaxRetries() {
        return maxRetries_;
      }
      /**
       * <pre>
       * Maximum number of retries that can be outstanding to all hosts in a
       * cluster at a given time. Defaults to 2^32-1.
       * </pre>
       *
       * <code>int32 max_retries = 4;</code>
       * @param value The maxRetries to set.
       * @return This builder for chaining.
       */
      public Builder setMaxRetries(int value) {
        
        maxRetries_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of retries that can be outstanding to all hosts in a
       * cluster at a given time. Defaults to 2^32-1.
       * </pre>
       *
       * <code>int32 max_retries = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxRetries() {
        
        maxRetries_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Duration idleTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> idleTimeoutBuilder_;
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
       * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       * @return Whether the idleTimeout field is set.
       */
      public boolean hasIdleTimeout() {
        return idleTimeoutBuilder_ != null || idleTimeout_ != null;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
       * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       * @return The idleTimeout.
       */
      public com.google.protobuf.Duration getIdleTimeout() {
        if (idleTimeoutBuilder_ == null) {
          return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
        } else {
          return idleTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
       * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       */
      public Builder setIdleTimeout(com.google.protobuf.Duration value) {
        if (idleTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          idleTimeout_ = value;
          onChanged();
        } else {
          idleTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
       * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       */
      public Builder setIdleTimeout(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (idleTimeoutBuilder_ == null) {
          idleTimeout_ = builderForValue.build();
          onChanged();
        } else {
          idleTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
       * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       */
      public Builder mergeIdleTimeout(com.google.protobuf.Duration value) {
        if (idleTimeoutBuilder_ == null) {
          if (idleTimeout_ != null) {
            idleTimeout_ =
              com.google.protobuf.Duration.newBuilder(idleTimeout_).mergeFrom(value).buildPartial();
          } else {
            idleTimeout_ = value;
          }
          onChanged();
        } else {
          idleTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
       * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       */
      public Builder clearIdleTimeout() {
        if (idleTimeoutBuilder_ == null) {
          idleTimeout_ = null;
          onChanged();
        } else {
          idleTimeout_ = null;
          idleTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
       * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       */
      public com.google.protobuf.Duration.Builder getIdleTimeoutBuilder() {
        
        onChanged();
        return getIdleTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
       * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       */
      public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
        if (idleTimeoutBuilder_ != null) {
          return idleTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return idleTimeout_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
        }
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests.
       * If not set, the default is 1 hour. When the idle timeout is reached the connection will be closed.
       * Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getIdleTimeoutFieldBuilder() {
        if (idleTimeoutBuilder_ == null) {
          idleTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getIdleTimeout(),
                  getParentForChildren(),
                  isClean());
          idleTimeout_ = null;
        }
        return idleTimeoutBuilder_;
      }

      private int h2UpgradePolicy_ = 0;
      /**
       * <pre>
       * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
       * @return The enum numeric value on the wire for h2UpgradePolicy.
       */
      @java.lang.Override public int getH2UpgradePolicyValue() {
        return h2UpgradePolicy_;
      }
      /**
       * <pre>
       * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
       * @param value The enum numeric value on the wire for h2UpgradePolicy to set.
       * @return This builder for chaining.
       */
      public Builder setH2UpgradePolicyValue(int value) {
        
        h2UpgradePolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
       * @return The h2UpgradePolicy.
       */
      @java.lang.Override
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy getH2UpgradePolicy() {
        @SuppressWarnings("deprecation")
        io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy result = io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.valueOf(h2UpgradePolicy_);
        return result == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
       * @param value The h2UpgradePolicy to set.
       * @return This builder for chaining.
       */
      public Builder setH2UpgradePolicy(io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        h2UpgradePolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings.H2UpgradePolicy h2_upgrade_policy = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearH2UpgradePolicy() {
        
        h2UpgradePolicy_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings)
    private static final io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings();
    }

    public static io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HTTPSettings>
        PARSER = new com.google.protobuf.AbstractParser<HTTPSettings>() {
      @java.lang.Override
      public HTTPSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTTPSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HTTPSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HTTPSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int TCP_FIELD_NUMBER = 1;
  private io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings tcp_;
  /**
   * <pre>
   * Settings common to both HTTP and TCP upstream connections.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
   * @return Whether the tcp field is set.
   */
  @java.lang.Override
  public boolean hasTcp() {
    return tcp_ != null;
  }
  /**
   * <pre>
   * Settings common to both HTTP and TCP upstream connections.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
   * @return The tcp.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings getTcp() {
    return tcp_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.getDefaultInstance() : tcp_;
  }
  /**
   * <pre>
   * Settings common to both HTTP and TCP upstream connections.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettingsOrBuilder getTcpOrBuilder() {
    return getTcp();
  }

  public static final int HTTP_FIELD_NUMBER = 2;
  private io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings http_;
  /**
   * <pre>
   * HTTP connection pool settings.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
   * @return Whether the http field is set.
   */
  @java.lang.Override
  public boolean hasHttp() {
    return http_ != null;
  }
  /**
   * <pre>
   * HTTP connection pool settings.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
   * @return The http.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings getHttp() {
    return http_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.getDefaultInstance() : http_;
  }
  /**
   * <pre>
   * HTTP connection pool settings.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettingsOrBuilder getHttpOrBuilder() {
    return getHttp();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (tcp_ != null) {
      output.writeMessage(1, getTcp());
    }
    if (http_ != null) {
      output.writeMessage(2, getHttp());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (tcp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTcp());
    }
    if (http_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getHttp());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.ConnectionPoolSettings)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.ConnectionPoolSettings other = (io.ourea.adapter.model.istio.ConnectionPoolSettings) obj;

    if (hasTcp() != other.hasTcp()) return false;
    if (hasTcp()) {
      if (!getTcp()
          .equals(other.getTcp())) return false;
    }
    if (hasHttp() != other.hasHttp()) return false;
    if (hasHttp()) {
      if (!getHttp()
          .equals(other.getHttp())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTcp()) {
      hash = (37 * hash) + TCP_FIELD_NUMBER;
      hash = (53 * hash) + getTcp().hashCode();
    }
    if (hasHttp()) {
      hash = (37 * hash) + HTTP_FIELD_NUMBER;
      hash = (53 * hash) + getHttp().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.ConnectionPoolSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.ConnectionPoolSettings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Connection pool settings for an upstream host. The settings apply to
   * each individual host in the upstream service.  See Envoy's [circuit
   * breaker](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/circuit_breaking)
   * for more details. Connection pool settings can be applied at the TCP
   * level as well as at HTTP level.
   * For example, the following rule sets a limit of 100 connections to redis
   * service called myredissrv with a connect timeout of 30ms
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-redis
   * spec:
   *   host: myredissrv.prod.svc.cluster.local
   *   trafficPolicy:
   *     connectionPool:
   *       tcp:
   *         maxConnections: 100
   *         connectTimeout: 30ms
   *         tcpKeepalive:
   *           time: 7200s
   *           interval: 75s
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: DestinationRule
   * metadata:
   *   name: bookinfo-redis
   * spec:
   *   host: myredissrv.prod.svc.cluster.local
   *   trafficPolicy:
   *     connectionPool:
   *       tcp:
   *         maxConnections: 100
   *         connectTimeout: 30ms
   *         tcpKeepalive:
   *           time: 7200s
   *           interval: 75s
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.ConnectionPoolSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.ConnectionPoolSettings)
      io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.ConnectionPoolSettings.class, io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.ConnectionPoolSettings.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (tcpBuilder_ == null) {
        tcp_ = null;
      } else {
        tcp_ = null;
        tcpBuilder_ = null;
      }
      if (httpBuilder_ == null) {
        http_ = null;
      } else {
        http_ = null;
        httpBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_ConnectionPoolSettings_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.ConnectionPoolSettings getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.ConnectionPoolSettings.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.ConnectionPoolSettings build() {
      io.ourea.adapter.model.istio.ConnectionPoolSettings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.ConnectionPoolSettings buildPartial() {
      io.ourea.adapter.model.istio.ConnectionPoolSettings result = new io.ourea.adapter.model.istio.ConnectionPoolSettings(this);
      if (tcpBuilder_ == null) {
        result.tcp_ = tcp_;
      } else {
        result.tcp_ = tcpBuilder_.build();
      }
      if (httpBuilder_ == null) {
        result.http_ = http_;
      } else {
        result.http_ = httpBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.ConnectionPoolSettings) {
        return mergeFrom((io.ourea.adapter.model.istio.ConnectionPoolSettings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.ConnectionPoolSettings other) {
      if (other == io.ourea.adapter.model.istio.ConnectionPoolSettings.getDefaultInstance()) return this;
      if (other.hasTcp()) {
        mergeTcp(other.getTcp());
      }
      if (other.hasHttp()) {
        mergeHttp(other.getHttp());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.ConnectionPoolSettings parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.ConnectionPoolSettings) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings tcp_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettingsOrBuilder> tcpBuilder_;
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     * @return Whether the tcp field is set.
     */
    public boolean hasTcp() {
      return tcpBuilder_ != null || tcp_ != null;
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     * @return The tcp.
     */
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings getTcp() {
      if (tcpBuilder_ == null) {
        return tcp_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.getDefaultInstance() : tcp_;
      } else {
        return tcpBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     */
    public Builder setTcp(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings value) {
      if (tcpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tcp_ = value;
        onChanged();
      } else {
        tcpBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     */
    public Builder setTcp(
        io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.Builder builderForValue) {
      if (tcpBuilder_ == null) {
        tcp_ = builderForValue.build();
        onChanged();
      } else {
        tcpBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     */
    public Builder mergeTcp(io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings value) {
      if (tcpBuilder_ == null) {
        if (tcp_ != null) {
          tcp_ =
            io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.newBuilder(tcp_).mergeFrom(value).buildPartial();
        } else {
          tcp_ = value;
        }
        onChanged();
      } else {
        tcpBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     */
    public Builder clearTcp() {
      if (tcpBuilder_ == null) {
        tcp_ = null;
        onChanged();
      } else {
        tcp_ = null;
        tcpBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     */
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.Builder getTcpBuilder() {
      
      onChanged();
      return getTcpFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     */
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettingsOrBuilder getTcpOrBuilder() {
      if (tcpBuilder_ != null) {
        return tcpBuilder_.getMessageOrBuilder();
      } else {
        return tcp_ == null ?
            io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.getDefaultInstance() : tcp_;
      }
    }
    /**
     * <pre>
     * Settings common to both HTTP and TCP upstream connections.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings tcp = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettingsOrBuilder> 
        getTcpFieldBuilder() {
      if (tcpBuilder_ == null) {
        tcpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettings.TCPSettingsOrBuilder>(
                getTcp(),
                getParentForChildren(),
                isClean());
        tcp_ = null;
      }
      return tcpBuilder_;
    }

    private io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings http_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettingsOrBuilder> httpBuilder_;
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     * @return Whether the http field is set.
     */
    public boolean hasHttp() {
      return httpBuilder_ != null || http_ != null;
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     * @return The http.
     */
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings getHttp() {
      if (httpBuilder_ == null) {
        return http_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.getDefaultInstance() : http_;
      } else {
        return httpBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     */
    public Builder setHttp(io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings value) {
      if (httpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        http_ = value;
        onChanged();
      } else {
        httpBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     */
    public Builder setHttp(
        io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.Builder builderForValue) {
      if (httpBuilder_ == null) {
        http_ = builderForValue.build();
        onChanged();
      } else {
        httpBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     */
    public Builder mergeHttp(io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings value) {
      if (httpBuilder_ == null) {
        if (http_ != null) {
          http_ =
            io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.newBuilder(http_).mergeFrom(value).buildPartial();
        } else {
          http_ = value;
        }
        onChanged();
      } else {
        httpBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     */
    public Builder clearHttp() {
      if (httpBuilder_ == null) {
        http_ = null;
        onChanged();
      } else {
        http_ = null;
        httpBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     */
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.Builder getHttpBuilder() {
      
      onChanged();
      return getHttpFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     */
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettingsOrBuilder getHttpOrBuilder() {
      if (httpBuilder_ != null) {
        return httpBuilder_.getMessageOrBuilder();
      } else {
        return http_ == null ?
            io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.getDefaultInstance() : http_;
      }
    }
    /**
     * <pre>
     * HTTP connection pool settings.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings.HTTPSettings http = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettingsOrBuilder> 
        getHttpFieldBuilder() {
      if (httpBuilder_ == null) {
        httpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettings.HTTPSettingsOrBuilder>(
                getHttp(),
                getParentForChildren(),
                isClean());
        http_ = null;
      }
      return httpBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.ConnectionPoolSettings)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.ConnectionPoolSettings)
  private static final io.ourea.adapter.model.istio.ConnectionPoolSettings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.ConnectionPoolSettings();
  }

  public static io.ourea.adapter.model.istio.ConnectionPoolSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConnectionPoolSettings>
      PARSER = new com.google.protobuf.AbstractParser<ConnectionPoolSettings>() {
    @java.lang.Override
    public ConnectionPoolSettings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ConnectionPoolSettings(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ConnectionPoolSettings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConnectionPoolSettings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.ConnectionPoolSettings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

