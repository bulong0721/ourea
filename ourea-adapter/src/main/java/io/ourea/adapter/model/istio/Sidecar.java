// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sidecar.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * `Sidecar` describes the configuration of the sidecar proxy that mediates
 * inbound and outbound communication of the workload instance to which it is
 * attached.
 * &lt;!-- crd generation tags
 * +cue-gen:Sidecar:groupName:networking.istio.io
 * +cue-gen:Sidecar:version:v1alpha3
 * +cue-gen:Sidecar:storageVersion
 * +cue-gen:Sidecar:annotations:helm.sh/resource-policy=keep
 * +cue-gen:Sidecar:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
 * +cue-gen:Sidecar:subresource:status
 * +cue-gen:Sidecar:scope:Namespaced
 * +cue-gen:Sidecar:resource:categories=istio-io,networking-istio-io
 * --&gt;
 * &lt;!-- go code generation tags
 * +kubetype-gen
 * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
 * +genclient
 * +k8s:deepcopy-gen=true
 * --&gt;
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.Sidecar}
 */
public final class Sidecar extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.Sidecar)
    SidecarOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Sidecar.newBuilder() to construct.
  private Sidecar(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Sidecar() {
    ingress_ = java.util.Collections.emptyList();
    egress_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Sidecar();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Sidecar(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.ourea.adapter.model.istio.WorkloadSelector.Builder subBuilder = null;
            if (workloadSelector_ != null) {
              subBuilder = workloadSelector_.toBuilder();
            }
            workloadSelector_ = input.readMessage(io.ourea.adapter.model.istio.WorkloadSelector.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(workloadSelector_);
              workloadSelector_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              ingress_ = new java.util.ArrayList<io.ourea.adapter.model.istio.IstioIngressListener>();
              mutable_bitField0_ |= 0x00000001;
            }
            ingress_.add(
                input.readMessage(io.ourea.adapter.model.istio.IstioIngressListener.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              egress_ = new java.util.ArrayList<io.ourea.adapter.model.istio.IstioEgressListener>();
              mutable_bitField0_ |= 0x00000002;
            }
            egress_.add(
                input.readMessage(io.ourea.adapter.model.istio.IstioEgressListener.parser(), extensionRegistry));
            break;
          }
          case 34: {
            io.ourea.adapter.model.istio.OutboundTrafficPolicy.Builder subBuilder = null;
            if (outboundTrafficPolicy_ != null) {
              subBuilder = outboundTrafficPolicy_.toBuilder();
            }
            outboundTrafficPolicy_ = input.readMessage(io.ourea.adapter.model.istio.OutboundTrafficPolicy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(outboundTrafficPolicy_);
              outboundTrafficPolicy_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        ingress_ = java.util.Collections.unmodifiableList(ingress_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        egress_ = java.util.Collections.unmodifiableList(egress_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.Sidecar.class, io.ourea.adapter.model.istio.Sidecar.Builder.class);
  }

  public static final int WORKLOAD_SELECTOR_FIELD_NUMBER = 1;
  private io.ourea.adapter.model.istio.WorkloadSelector workloadSelector_;
  /**
   * <pre>
   * Criteria used to select the specific set of pods/VMs on which this
   * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
   * configuration will be applied to all workload instances in the same namespace.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
   * @return Whether the workloadSelector field is set.
   */
  @java.lang.Override
  public boolean hasWorkloadSelector() {
    return workloadSelector_ != null;
  }
  /**
   * <pre>
   * Criteria used to select the specific set of pods/VMs on which this
   * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
   * configuration will be applied to all workload instances in the same namespace.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
   * @return The workloadSelector.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.WorkloadSelector getWorkloadSelector() {
    return workloadSelector_ == null ? io.ourea.adapter.model.istio.WorkloadSelector.getDefaultInstance() : workloadSelector_;
  }
  /**
   * <pre>
   * Criteria used to select the specific set of pods/VMs on which this
   * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
   * configuration will be applied to all workload instances in the same namespace.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.WorkloadSelectorOrBuilder getWorkloadSelectorOrBuilder() {
    return getWorkloadSelector();
  }

  public static final int INGRESS_FIELD_NUMBER = 2;
  private java.util.List<io.ourea.adapter.model.istio.IstioIngressListener> ingress_;
  /**
   * <pre>
   * Ingress specifies the configuration of the sidecar for processing
   * inbound traffic to the attached workload instance. If omitted, Istio will
   * automatically configure the sidecar based on the information about the workload
   * obtained from the orchestration platform (e.g., exposed ports, services,
   * etc.). If specified, inbound ports are configured if and only if the
   * workload instance is associated with a service.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.ourea.adapter.model.istio.IstioIngressListener> getIngressList() {
    return ingress_;
  }
  /**
   * <pre>
   * Ingress specifies the configuration of the sidecar for processing
   * inbound traffic to the attached workload instance. If omitted, Istio will
   * automatically configure the sidecar based on the information about the workload
   * obtained from the orchestration platform (e.g., exposed ports, services,
   * etc.). If specified, inbound ports are configured if and only if the
   * workload instance is associated with a service.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.ourea.adapter.model.istio.IstioIngressListenerOrBuilder> 
      getIngressOrBuilderList() {
    return ingress_;
  }
  /**
   * <pre>
   * Ingress specifies the configuration of the sidecar for processing
   * inbound traffic to the attached workload instance. If omitted, Istio will
   * automatically configure the sidecar based on the information about the workload
   * obtained from the orchestration platform (e.g., exposed ports, services,
   * etc.). If specified, inbound ports are configured if and only if the
   * workload instance is associated with a service.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
   */
  @java.lang.Override
  public int getIngressCount() {
    return ingress_.size();
  }
  /**
   * <pre>
   * Ingress specifies the configuration of the sidecar for processing
   * inbound traffic to the attached workload instance. If omitted, Istio will
   * automatically configure the sidecar based on the information about the workload
   * obtained from the orchestration platform (e.g., exposed ports, services,
   * etc.). If specified, inbound ports are configured if and only if the
   * workload instance is associated with a service.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.IstioIngressListener getIngress(int index) {
    return ingress_.get(index);
  }
  /**
   * <pre>
   * Ingress specifies the configuration of the sidecar for processing
   * inbound traffic to the attached workload instance. If omitted, Istio will
   * automatically configure the sidecar based on the information about the workload
   * obtained from the orchestration platform (e.g., exposed ports, services,
   * etc.). If specified, inbound ports are configured if and only if the
   * workload instance is associated with a service.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.IstioIngressListenerOrBuilder getIngressOrBuilder(
      int index) {
    return ingress_.get(index);
  }

  public static final int EGRESS_FIELD_NUMBER = 3;
  private java.util.List<io.ourea.adapter.model.istio.IstioEgressListener> egress_;
  /**
   * <pre>
   * Egress specifies the configuration of the sidecar for processing
   * outbound traffic from the attached workload instance to other
   * services in the mesh. If not specified, inherits the system
   * detected defaults from the namespace-wide or the global default Sidecar.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
   */
  @java.lang.Override
  public java.util.List<io.ourea.adapter.model.istio.IstioEgressListener> getEgressList() {
    return egress_;
  }
  /**
   * <pre>
   * Egress specifies the configuration of the sidecar for processing
   * outbound traffic from the attached workload instance to other
   * services in the mesh. If not specified, inherits the system
   * detected defaults from the namespace-wide or the global default Sidecar.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.ourea.adapter.model.istio.IstioEgressListenerOrBuilder> 
      getEgressOrBuilderList() {
    return egress_;
  }
  /**
   * <pre>
   * Egress specifies the configuration of the sidecar for processing
   * outbound traffic from the attached workload instance to other
   * services in the mesh. If not specified, inherits the system
   * detected defaults from the namespace-wide or the global default Sidecar.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
   */
  @java.lang.Override
  public int getEgressCount() {
    return egress_.size();
  }
  /**
   * <pre>
   * Egress specifies the configuration of the sidecar for processing
   * outbound traffic from the attached workload instance to other
   * services in the mesh. If not specified, inherits the system
   * detected defaults from the namespace-wide or the global default Sidecar.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.IstioEgressListener getEgress(int index) {
    return egress_.get(index);
  }
  /**
   * <pre>
   * Egress specifies the configuration of the sidecar for processing
   * outbound traffic from the attached workload instance to other
   * services in the mesh. If not specified, inherits the system
   * detected defaults from the namespace-wide or the global default Sidecar.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.IstioEgressListenerOrBuilder getEgressOrBuilder(
      int index) {
    return egress_.get(index);
  }

  public static final int OUTBOUND_TRAFFIC_POLICY_FIELD_NUMBER = 4;
  private io.ourea.adapter.model.istio.OutboundTrafficPolicy outboundTrafficPolicy_;
  /**
   * <pre>
   * Configuration for the outbound traffic policy.  If your
   * application uses one or more external services that are not known
   * apriori, setting the policy to `ALLOW_ANY` will cause the
   * sidecars to route any unknown traffic originating from the
   * application to its requested destination. If not specified,
   * inherits the system detected defaults from the namespace-wide or
   * the global default Sidecar.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
   * @return Whether the outboundTrafficPolicy field is set.
   */
  @java.lang.Override
  public boolean hasOutboundTrafficPolicy() {
    return outboundTrafficPolicy_ != null;
  }
  /**
   * <pre>
   * Configuration for the outbound traffic policy.  If your
   * application uses one or more external services that are not known
   * apriori, setting the policy to `ALLOW_ANY` will cause the
   * sidecars to route any unknown traffic originating from the
   * application to its requested destination. If not specified,
   * inherits the system detected defaults from the namespace-wide or
   * the global default Sidecar.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
   * @return The outboundTrafficPolicy.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.OutboundTrafficPolicy getOutboundTrafficPolicy() {
    return outboundTrafficPolicy_ == null ? io.ourea.adapter.model.istio.OutboundTrafficPolicy.getDefaultInstance() : outboundTrafficPolicy_;
  }
  /**
   * <pre>
   * Configuration for the outbound traffic policy.  If your
   * application uses one or more external services that are not known
   * apriori, setting the policy to `ALLOW_ANY` will cause the
   * sidecars to route any unknown traffic originating from the
   * application to its requested destination. If not specified,
   * inherits the system detected defaults from the namespace-wide or
   * the global default Sidecar.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.OutboundTrafficPolicyOrBuilder getOutboundTrafficPolicyOrBuilder() {
    return getOutboundTrafficPolicy();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (workloadSelector_ != null) {
      output.writeMessage(1, getWorkloadSelector());
    }
    for (int i = 0; i < ingress_.size(); i++) {
      output.writeMessage(2, ingress_.get(i));
    }
    for (int i = 0; i < egress_.size(); i++) {
      output.writeMessage(3, egress_.get(i));
    }
    if (outboundTrafficPolicy_ != null) {
      output.writeMessage(4, getOutboundTrafficPolicy());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (workloadSelector_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getWorkloadSelector());
    }
    for (int i = 0; i < ingress_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, ingress_.get(i));
    }
    for (int i = 0; i < egress_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, egress_.get(i));
    }
    if (outboundTrafficPolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getOutboundTrafficPolicy());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.Sidecar)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.Sidecar other = (io.ourea.adapter.model.istio.Sidecar) obj;

    if (hasWorkloadSelector() != other.hasWorkloadSelector()) return false;
    if (hasWorkloadSelector()) {
      if (!getWorkloadSelector()
          .equals(other.getWorkloadSelector())) return false;
    }
    if (!getIngressList()
        .equals(other.getIngressList())) return false;
    if (!getEgressList()
        .equals(other.getEgressList())) return false;
    if (hasOutboundTrafficPolicy() != other.hasOutboundTrafficPolicy()) return false;
    if (hasOutboundTrafficPolicy()) {
      if (!getOutboundTrafficPolicy()
          .equals(other.getOutboundTrafficPolicy())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasWorkloadSelector()) {
      hash = (37 * hash) + WORKLOAD_SELECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getWorkloadSelector().hashCode();
    }
    if (getIngressCount() > 0) {
      hash = (37 * hash) + INGRESS_FIELD_NUMBER;
      hash = (53 * hash) + getIngressList().hashCode();
    }
    if (getEgressCount() > 0) {
      hash = (37 * hash) + EGRESS_FIELD_NUMBER;
      hash = (53 * hash) + getEgressList().hashCode();
    }
    if (hasOutboundTrafficPolicy()) {
      hash = (37 * hash) + OUTBOUND_TRAFFIC_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getOutboundTrafficPolicy().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.Sidecar parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.Sidecar parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.Sidecar prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * `Sidecar` describes the configuration of the sidecar proxy that mediates
   * inbound and outbound communication of the workload instance to which it is
   * attached.
   * &lt;!-- crd generation tags
   * +cue-gen:Sidecar:groupName:networking.istio.io
   * +cue-gen:Sidecar:version:v1alpha3
   * +cue-gen:Sidecar:storageVersion
   * +cue-gen:Sidecar:annotations:helm.sh/resource-policy=keep
   * +cue-gen:Sidecar:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
   * +cue-gen:Sidecar:subresource:status
   * +cue-gen:Sidecar:scope:Namespaced
   * +cue-gen:Sidecar:resource:categories=istio-io,networking-istio-io
   * --&gt;
   * &lt;!-- go code generation tags
   * +kubetype-gen
   * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
   * +genclient
   * +k8s:deepcopy-gen=true
   * --&gt;
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.Sidecar}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.Sidecar)
      io.ourea.adapter.model.istio.SidecarOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.Sidecar.class, io.ourea.adapter.model.istio.Sidecar.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.Sidecar.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getIngressFieldBuilder();
        getEgressFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (workloadSelectorBuilder_ == null) {
        workloadSelector_ = null;
      } else {
        workloadSelector_ = null;
        workloadSelectorBuilder_ = null;
      }
      if (ingressBuilder_ == null) {
        ingress_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        ingressBuilder_.clear();
      }
      if (egressBuilder_ == null) {
        egress_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        egressBuilder_.clear();
      }
      if (outboundTrafficPolicyBuilder_ == null) {
        outboundTrafficPolicy_ = null;
      } else {
        outboundTrafficPolicy_ = null;
        outboundTrafficPolicyBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_Sidecar_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.Sidecar getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.Sidecar.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.Sidecar build() {
      io.ourea.adapter.model.istio.Sidecar result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.Sidecar buildPartial() {
      io.ourea.adapter.model.istio.Sidecar result = new io.ourea.adapter.model.istio.Sidecar(this);
      int from_bitField0_ = bitField0_;
      if (workloadSelectorBuilder_ == null) {
        result.workloadSelector_ = workloadSelector_;
      } else {
        result.workloadSelector_ = workloadSelectorBuilder_.build();
      }
      if (ingressBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          ingress_ = java.util.Collections.unmodifiableList(ingress_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ingress_ = ingress_;
      } else {
        result.ingress_ = ingressBuilder_.build();
      }
      if (egressBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          egress_ = java.util.Collections.unmodifiableList(egress_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.egress_ = egress_;
      } else {
        result.egress_ = egressBuilder_.build();
      }
      if (outboundTrafficPolicyBuilder_ == null) {
        result.outboundTrafficPolicy_ = outboundTrafficPolicy_;
      } else {
        result.outboundTrafficPolicy_ = outboundTrafficPolicyBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.Sidecar) {
        return mergeFrom((io.ourea.adapter.model.istio.Sidecar)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.Sidecar other) {
      if (other == io.ourea.adapter.model.istio.Sidecar.getDefaultInstance()) return this;
      if (other.hasWorkloadSelector()) {
        mergeWorkloadSelector(other.getWorkloadSelector());
      }
      if (ingressBuilder_ == null) {
        if (!other.ingress_.isEmpty()) {
          if (ingress_.isEmpty()) {
            ingress_ = other.ingress_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIngressIsMutable();
            ingress_.addAll(other.ingress_);
          }
          onChanged();
        }
      } else {
        if (!other.ingress_.isEmpty()) {
          if (ingressBuilder_.isEmpty()) {
            ingressBuilder_.dispose();
            ingressBuilder_ = null;
            ingress_ = other.ingress_;
            bitField0_ = (bitField0_ & ~0x00000001);
            ingressBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIngressFieldBuilder() : null;
          } else {
            ingressBuilder_.addAllMessages(other.ingress_);
          }
        }
      }
      if (egressBuilder_ == null) {
        if (!other.egress_.isEmpty()) {
          if (egress_.isEmpty()) {
            egress_ = other.egress_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEgressIsMutable();
            egress_.addAll(other.egress_);
          }
          onChanged();
        }
      } else {
        if (!other.egress_.isEmpty()) {
          if (egressBuilder_.isEmpty()) {
            egressBuilder_.dispose();
            egressBuilder_ = null;
            egress_ = other.egress_;
            bitField0_ = (bitField0_ & ~0x00000002);
            egressBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEgressFieldBuilder() : null;
          } else {
            egressBuilder_.addAllMessages(other.egress_);
          }
        }
      }
      if (other.hasOutboundTrafficPolicy()) {
        mergeOutboundTrafficPolicy(other.getOutboundTrafficPolicy());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.Sidecar parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.Sidecar) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private io.ourea.adapter.model.istio.WorkloadSelector workloadSelector_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.WorkloadSelector, io.ourea.adapter.model.istio.WorkloadSelector.Builder, io.ourea.adapter.model.istio.WorkloadSelectorOrBuilder> workloadSelectorBuilder_;
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     * @return Whether the workloadSelector field is set.
     */
    public boolean hasWorkloadSelector() {
      return workloadSelectorBuilder_ != null || workloadSelector_ != null;
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     * @return The workloadSelector.
     */
    public io.ourea.adapter.model.istio.WorkloadSelector getWorkloadSelector() {
      if (workloadSelectorBuilder_ == null) {
        return workloadSelector_ == null ? io.ourea.adapter.model.istio.WorkloadSelector.getDefaultInstance() : workloadSelector_;
      } else {
        return workloadSelectorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     */
    public Builder setWorkloadSelector(io.ourea.adapter.model.istio.WorkloadSelector value) {
      if (workloadSelectorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        workloadSelector_ = value;
        onChanged();
      } else {
        workloadSelectorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     */
    public Builder setWorkloadSelector(
        io.ourea.adapter.model.istio.WorkloadSelector.Builder builderForValue) {
      if (workloadSelectorBuilder_ == null) {
        workloadSelector_ = builderForValue.build();
        onChanged();
      } else {
        workloadSelectorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     */
    public Builder mergeWorkloadSelector(io.ourea.adapter.model.istio.WorkloadSelector value) {
      if (workloadSelectorBuilder_ == null) {
        if (workloadSelector_ != null) {
          workloadSelector_ =
            io.ourea.adapter.model.istio.WorkloadSelector.newBuilder(workloadSelector_).mergeFrom(value).buildPartial();
        } else {
          workloadSelector_ = value;
        }
        onChanged();
      } else {
        workloadSelectorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     */
    public Builder clearWorkloadSelector() {
      if (workloadSelectorBuilder_ == null) {
        workloadSelector_ = null;
        onChanged();
      } else {
        workloadSelector_ = null;
        workloadSelectorBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     */
    public io.ourea.adapter.model.istio.WorkloadSelector.Builder getWorkloadSelectorBuilder() {
      
      onChanged();
      return getWorkloadSelectorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     */
    public io.ourea.adapter.model.istio.WorkloadSelectorOrBuilder getWorkloadSelectorOrBuilder() {
      if (workloadSelectorBuilder_ != null) {
        return workloadSelectorBuilder_.getMessageOrBuilder();
      } else {
        return workloadSelector_ == null ?
            io.ourea.adapter.model.istio.WorkloadSelector.getDefaultInstance() : workloadSelector_;
      }
    }
    /**
     * <pre>
     * Criteria used to select the specific set of pods/VMs on which this
     * `Sidecar` configuration should be applied. If omitted, the `Sidecar`
     * configuration will be applied to all workload instances in the same namespace.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.WorkloadSelector, io.ourea.adapter.model.istio.WorkloadSelector.Builder, io.ourea.adapter.model.istio.WorkloadSelectorOrBuilder> 
        getWorkloadSelectorFieldBuilder() {
      if (workloadSelectorBuilder_ == null) {
        workloadSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.WorkloadSelector, io.ourea.adapter.model.istio.WorkloadSelector.Builder, io.ourea.adapter.model.istio.WorkloadSelectorOrBuilder>(
                getWorkloadSelector(),
                getParentForChildren(),
                isClean());
        workloadSelector_ = null;
      }
      return workloadSelectorBuilder_;
    }

    private java.util.List<io.ourea.adapter.model.istio.IstioIngressListener> ingress_ =
      java.util.Collections.emptyList();
    private void ensureIngressIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        ingress_ = new java.util.ArrayList<io.ourea.adapter.model.istio.IstioIngressListener>(ingress_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.IstioIngressListener, io.ourea.adapter.model.istio.IstioIngressListener.Builder, io.ourea.adapter.model.istio.IstioIngressListenerOrBuilder> ingressBuilder_;

    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.IstioIngressListener> getIngressList() {
      if (ingressBuilder_ == null) {
        return java.util.Collections.unmodifiableList(ingress_);
      } else {
        return ingressBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public int getIngressCount() {
      if (ingressBuilder_ == null) {
        return ingress_.size();
      } else {
        return ingressBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public io.ourea.adapter.model.istio.IstioIngressListener getIngress(int index) {
      if (ingressBuilder_ == null) {
        return ingress_.get(index);
      } else {
        return ingressBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public Builder setIngress(
        int index, io.ourea.adapter.model.istio.IstioIngressListener value) {
      if (ingressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIngressIsMutable();
        ingress_.set(index, value);
        onChanged();
      } else {
        ingressBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public Builder setIngress(
        int index, io.ourea.adapter.model.istio.IstioIngressListener.Builder builderForValue) {
      if (ingressBuilder_ == null) {
        ensureIngressIsMutable();
        ingress_.set(index, builderForValue.build());
        onChanged();
      } else {
        ingressBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public Builder addIngress(io.ourea.adapter.model.istio.IstioIngressListener value) {
      if (ingressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIngressIsMutable();
        ingress_.add(value);
        onChanged();
      } else {
        ingressBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public Builder addIngress(
        int index, io.ourea.adapter.model.istio.IstioIngressListener value) {
      if (ingressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIngressIsMutable();
        ingress_.add(index, value);
        onChanged();
      } else {
        ingressBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public Builder addIngress(
        io.ourea.adapter.model.istio.IstioIngressListener.Builder builderForValue) {
      if (ingressBuilder_ == null) {
        ensureIngressIsMutable();
        ingress_.add(builderForValue.build());
        onChanged();
      } else {
        ingressBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public Builder addIngress(
        int index, io.ourea.adapter.model.istio.IstioIngressListener.Builder builderForValue) {
      if (ingressBuilder_ == null) {
        ensureIngressIsMutable();
        ingress_.add(index, builderForValue.build());
        onChanged();
      } else {
        ingressBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public Builder addAllIngress(
        java.lang.Iterable<? extends io.ourea.adapter.model.istio.IstioIngressListener> values) {
      if (ingressBuilder_ == null) {
        ensureIngressIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ingress_);
        onChanged();
      } else {
        ingressBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public Builder clearIngress() {
      if (ingressBuilder_ == null) {
        ingress_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        ingressBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public Builder removeIngress(int index) {
      if (ingressBuilder_ == null) {
        ensureIngressIsMutable();
        ingress_.remove(index);
        onChanged();
      } else {
        ingressBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public io.ourea.adapter.model.istio.IstioIngressListener.Builder getIngressBuilder(
        int index) {
      return getIngressFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public io.ourea.adapter.model.istio.IstioIngressListenerOrBuilder getIngressOrBuilder(
        int index) {
      if (ingressBuilder_ == null) {
        return ingress_.get(index);  } else {
        return ingressBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public java.util.List<? extends io.ourea.adapter.model.istio.IstioIngressListenerOrBuilder> 
         getIngressOrBuilderList() {
      if (ingressBuilder_ != null) {
        return ingressBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(ingress_);
      }
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public io.ourea.adapter.model.istio.IstioIngressListener.Builder addIngressBuilder() {
      return getIngressFieldBuilder().addBuilder(
          io.ourea.adapter.model.istio.IstioIngressListener.getDefaultInstance());
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public io.ourea.adapter.model.istio.IstioIngressListener.Builder addIngressBuilder(
        int index) {
      return getIngressFieldBuilder().addBuilder(
          index, io.ourea.adapter.model.istio.IstioIngressListener.getDefaultInstance());
    }
    /**
     * <pre>
     * Ingress specifies the configuration of the sidecar for processing
     * inbound traffic to the attached workload instance. If omitted, Istio will
     * automatically configure the sidecar based on the information about the workload
     * obtained from the orchestration platform (e.g., exposed ports, services,
     * etc.). If specified, inbound ports are configured if and only if the
     * workload instance is associated with a service.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioIngressListener ingress = 2;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.IstioIngressListener.Builder> 
         getIngressBuilderList() {
      return getIngressFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.IstioIngressListener, io.ourea.adapter.model.istio.IstioIngressListener.Builder, io.ourea.adapter.model.istio.IstioIngressListenerOrBuilder> 
        getIngressFieldBuilder() {
      if (ingressBuilder_ == null) {
        ingressBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.ourea.adapter.model.istio.IstioIngressListener, io.ourea.adapter.model.istio.IstioIngressListener.Builder, io.ourea.adapter.model.istio.IstioIngressListenerOrBuilder>(
                ingress_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        ingress_ = null;
      }
      return ingressBuilder_;
    }

    private java.util.List<io.ourea.adapter.model.istio.IstioEgressListener> egress_ =
      java.util.Collections.emptyList();
    private void ensureEgressIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        egress_ = new java.util.ArrayList<io.ourea.adapter.model.istio.IstioEgressListener>(egress_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.IstioEgressListener, io.ourea.adapter.model.istio.IstioEgressListener.Builder, io.ourea.adapter.model.istio.IstioEgressListenerOrBuilder> egressBuilder_;

    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.IstioEgressListener> getEgressList() {
      if (egressBuilder_ == null) {
        return java.util.Collections.unmodifiableList(egress_);
      } else {
        return egressBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public int getEgressCount() {
      if (egressBuilder_ == null) {
        return egress_.size();
      } else {
        return egressBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public io.ourea.adapter.model.istio.IstioEgressListener getEgress(int index) {
      if (egressBuilder_ == null) {
        return egress_.get(index);
      } else {
        return egressBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public Builder setEgress(
        int index, io.ourea.adapter.model.istio.IstioEgressListener value) {
      if (egressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEgressIsMutable();
        egress_.set(index, value);
        onChanged();
      } else {
        egressBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public Builder setEgress(
        int index, io.ourea.adapter.model.istio.IstioEgressListener.Builder builderForValue) {
      if (egressBuilder_ == null) {
        ensureEgressIsMutable();
        egress_.set(index, builderForValue.build());
        onChanged();
      } else {
        egressBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public Builder addEgress(io.ourea.adapter.model.istio.IstioEgressListener value) {
      if (egressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEgressIsMutable();
        egress_.add(value);
        onChanged();
      } else {
        egressBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public Builder addEgress(
        int index, io.ourea.adapter.model.istio.IstioEgressListener value) {
      if (egressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEgressIsMutable();
        egress_.add(index, value);
        onChanged();
      } else {
        egressBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public Builder addEgress(
        io.ourea.adapter.model.istio.IstioEgressListener.Builder builderForValue) {
      if (egressBuilder_ == null) {
        ensureEgressIsMutable();
        egress_.add(builderForValue.build());
        onChanged();
      } else {
        egressBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public Builder addEgress(
        int index, io.ourea.adapter.model.istio.IstioEgressListener.Builder builderForValue) {
      if (egressBuilder_ == null) {
        ensureEgressIsMutable();
        egress_.add(index, builderForValue.build());
        onChanged();
      } else {
        egressBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public Builder addAllEgress(
        java.lang.Iterable<? extends io.ourea.adapter.model.istio.IstioEgressListener> values) {
      if (egressBuilder_ == null) {
        ensureEgressIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, egress_);
        onChanged();
      } else {
        egressBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public Builder clearEgress() {
      if (egressBuilder_ == null) {
        egress_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        egressBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public Builder removeEgress(int index) {
      if (egressBuilder_ == null) {
        ensureEgressIsMutable();
        egress_.remove(index);
        onChanged();
      } else {
        egressBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public io.ourea.adapter.model.istio.IstioEgressListener.Builder getEgressBuilder(
        int index) {
      return getEgressFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public io.ourea.adapter.model.istio.IstioEgressListenerOrBuilder getEgressOrBuilder(
        int index) {
      if (egressBuilder_ == null) {
        return egress_.get(index);  } else {
        return egressBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public java.util.List<? extends io.ourea.adapter.model.istio.IstioEgressListenerOrBuilder> 
         getEgressOrBuilderList() {
      if (egressBuilder_ != null) {
        return egressBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(egress_);
      }
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public io.ourea.adapter.model.istio.IstioEgressListener.Builder addEgressBuilder() {
      return getEgressFieldBuilder().addBuilder(
          io.ourea.adapter.model.istio.IstioEgressListener.getDefaultInstance());
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public io.ourea.adapter.model.istio.IstioEgressListener.Builder addEgressBuilder(
        int index) {
      return getEgressFieldBuilder().addBuilder(
          index, io.ourea.adapter.model.istio.IstioEgressListener.getDefaultInstance());
    }
    /**
     * <pre>
     * Egress specifies the configuration of the sidecar for processing
     * outbound traffic from the attached workload instance to other
     * services in the mesh. If not specified, inherits the system
     * detected defaults from the namespace-wide or the global default Sidecar.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.IstioEgressListener egress = 3;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.IstioEgressListener.Builder> 
         getEgressBuilderList() {
      return getEgressFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.IstioEgressListener, io.ourea.adapter.model.istio.IstioEgressListener.Builder, io.ourea.adapter.model.istio.IstioEgressListenerOrBuilder> 
        getEgressFieldBuilder() {
      if (egressBuilder_ == null) {
        egressBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.ourea.adapter.model.istio.IstioEgressListener, io.ourea.adapter.model.istio.IstioEgressListener.Builder, io.ourea.adapter.model.istio.IstioEgressListenerOrBuilder>(
                egress_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        egress_ = null;
      }
      return egressBuilder_;
    }

    private io.ourea.adapter.model.istio.OutboundTrafficPolicy outboundTrafficPolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.OutboundTrafficPolicy, io.ourea.adapter.model.istio.OutboundTrafficPolicy.Builder, io.ourea.adapter.model.istio.OutboundTrafficPolicyOrBuilder> outboundTrafficPolicyBuilder_;
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     * @return Whether the outboundTrafficPolicy field is set.
     */
    public boolean hasOutboundTrafficPolicy() {
      return outboundTrafficPolicyBuilder_ != null || outboundTrafficPolicy_ != null;
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     * @return The outboundTrafficPolicy.
     */
    public io.ourea.adapter.model.istio.OutboundTrafficPolicy getOutboundTrafficPolicy() {
      if (outboundTrafficPolicyBuilder_ == null) {
        return outboundTrafficPolicy_ == null ? io.ourea.adapter.model.istio.OutboundTrafficPolicy.getDefaultInstance() : outboundTrafficPolicy_;
      } else {
        return outboundTrafficPolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     */
    public Builder setOutboundTrafficPolicy(io.ourea.adapter.model.istio.OutboundTrafficPolicy value) {
      if (outboundTrafficPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        outboundTrafficPolicy_ = value;
        onChanged();
      } else {
        outboundTrafficPolicyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     */
    public Builder setOutboundTrafficPolicy(
        io.ourea.adapter.model.istio.OutboundTrafficPolicy.Builder builderForValue) {
      if (outboundTrafficPolicyBuilder_ == null) {
        outboundTrafficPolicy_ = builderForValue.build();
        onChanged();
      } else {
        outboundTrafficPolicyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     */
    public Builder mergeOutboundTrafficPolicy(io.ourea.adapter.model.istio.OutboundTrafficPolicy value) {
      if (outboundTrafficPolicyBuilder_ == null) {
        if (outboundTrafficPolicy_ != null) {
          outboundTrafficPolicy_ =
            io.ourea.adapter.model.istio.OutboundTrafficPolicy.newBuilder(outboundTrafficPolicy_).mergeFrom(value).buildPartial();
        } else {
          outboundTrafficPolicy_ = value;
        }
        onChanged();
      } else {
        outboundTrafficPolicyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     */
    public Builder clearOutboundTrafficPolicy() {
      if (outboundTrafficPolicyBuilder_ == null) {
        outboundTrafficPolicy_ = null;
        onChanged();
      } else {
        outboundTrafficPolicy_ = null;
        outboundTrafficPolicyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     */
    public io.ourea.adapter.model.istio.OutboundTrafficPolicy.Builder getOutboundTrafficPolicyBuilder() {
      
      onChanged();
      return getOutboundTrafficPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     */
    public io.ourea.adapter.model.istio.OutboundTrafficPolicyOrBuilder getOutboundTrafficPolicyOrBuilder() {
      if (outboundTrafficPolicyBuilder_ != null) {
        return outboundTrafficPolicyBuilder_.getMessageOrBuilder();
      } else {
        return outboundTrafficPolicy_ == null ?
            io.ourea.adapter.model.istio.OutboundTrafficPolicy.getDefaultInstance() : outboundTrafficPolicy_;
      }
    }
    /**
     * <pre>
     * Configuration for the outbound traffic policy.  If your
     * application uses one or more external services that are not known
     * apriori, setting the policy to `ALLOW_ANY` will cause the
     * sidecars to route any unknown traffic originating from the
     * application to its requested destination. If not specified,
     * inherits the system detected defaults from the namespace-wide or
     * the global default Sidecar.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy outbound_traffic_policy = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.OutboundTrafficPolicy, io.ourea.adapter.model.istio.OutboundTrafficPolicy.Builder, io.ourea.adapter.model.istio.OutboundTrafficPolicyOrBuilder> 
        getOutboundTrafficPolicyFieldBuilder() {
      if (outboundTrafficPolicyBuilder_ == null) {
        outboundTrafficPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.OutboundTrafficPolicy, io.ourea.adapter.model.istio.OutboundTrafficPolicy.Builder, io.ourea.adapter.model.istio.OutboundTrafficPolicyOrBuilder>(
                getOutboundTrafficPolicy(),
                getParentForChildren(),
                isClean());
        outboundTrafficPolicy_ = null;
      }
      return outboundTrafficPolicyBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.Sidecar)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.Sidecar)
  private static final io.ourea.adapter.model.istio.Sidecar DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.Sidecar();
  }

  public static io.ourea.adapter.model.istio.Sidecar getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Sidecar>
      PARSER = new com.google.protobuf.AbstractParser<Sidecar>() {
    @java.lang.Override
    public Sidecar parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Sidecar(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Sidecar> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Sidecar> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.Sidecar getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

