// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: destination_rule.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * Traffic policies to apply for a specific destination, across all
 * destination ports. See DestinationRule for examples.
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.TrafficPolicy}
 */
public final class TrafficPolicy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.TrafficPolicy)
    TrafficPolicyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TrafficPolicy.newBuilder() to construct.
  private TrafficPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TrafficPolicy() {
    portLevelSettings_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TrafficPolicy();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TrafficPolicy(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.ourea.adapter.model.istio.LoadBalancerSettings.Builder subBuilder = null;
            if (loadBalancer_ != null) {
              subBuilder = loadBalancer_.toBuilder();
            }
            loadBalancer_ = input.readMessage(io.ourea.adapter.model.istio.LoadBalancerSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(loadBalancer_);
              loadBalancer_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder subBuilder = null;
            if (connectionPool_ != null) {
              subBuilder = connectionPool_.toBuilder();
            }
            connectionPool_ = input.readMessage(io.ourea.adapter.model.istio.ConnectionPoolSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(connectionPool_);
              connectionPool_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.ourea.adapter.model.istio.OutlierDetection.Builder subBuilder = null;
            if (outlierDetection_ != null) {
              subBuilder = outlierDetection_.toBuilder();
            }
            outlierDetection_ = input.readMessage(io.ourea.adapter.model.istio.OutlierDetection.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(outlierDetection_);
              outlierDetection_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            io.ourea.adapter.model.istio.ClientTLSSettings.Builder subBuilder = null;
            if (tls_ != null) {
              subBuilder = tls_.toBuilder();
            }
            tls_ = input.readMessage(io.ourea.adapter.model.istio.ClientTLSSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tls_);
              tls_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              portLevelSettings_ = new java.util.ArrayList<io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy>();
              mutable_bitField0_ |= 0x00000001;
            }
            portLevelSettings_.add(
                input.readMessage(io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        portLevelSettings_ = java.util.Collections.unmodifiableList(portLevelSettings_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.TrafficPolicy.class, io.ourea.adapter.model.istio.TrafficPolicy.Builder.class);
  }

  public interface PortTrafficPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies the number of a port on the destination service
     * on which this policy is being applied.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
     * @return Whether the port field is set.
     */
    boolean hasPort();
    /**
     * <pre>
     * Specifies the number of a port on the destination service
     * on which this policy is being applied.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
     * @return The port.
     */
    io.ourea.adapter.model.istio.PortSelector getPort();
    /**
     * <pre>
     * Specifies the number of a port on the destination service
     * on which this policy is being applied.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
     */
    io.ourea.adapter.model.istio.PortSelectorOrBuilder getPortOrBuilder();

    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
     * @return Whether the loadBalancer field is set.
     */
    boolean hasLoadBalancer();
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
     * @return The loadBalancer.
     */
    io.ourea.adapter.model.istio.LoadBalancerSettings getLoadBalancer();
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
     */
    io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder();

    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
     * @return Whether the connectionPool field is set.
     */
    boolean hasConnectionPool();
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
     * @return The connectionPool.
     */
    io.ourea.adapter.model.istio.ConnectionPoolSettings getConnectionPool();
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
     */
    io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder();

    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
     * @return Whether the outlierDetection field is set.
     */
    boolean hasOutlierDetection();
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
     * @return The outlierDetection.
     */
    io.ourea.adapter.model.istio.OutlierDetection getOutlierDetection();
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
     */
    io.ourea.adapter.model.istio.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder();

    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
     * @return Whether the tls field is set.
     */
    boolean hasTls();
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
     * @return The tls.
     */
    io.ourea.adapter.model.istio.ClientTLSSettings getTls();
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
     */
    io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder getTlsOrBuilder();
  }
  /**
   * <pre>
   * Traffic policies that apply to specific ports of the service
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy}
   */
  public static final class PortTrafficPolicy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
      PortTrafficPolicyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PortTrafficPolicy.newBuilder() to construct.
    private PortTrafficPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PortTrafficPolicy() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PortTrafficPolicy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PortTrafficPolicy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              io.ourea.adapter.model.istio.PortSelector.Builder subBuilder = null;
              if (port_ != null) {
                subBuilder = port_.toBuilder();
              }
              port_ = input.readMessage(io.ourea.adapter.model.istio.PortSelector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(port_);
                port_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.ourea.adapter.model.istio.LoadBalancerSettings.Builder subBuilder = null;
              if (loadBalancer_ != null) {
                subBuilder = loadBalancer_.toBuilder();
              }
              loadBalancer_ = input.readMessage(io.ourea.adapter.model.istio.LoadBalancerSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loadBalancer_);
                loadBalancer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder subBuilder = null;
              if (connectionPool_ != null) {
                subBuilder = connectionPool_.toBuilder();
              }
              connectionPool_ = input.readMessage(io.ourea.adapter.model.istio.ConnectionPoolSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connectionPool_);
                connectionPool_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.ourea.adapter.model.istio.OutlierDetection.Builder subBuilder = null;
              if (outlierDetection_ != null) {
                subBuilder = outlierDetection_.toBuilder();
              }
              outlierDetection_ = input.readMessage(io.ourea.adapter.model.istio.OutlierDetection.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outlierDetection_);
                outlierDetection_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.ourea.adapter.model.istio.ClientTLSSettings.Builder subBuilder = null;
              if (tls_ != null) {
                subBuilder = tls_.toBuilder();
              }
              tls_ = input.readMessage(io.ourea.adapter.model.istio.ClientTLSSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tls_);
                tls_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.class, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder.class);
    }

    public static final int PORT_FIELD_NUMBER = 1;
    private io.ourea.adapter.model.istio.PortSelector port_;
    /**
     * <pre>
     * Specifies the number of a port on the destination service
     * on which this policy is being applied.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
     * @return Whether the port field is set.
     */
    @java.lang.Override
    public boolean hasPort() {
      return port_ != null;
    }
    /**
     * <pre>
     * Specifies the number of a port on the destination service
     * on which this policy is being applied.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
     * @return The port.
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.PortSelector getPort() {
      return port_ == null ? io.ourea.adapter.model.istio.PortSelector.getDefaultInstance() : port_;
    }
    /**
     * <pre>
     * Specifies the number of a port on the destination service
     * on which this policy is being applied.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.PortSelectorOrBuilder getPortOrBuilder() {
      return getPort();
    }

    public static final int LOAD_BALANCER_FIELD_NUMBER = 2;
    private io.ourea.adapter.model.istio.LoadBalancerSettings loadBalancer_;
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
     * @return Whether the loadBalancer field is set.
     */
    @java.lang.Override
    public boolean hasLoadBalancer() {
      return loadBalancer_ != null;
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
     * @return The loadBalancer.
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.LoadBalancerSettings getLoadBalancer() {
      return loadBalancer_ == null ? io.ourea.adapter.model.istio.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder() {
      return getLoadBalancer();
    }

    public static final int CONNECTION_POOL_FIELD_NUMBER = 3;
    private io.ourea.adapter.model.istio.ConnectionPoolSettings connectionPool_;
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
     * @return Whether the connectionPool field is set.
     */
    @java.lang.Override
    public boolean hasConnectionPool() {
      return connectionPool_ != null;
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
     * @return The connectionPool.
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.ConnectionPoolSettings getConnectionPool() {
      return connectionPool_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder() {
      return getConnectionPool();
    }

    public static final int OUTLIER_DETECTION_FIELD_NUMBER = 4;
    private io.ourea.adapter.model.istio.OutlierDetection outlierDetection_;
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
     * @return Whether the outlierDetection field is set.
     */
    @java.lang.Override
    public boolean hasOutlierDetection() {
      return outlierDetection_ != null;
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
     * @return The outlierDetection.
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.OutlierDetection getOutlierDetection() {
      return outlierDetection_ == null ? io.ourea.adapter.model.istio.OutlierDetection.getDefaultInstance() : outlierDetection_;
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder() {
      return getOutlierDetection();
    }

    public static final int TLS_FIELD_NUMBER = 5;
    private io.ourea.adapter.model.istio.ClientTLSSettings tls_;
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
     * @return Whether the tls field is set.
     */
    @java.lang.Override
    public boolean hasTls() {
      return tls_ != null;
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
     * @return The tls.
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.ClientTLSSettings getTls() {
      return tls_ == null ? io.ourea.adapter.model.istio.ClientTLSSettings.getDefaultInstance() : tls_;
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder getTlsOrBuilder() {
      return getTls();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (port_ != null) {
        output.writeMessage(1, getPort());
      }
      if (loadBalancer_ != null) {
        output.writeMessage(2, getLoadBalancer());
      }
      if (connectionPool_ != null) {
        output.writeMessage(3, getConnectionPool());
      }
      if (outlierDetection_ != null) {
        output.writeMessage(4, getOutlierDetection());
      }
      if (tls_ != null) {
        output.writeMessage(5, getTls());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (port_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPort());
      }
      if (loadBalancer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLoadBalancer());
      }
      if (connectionPool_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getConnectionPool());
      }
      if (outlierDetection_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getOutlierDetection());
      }
      if (tls_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTls());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy)) {
        return super.equals(obj);
      }
      io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy other = (io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy) obj;

      if (hasPort() != other.hasPort()) return false;
      if (hasPort()) {
        if (!getPort()
            .equals(other.getPort())) return false;
      }
      if (hasLoadBalancer() != other.hasLoadBalancer()) return false;
      if (hasLoadBalancer()) {
        if (!getLoadBalancer()
            .equals(other.getLoadBalancer())) return false;
      }
      if (hasConnectionPool() != other.hasConnectionPool()) return false;
      if (hasConnectionPool()) {
        if (!getConnectionPool()
            .equals(other.getConnectionPool())) return false;
      }
      if (hasOutlierDetection() != other.hasOutlierDetection()) return false;
      if (hasOutlierDetection()) {
        if (!getOutlierDetection()
            .equals(other.getOutlierDetection())) return false;
      }
      if (hasTls() != other.hasTls()) return false;
      if (hasTls()) {
        if (!getTls()
            .equals(other.getTls())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort().hashCode();
      }
      if (hasLoadBalancer()) {
        hash = (37 * hash) + LOAD_BALANCER_FIELD_NUMBER;
        hash = (53 * hash) + getLoadBalancer().hashCode();
      }
      if (hasConnectionPool()) {
        hash = (37 * hash) + CONNECTION_POOL_FIELD_NUMBER;
        hash = (53 * hash) + getConnectionPool().hashCode();
      }
      if (hasOutlierDetection()) {
        hash = (37 * hash) + OUTLIER_DETECTION_FIELD_NUMBER;
        hash = (53 * hash) + getOutlierDetection().hashCode();
      }
      if (hasTls()) {
        hash = (37 * hash) + TLS_FIELD_NUMBER;
        hash = (53 * hash) + getTls().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Traffic policies that apply to specific ports of the service
     * </pre>
     *
     * Protobuf type {@code istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
        io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.class, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder.class);
      }

      // Construct using io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (portBuilder_ == null) {
          port_ = null;
        } else {
          port_ = null;
          portBuilder_ = null;
        }
        if (loadBalancerBuilder_ == null) {
          loadBalancer_ = null;
        } else {
          loadBalancer_ = null;
          loadBalancerBuilder_ = null;
        }
        if (connectionPoolBuilder_ == null) {
          connectionPool_ = null;
        } else {
          connectionPool_ = null;
          connectionPoolBuilder_ = null;
        }
        if (outlierDetectionBuilder_ == null) {
          outlierDetection_ = null;
        } else {
          outlierDetection_ = null;
          outlierDetectionBuilder_ = null;
        }
        if (tlsBuilder_ == null) {
          tls_ = null;
        } else {
          tls_ = null;
          tlsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_PortTrafficPolicy_descriptor;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy getDefaultInstanceForType() {
        return io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.getDefaultInstance();
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy build() {
        io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy buildPartial() {
        io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy result = new io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy(this);
        if (portBuilder_ == null) {
          result.port_ = port_;
        } else {
          result.port_ = portBuilder_.build();
        }
        if (loadBalancerBuilder_ == null) {
          result.loadBalancer_ = loadBalancer_;
        } else {
          result.loadBalancer_ = loadBalancerBuilder_.build();
        }
        if (connectionPoolBuilder_ == null) {
          result.connectionPool_ = connectionPool_;
        } else {
          result.connectionPool_ = connectionPoolBuilder_.build();
        }
        if (outlierDetectionBuilder_ == null) {
          result.outlierDetection_ = outlierDetection_;
        } else {
          result.outlierDetection_ = outlierDetectionBuilder_.build();
        }
        if (tlsBuilder_ == null) {
          result.tls_ = tls_;
        } else {
          result.tls_ = tlsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy) {
          return mergeFrom((io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy other) {
        if (other == io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.getDefaultInstance()) return this;
        if (other.hasPort()) {
          mergePort(other.getPort());
        }
        if (other.hasLoadBalancer()) {
          mergeLoadBalancer(other.getLoadBalancer());
        }
        if (other.hasConnectionPool()) {
          mergeConnectionPool(other.getConnectionPool());
        }
        if (other.hasOutlierDetection()) {
          mergeOutlierDetection(other.getOutlierDetection());
        }
        if (other.hasTls()) {
          mergeTls(other.getTls());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.ourea.adapter.model.istio.PortSelector port_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.PortSelector, io.ourea.adapter.model.istio.PortSelector.Builder, io.ourea.adapter.model.istio.PortSelectorOrBuilder> portBuilder_;
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       * @return Whether the port field is set.
       */
      public boolean hasPort() {
        return portBuilder_ != null || port_ != null;
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       * @return The port.
       */
      public io.ourea.adapter.model.istio.PortSelector getPort() {
        if (portBuilder_ == null) {
          return port_ == null ? io.ourea.adapter.model.istio.PortSelector.getDefaultInstance() : port_;
        } else {
          return portBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       */
      public Builder setPort(io.ourea.adapter.model.istio.PortSelector value) {
        if (portBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          port_ = value;
          onChanged();
        } else {
          portBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       */
      public Builder setPort(
          io.ourea.adapter.model.istio.PortSelector.Builder builderForValue) {
        if (portBuilder_ == null) {
          port_ = builderForValue.build();
          onChanged();
        } else {
          portBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       */
      public Builder mergePort(io.ourea.adapter.model.istio.PortSelector value) {
        if (portBuilder_ == null) {
          if (port_ != null) {
            port_ =
              io.ourea.adapter.model.istio.PortSelector.newBuilder(port_).mergeFrom(value).buildPartial();
          } else {
            port_ = value;
          }
          onChanged();
        } else {
          portBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       */
      public Builder clearPort() {
        if (portBuilder_ == null) {
          port_ = null;
          onChanged();
        } else {
          port_ = null;
          portBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       */
      public io.ourea.adapter.model.istio.PortSelector.Builder getPortBuilder() {
        
        onChanged();
        return getPortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       */
      public io.ourea.adapter.model.istio.PortSelectorOrBuilder getPortOrBuilder() {
        if (portBuilder_ != null) {
          return portBuilder_.getMessageOrBuilder();
        } else {
          return port_ == null ?
              io.ourea.adapter.model.istio.PortSelector.getDefaultInstance() : port_;
        }
      }
      /**
       * <pre>
       * Specifies the number of a port on the destination service
       * on which this policy is being applied.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.PortSelector port = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.PortSelector, io.ourea.adapter.model.istio.PortSelector.Builder, io.ourea.adapter.model.istio.PortSelectorOrBuilder> 
          getPortFieldBuilder() {
        if (portBuilder_ == null) {
          portBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.ourea.adapter.model.istio.PortSelector, io.ourea.adapter.model.istio.PortSelector.Builder, io.ourea.adapter.model.istio.PortSelectorOrBuilder>(
                  getPort(),
                  getParentForChildren(),
                  isClean());
          port_ = null;
        }
        return portBuilder_;
      }

      private io.ourea.adapter.model.istio.LoadBalancerSettings loadBalancer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.LoadBalancerSettings, io.ourea.adapter.model.istio.LoadBalancerSettings.Builder, io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder> loadBalancerBuilder_;
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       * @return Whether the loadBalancer field is set.
       */
      public boolean hasLoadBalancer() {
        return loadBalancerBuilder_ != null || loadBalancer_ != null;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       * @return The loadBalancer.
       */
      public io.ourea.adapter.model.istio.LoadBalancerSettings getLoadBalancer() {
        if (loadBalancerBuilder_ == null) {
          return loadBalancer_ == null ? io.ourea.adapter.model.istio.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
        } else {
          return loadBalancerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       */
      public Builder setLoadBalancer(io.ourea.adapter.model.istio.LoadBalancerSettings value) {
        if (loadBalancerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loadBalancer_ = value;
          onChanged();
        } else {
          loadBalancerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       */
      public Builder setLoadBalancer(
          io.ourea.adapter.model.istio.LoadBalancerSettings.Builder builderForValue) {
        if (loadBalancerBuilder_ == null) {
          loadBalancer_ = builderForValue.build();
          onChanged();
        } else {
          loadBalancerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       */
      public Builder mergeLoadBalancer(io.ourea.adapter.model.istio.LoadBalancerSettings value) {
        if (loadBalancerBuilder_ == null) {
          if (loadBalancer_ != null) {
            loadBalancer_ =
              io.ourea.adapter.model.istio.LoadBalancerSettings.newBuilder(loadBalancer_).mergeFrom(value).buildPartial();
          } else {
            loadBalancer_ = value;
          }
          onChanged();
        } else {
          loadBalancerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       */
      public Builder clearLoadBalancer() {
        if (loadBalancerBuilder_ == null) {
          loadBalancer_ = null;
          onChanged();
        } else {
          loadBalancer_ = null;
          loadBalancerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       */
      public io.ourea.adapter.model.istio.LoadBalancerSettings.Builder getLoadBalancerBuilder() {
        
        onChanged();
        return getLoadBalancerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       */
      public io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder() {
        if (loadBalancerBuilder_ != null) {
          return loadBalancerBuilder_.getMessageOrBuilder();
        } else {
          return loadBalancer_ == null ?
              io.ourea.adapter.model.istio.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
        }
      }
      /**
       * <pre>
       * Settings controlling the load balancer algorithms.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.LoadBalancerSettings, io.ourea.adapter.model.istio.LoadBalancerSettings.Builder, io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder> 
          getLoadBalancerFieldBuilder() {
        if (loadBalancerBuilder_ == null) {
          loadBalancerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.ourea.adapter.model.istio.LoadBalancerSettings, io.ourea.adapter.model.istio.LoadBalancerSettings.Builder, io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder>(
                  getLoadBalancer(),
                  getParentForChildren(),
                  isClean());
          loadBalancer_ = null;
        }
        return loadBalancerBuilder_;
      }

      private io.ourea.adapter.model.istio.ConnectionPoolSettings connectionPool_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.ConnectionPoolSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder> connectionPoolBuilder_;
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       * @return Whether the connectionPool field is set.
       */
      public boolean hasConnectionPool() {
        return connectionPoolBuilder_ != null || connectionPool_ != null;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       * @return The connectionPool.
       */
      public io.ourea.adapter.model.istio.ConnectionPoolSettings getConnectionPool() {
        if (connectionPoolBuilder_ == null) {
          return connectionPool_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
        } else {
          return connectionPoolBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       */
      public Builder setConnectionPool(io.ourea.adapter.model.istio.ConnectionPoolSettings value) {
        if (connectionPoolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connectionPool_ = value;
          onChanged();
        } else {
          connectionPoolBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       */
      public Builder setConnectionPool(
          io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder builderForValue) {
        if (connectionPoolBuilder_ == null) {
          connectionPool_ = builderForValue.build();
          onChanged();
        } else {
          connectionPoolBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       */
      public Builder mergeConnectionPool(io.ourea.adapter.model.istio.ConnectionPoolSettings value) {
        if (connectionPoolBuilder_ == null) {
          if (connectionPool_ != null) {
            connectionPool_ =
              io.ourea.adapter.model.istio.ConnectionPoolSettings.newBuilder(connectionPool_).mergeFrom(value).buildPartial();
          } else {
            connectionPool_ = value;
          }
          onChanged();
        } else {
          connectionPoolBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       */
      public Builder clearConnectionPool() {
        if (connectionPoolBuilder_ == null) {
          connectionPool_ = null;
          onChanged();
        } else {
          connectionPool_ = null;
          connectionPoolBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       */
      public io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder getConnectionPoolBuilder() {
        
        onChanged();
        return getConnectionPoolFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       */
      public io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder() {
        if (connectionPoolBuilder_ != null) {
          return connectionPoolBuilder_.getMessageOrBuilder();
        } else {
          return connectionPool_ == null ?
              io.ourea.adapter.model.istio.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
        }
      }
      /**
       * <pre>
       * Settings controlling the volume of connections to an upstream service
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.ConnectionPoolSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder> 
          getConnectionPoolFieldBuilder() {
        if (connectionPoolBuilder_ == null) {
          connectionPoolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.ourea.adapter.model.istio.ConnectionPoolSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder>(
                  getConnectionPool(),
                  getParentForChildren(),
                  isClean());
          connectionPool_ = null;
        }
        return connectionPoolBuilder_;
      }

      private io.ourea.adapter.model.istio.OutlierDetection outlierDetection_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.OutlierDetection, io.ourea.adapter.model.istio.OutlierDetection.Builder, io.ourea.adapter.model.istio.OutlierDetectionOrBuilder> outlierDetectionBuilder_;
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       * @return Whether the outlierDetection field is set.
       */
      public boolean hasOutlierDetection() {
        return outlierDetectionBuilder_ != null || outlierDetection_ != null;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       * @return The outlierDetection.
       */
      public io.ourea.adapter.model.istio.OutlierDetection getOutlierDetection() {
        if (outlierDetectionBuilder_ == null) {
          return outlierDetection_ == null ? io.ourea.adapter.model.istio.OutlierDetection.getDefaultInstance() : outlierDetection_;
        } else {
          return outlierDetectionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       */
      public Builder setOutlierDetection(io.ourea.adapter.model.istio.OutlierDetection value) {
        if (outlierDetectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outlierDetection_ = value;
          onChanged();
        } else {
          outlierDetectionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       */
      public Builder setOutlierDetection(
          io.ourea.adapter.model.istio.OutlierDetection.Builder builderForValue) {
        if (outlierDetectionBuilder_ == null) {
          outlierDetection_ = builderForValue.build();
          onChanged();
        } else {
          outlierDetectionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       */
      public Builder mergeOutlierDetection(io.ourea.adapter.model.istio.OutlierDetection value) {
        if (outlierDetectionBuilder_ == null) {
          if (outlierDetection_ != null) {
            outlierDetection_ =
              io.ourea.adapter.model.istio.OutlierDetection.newBuilder(outlierDetection_).mergeFrom(value).buildPartial();
          } else {
            outlierDetection_ = value;
          }
          onChanged();
        } else {
          outlierDetectionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       */
      public Builder clearOutlierDetection() {
        if (outlierDetectionBuilder_ == null) {
          outlierDetection_ = null;
          onChanged();
        } else {
          outlierDetection_ = null;
          outlierDetectionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       */
      public io.ourea.adapter.model.istio.OutlierDetection.Builder getOutlierDetectionBuilder() {
        
        onChanged();
        return getOutlierDetectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       */
      public io.ourea.adapter.model.istio.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder() {
        if (outlierDetectionBuilder_ != null) {
          return outlierDetectionBuilder_.getMessageOrBuilder();
        } else {
          return outlierDetection_ == null ?
              io.ourea.adapter.model.istio.OutlierDetection.getDefaultInstance() : outlierDetection_;
        }
      }
      /**
       * <pre>
       * Settings controlling eviction of unhealthy hosts from the load balancing pool
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.OutlierDetection, io.ourea.adapter.model.istio.OutlierDetection.Builder, io.ourea.adapter.model.istio.OutlierDetectionOrBuilder> 
          getOutlierDetectionFieldBuilder() {
        if (outlierDetectionBuilder_ == null) {
          outlierDetectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.ourea.adapter.model.istio.OutlierDetection, io.ourea.adapter.model.istio.OutlierDetection.Builder, io.ourea.adapter.model.istio.OutlierDetectionOrBuilder>(
                  getOutlierDetection(),
                  getParentForChildren(),
                  isClean());
          outlierDetection_ = null;
        }
        return outlierDetectionBuilder_;
      }

      private io.ourea.adapter.model.istio.ClientTLSSettings tls_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.ClientTLSSettings, io.ourea.adapter.model.istio.ClientTLSSettings.Builder, io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder> tlsBuilder_;
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       * @return Whether the tls field is set.
       */
      public boolean hasTls() {
        return tlsBuilder_ != null || tls_ != null;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       * @return The tls.
       */
      public io.ourea.adapter.model.istio.ClientTLSSettings getTls() {
        if (tlsBuilder_ == null) {
          return tls_ == null ? io.ourea.adapter.model.istio.ClientTLSSettings.getDefaultInstance() : tls_;
        } else {
          return tlsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       */
      public Builder setTls(io.ourea.adapter.model.istio.ClientTLSSettings value) {
        if (tlsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tls_ = value;
          onChanged();
        } else {
          tlsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       */
      public Builder setTls(
          io.ourea.adapter.model.istio.ClientTLSSettings.Builder builderForValue) {
        if (tlsBuilder_ == null) {
          tls_ = builderForValue.build();
          onChanged();
        } else {
          tlsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       */
      public Builder mergeTls(io.ourea.adapter.model.istio.ClientTLSSettings value) {
        if (tlsBuilder_ == null) {
          if (tls_ != null) {
            tls_ =
              io.ourea.adapter.model.istio.ClientTLSSettings.newBuilder(tls_).mergeFrom(value).buildPartial();
          } else {
            tls_ = value;
          }
          onChanged();
        } else {
          tlsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       */
      public Builder clearTls() {
        if (tlsBuilder_ == null) {
          tls_ = null;
          onChanged();
        } else {
          tls_ = null;
          tlsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       */
      public io.ourea.adapter.model.istio.ClientTLSSettings.Builder getTlsBuilder() {
        
        onChanged();
        return getTlsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       */
      public io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder getTlsOrBuilder() {
        if (tlsBuilder_ != null) {
          return tlsBuilder_.getMessageOrBuilder();
        } else {
          return tls_ == null ?
              io.ourea.adapter.model.istio.ClientTLSSettings.getDefaultInstance() : tls_;
        }
      }
      /**
       * <pre>
       * TLS related settings for connections to the upstream service.
       * </pre>
       *
       * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.ourea.adapter.model.istio.ClientTLSSettings, io.ourea.adapter.model.istio.ClientTLSSettings.Builder, io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder> 
          getTlsFieldBuilder() {
        if (tlsBuilder_ == null) {
          tlsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.ourea.adapter.model.istio.ClientTLSSettings, io.ourea.adapter.model.istio.ClientTLSSettings.Builder, io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder>(
                  getTls(),
                  getParentForChildren(),
                  isClean());
          tls_ = null;
        }
        return tlsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
    }

    // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy)
    private static final io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy();
    }

    public static io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PortTrafficPolicy>
        PARSER = new com.google.protobuf.AbstractParser<PortTrafficPolicy>() {
      @java.lang.Override
      public PortTrafficPolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PortTrafficPolicy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PortTrafficPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PortTrafficPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int LOAD_BALANCER_FIELD_NUMBER = 1;
  private io.ourea.adapter.model.istio.LoadBalancerSettings loadBalancer_;
  /**
   * <pre>
   * Settings controlling the load balancer algorithms.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
   * @return Whether the loadBalancer field is set.
   */
  @java.lang.Override
  public boolean hasLoadBalancer() {
    return loadBalancer_ != null;
  }
  /**
   * <pre>
   * Settings controlling the load balancer algorithms.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
   * @return The loadBalancer.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.LoadBalancerSettings getLoadBalancer() {
    return loadBalancer_ == null ? io.ourea.adapter.model.istio.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
  }
  /**
   * <pre>
   * Settings controlling the load balancer algorithms.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder() {
    return getLoadBalancer();
  }

  public static final int CONNECTION_POOL_FIELD_NUMBER = 2;
  private io.ourea.adapter.model.istio.ConnectionPoolSettings connectionPool_;
  /**
   * <pre>
   * Settings controlling the volume of connections to an upstream service
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
   * @return Whether the connectionPool field is set.
   */
  @java.lang.Override
  public boolean hasConnectionPool() {
    return connectionPool_ != null;
  }
  /**
   * <pre>
   * Settings controlling the volume of connections to an upstream service
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
   * @return The connectionPool.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.ConnectionPoolSettings getConnectionPool() {
    return connectionPool_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
  }
  /**
   * <pre>
   * Settings controlling the volume of connections to an upstream service
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder() {
    return getConnectionPool();
  }

  public static final int OUTLIER_DETECTION_FIELD_NUMBER = 3;
  private io.ourea.adapter.model.istio.OutlierDetection outlierDetection_;
  /**
   * <pre>
   * Settings controlling eviction of unhealthy hosts from the load balancing pool
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
   * @return Whether the outlierDetection field is set.
   */
  @java.lang.Override
  public boolean hasOutlierDetection() {
    return outlierDetection_ != null;
  }
  /**
   * <pre>
   * Settings controlling eviction of unhealthy hosts from the load balancing pool
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
   * @return The outlierDetection.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.OutlierDetection getOutlierDetection() {
    return outlierDetection_ == null ? io.ourea.adapter.model.istio.OutlierDetection.getDefaultInstance() : outlierDetection_;
  }
  /**
   * <pre>
   * Settings controlling eviction of unhealthy hosts from the load balancing pool
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder() {
    return getOutlierDetection();
  }

  public static final int TLS_FIELD_NUMBER = 4;
  private io.ourea.adapter.model.istio.ClientTLSSettings tls_;
  /**
   * <pre>
   * TLS related settings for connections to the upstream service.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
   * @return Whether the tls field is set.
   */
  @java.lang.Override
  public boolean hasTls() {
    return tls_ != null;
  }
  /**
   * <pre>
   * TLS related settings for connections to the upstream service.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
   * @return The tls.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.ClientTLSSettings getTls() {
    return tls_ == null ? io.ourea.adapter.model.istio.ClientTLSSettings.getDefaultInstance() : tls_;
  }
  /**
   * <pre>
   * TLS related settings for connections to the upstream service.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder getTlsOrBuilder() {
    return getTls();
  }

  public static final int PORT_LEVEL_SETTINGS_FIELD_NUMBER = 5;
  private java.util.List<io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy> portLevelSettings_;
  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  @java.lang.Override
  public java.util.List<io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy> getPortLevelSettingsList() {
    return portLevelSettings_;
  }
  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder> 
      getPortLevelSettingsOrBuilderList() {
    return portLevelSettings_;
  }
  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  @java.lang.Override
  public int getPortLevelSettingsCount() {
    return portLevelSettings_.size();
  }
  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy getPortLevelSettings(int index) {
    return portLevelSettings_.get(index);
  }
  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder getPortLevelSettingsOrBuilder(
      int index) {
    return portLevelSettings_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (loadBalancer_ != null) {
      output.writeMessage(1, getLoadBalancer());
    }
    if (connectionPool_ != null) {
      output.writeMessage(2, getConnectionPool());
    }
    if (outlierDetection_ != null) {
      output.writeMessage(3, getOutlierDetection());
    }
    if (tls_ != null) {
      output.writeMessage(4, getTls());
    }
    for (int i = 0; i < portLevelSettings_.size(); i++) {
      output.writeMessage(5, portLevelSettings_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (loadBalancer_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getLoadBalancer());
    }
    if (connectionPool_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getConnectionPool());
    }
    if (outlierDetection_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getOutlierDetection());
    }
    if (tls_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getTls());
    }
    for (int i = 0; i < portLevelSettings_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, portLevelSettings_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.TrafficPolicy)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.TrafficPolicy other = (io.ourea.adapter.model.istio.TrafficPolicy) obj;

    if (hasLoadBalancer() != other.hasLoadBalancer()) return false;
    if (hasLoadBalancer()) {
      if (!getLoadBalancer()
          .equals(other.getLoadBalancer())) return false;
    }
    if (hasConnectionPool() != other.hasConnectionPool()) return false;
    if (hasConnectionPool()) {
      if (!getConnectionPool()
          .equals(other.getConnectionPool())) return false;
    }
    if (hasOutlierDetection() != other.hasOutlierDetection()) return false;
    if (hasOutlierDetection()) {
      if (!getOutlierDetection()
          .equals(other.getOutlierDetection())) return false;
    }
    if (hasTls() != other.hasTls()) return false;
    if (hasTls()) {
      if (!getTls()
          .equals(other.getTls())) return false;
    }
    if (!getPortLevelSettingsList()
        .equals(other.getPortLevelSettingsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasLoadBalancer()) {
      hash = (37 * hash) + LOAD_BALANCER_FIELD_NUMBER;
      hash = (53 * hash) + getLoadBalancer().hashCode();
    }
    if (hasConnectionPool()) {
      hash = (37 * hash) + CONNECTION_POOL_FIELD_NUMBER;
      hash = (53 * hash) + getConnectionPool().hashCode();
    }
    if (hasOutlierDetection()) {
      hash = (37 * hash) + OUTLIER_DETECTION_FIELD_NUMBER;
      hash = (53 * hash) + getOutlierDetection().hashCode();
    }
    if (hasTls()) {
      hash = (37 * hash) + TLS_FIELD_NUMBER;
      hash = (53 * hash) + getTls().hashCode();
    }
    if (getPortLevelSettingsCount() > 0) {
      hash = (37 * hash) + PORT_LEVEL_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getPortLevelSettingsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.TrafficPolicy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.TrafficPolicy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Traffic policies to apply for a specific destination, across all
   * destination ports. See DestinationRule for examples.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.TrafficPolicy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.TrafficPolicy)
      io.ourea.adapter.model.istio.TrafficPolicyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.TrafficPolicy.class, io.ourea.adapter.model.istio.TrafficPolicy.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.TrafficPolicy.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPortLevelSettingsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (loadBalancerBuilder_ == null) {
        loadBalancer_ = null;
      } else {
        loadBalancer_ = null;
        loadBalancerBuilder_ = null;
      }
      if (connectionPoolBuilder_ == null) {
        connectionPool_ = null;
      } else {
        connectionPool_ = null;
        connectionPoolBuilder_ = null;
      }
      if (outlierDetectionBuilder_ == null) {
        outlierDetection_ = null;
      } else {
        outlierDetection_ = null;
        outlierDetectionBuilder_ = null;
      }
      if (tlsBuilder_ == null) {
        tls_ = null;
      } else {
        tls_ = null;
        tlsBuilder_ = null;
      }
      if (portLevelSettingsBuilder_ == null) {
        portLevelSettings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        portLevelSettingsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.DestinationRuleOuterClass.internal_static_istio_networking_v1alpha3_TrafficPolicy_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.TrafficPolicy getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.TrafficPolicy.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.TrafficPolicy build() {
      io.ourea.adapter.model.istio.TrafficPolicy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.TrafficPolicy buildPartial() {
      io.ourea.adapter.model.istio.TrafficPolicy result = new io.ourea.adapter.model.istio.TrafficPolicy(this);
      int from_bitField0_ = bitField0_;
      if (loadBalancerBuilder_ == null) {
        result.loadBalancer_ = loadBalancer_;
      } else {
        result.loadBalancer_ = loadBalancerBuilder_.build();
      }
      if (connectionPoolBuilder_ == null) {
        result.connectionPool_ = connectionPool_;
      } else {
        result.connectionPool_ = connectionPoolBuilder_.build();
      }
      if (outlierDetectionBuilder_ == null) {
        result.outlierDetection_ = outlierDetection_;
      } else {
        result.outlierDetection_ = outlierDetectionBuilder_.build();
      }
      if (tlsBuilder_ == null) {
        result.tls_ = tls_;
      } else {
        result.tls_ = tlsBuilder_.build();
      }
      if (portLevelSettingsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          portLevelSettings_ = java.util.Collections.unmodifiableList(portLevelSettings_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.portLevelSettings_ = portLevelSettings_;
      } else {
        result.portLevelSettings_ = portLevelSettingsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.TrafficPolicy) {
        return mergeFrom((io.ourea.adapter.model.istio.TrafficPolicy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.TrafficPolicy other) {
      if (other == io.ourea.adapter.model.istio.TrafficPolicy.getDefaultInstance()) return this;
      if (other.hasLoadBalancer()) {
        mergeLoadBalancer(other.getLoadBalancer());
      }
      if (other.hasConnectionPool()) {
        mergeConnectionPool(other.getConnectionPool());
      }
      if (other.hasOutlierDetection()) {
        mergeOutlierDetection(other.getOutlierDetection());
      }
      if (other.hasTls()) {
        mergeTls(other.getTls());
      }
      if (portLevelSettingsBuilder_ == null) {
        if (!other.portLevelSettings_.isEmpty()) {
          if (portLevelSettings_.isEmpty()) {
            portLevelSettings_ = other.portLevelSettings_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePortLevelSettingsIsMutable();
            portLevelSettings_.addAll(other.portLevelSettings_);
          }
          onChanged();
        }
      } else {
        if (!other.portLevelSettings_.isEmpty()) {
          if (portLevelSettingsBuilder_.isEmpty()) {
            portLevelSettingsBuilder_.dispose();
            portLevelSettingsBuilder_ = null;
            portLevelSettings_ = other.portLevelSettings_;
            bitField0_ = (bitField0_ & ~0x00000001);
            portLevelSettingsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPortLevelSettingsFieldBuilder() : null;
          } else {
            portLevelSettingsBuilder_.addAllMessages(other.portLevelSettings_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.TrafficPolicy parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.TrafficPolicy) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private io.ourea.adapter.model.istio.LoadBalancerSettings loadBalancer_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.LoadBalancerSettings, io.ourea.adapter.model.istio.LoadBalancerSettings.Builder, io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder> loadBalancerBuilder_;
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     * @return Whether the loadBalancer field is set.
     */
    public boolean hasLoadBalancer() {
      return loadBalancerBuilder_ != null || loadBalancer_ != null;
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     * @return The loadBalancer.
     */
    public io.ourea.adapter.model.istio.LoadBalancerSettings getLoadBalancer() {
      if (loadBalancerBuilder_ == null) {
        return loadBalancer_ == null ? io.ourea.adapter.model.istio.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
      } else {
        return loadBalancerBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     */
    public Builder setLoadBalancer(io.ourea.adapter.model.istio.LoadBalancerSettings value) {
      if (loadBalancerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        loadBalancer_ = value;
        onChanged();
      } else {
        loadBalancerBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     */
    public Builder setLoadBalancer(
        io.ourea.adapter.model.istio.LoadBalancerSettings.Builder builderForValue) {
      if (loadBalancerBuilder_ == null) {
        loadBalancer_ = builderForValue.build();
        onChanged();
      } else {
        loadBalancerBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     */
    public Builder mergeLoadBalancer(io.ourea.adapter.model.istio.LoadBalancerSettings value) {
      if (loadBalancerBuilder_ == null) {
        if (loadBalancer_ != null) {
          loadBalancer_ =
            io.ourea.adapter.model.istio.LoadBalancerSettings.newBuilder(loadBalancer_).mergeFrom(value).buildPartial();
        } else {
          loadBalancer_ = value;
        }
        onChanged();
      } else {
        loadBalancerBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     */
    public Builder clearLoadBalancer() {
      if (loadBalancerBuilder_ == null) {
        loadBalancer_ = null;
        onChanged();
      } else {
        loadBalancer_ = null;
        loadBalancerBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     */
    public io.ourea.adapter.model.istio.LoadBalancerSettings.Builder getLoadBalancerBuilder() {
      
      onChanged();
      return getLoadBalancerFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     */
    public io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder() {
      if (loadBalancerBuilder_ != null) {
        return loadBalancerBuilder_.getMessageOrBuilder();
      } else {
        return loadBalancer_ == null ?
            io.ourea.adapter.model.istio.LoadBalancerSettings.getDefaultInstance() : loadBalancer_;
      }
    }
    /**
     * <pre>
     * Settings controlling the load balancer algorithms.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.LoadBalancerSettings, io.ourea.adapter.model.istio.LoadBalancerSettings.Builder, io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder> 
        getLoadBalancerFieldBuilder() {
      if (loadBalancerBuilder_ == null) {
        loadBalancerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.LoadBalancerSettings, io.ourea.adapter.model.istio.LoadBalancerSettings.Builder, io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder>(
                getLoadBalancer(),
                getParentForChildren(),
                isClean());
        loadBalancer_ = null;
      }
      return loadBalancerBuilder_;
    }

    private io.ourea.adapter.model.istio.ConnectionPoolSettings connectionPool_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.ConnectionPoolSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder> connectionPoolBuilder_;
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     * @return Whether the connectionPool field is set.
     */
    public boolean hasConnectionPool() {
      return connectionPoolBuilder_ != null || connectionPool_ != null;
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     * @return The connectionPool.
     */
    public io.ourea.adapter.model.istio.ConnectionPoolSettings getConnectionPool() {
      if (connectionPoolBuilder_ == null) {
        return connectionPool_ == null ? io.ourea.adapter.model.istio.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
      } else {
        return connectionPoolBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     */
    public Builder setConnectionPool(io.ourea.adapter.model.istio.ConnectionPoolSettings value) {
      if (connectionPoolBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        connectionPool_ = value;
        onChanged();
      } else {
        connectionPoolBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     */
    public Builder setConnectionPool(
        io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder builderForValue) {
      if (connectionPoolBuilder_ == null) {
        connectionPool_ = builderForValue.build();
        onChanged();
      } else {
        connectionPoolBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     */
    public Builder mergeConnectionPool(io.ourea.adapter.model.istio.ConnectionPoolSettings value) {
      if (connectionPoolBuilder_ == null) {
        if (connectionPool_ != null) {
          connectionPool_ =
            io.ourea.adapter.model.istio.ConnectionPoolSettings.newBuilder(connectionPool_).mergeFrom(value).buildPartial();
        } else {
          connectionPool_ = value;
        }
        onChanged();
      } else {
        connectionPoolBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     */
    public Builder clearConnectionPool() {
      if (connectionPoolBuilder_ == null) {
        connectionPool_ = null;
        onChanged();
      } else {
        connectionPool_ = null;
        connectionPoolBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     */
    public io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder getConnectionPoolBuilder() {
      
      onChanged();
      return getConnectionPoolFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     */
    public io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder() {
      if (connectionPoolBuilder_ != null) {
        return connectionPoolBuilder_.getMessageOrBuilder();
      } else {
        return connectionPool_ == null ?
            io.ourea.adapter.model.istio.ConnectionPoolSettings.getDefaultInstance() : connectionPool_;
      }
    }
    /**
     * <pre>
     * Settings controlling the volume of connections to an upstream service
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.ConnectionPoolSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder> 
        getConnectionPoolFieldBuilder() {
      if (connectionPoolBuilder_ == null) {
        connectionPoolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.ConnectionPoolSettings, io.ourea.adapter.model.istio.ConnectionPoolSettings.Builder, io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder>(
                getConnectionPool(),
                getParentForChildren(),
                isClean());
        connectionPool_ = null;
      }
      return connectionPoolBuilder_;
    }

    private io.ourea.adapter.model.istio.OutlierDetection outlierDetection_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.OutlierDetection, io.ourea.adapter.model.istio.OutlierDetection.Builder, io.ourea.adapter.model.istio.OutlierDetectionOrBuilder> outlierDetectionBuilder_;
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     * @return Whether the outlierDetection field is set.
     */
    public boolean hasOutlierDetection() {
      return outlierDetectionBuilder_ != null || outlierDetection_ != null;
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     * @return The outlierDetection.
     */
    public io.ourea.adapter.model.istio.OutlierDetection getOutlierDetection() {
      if (outlierDetectionBuilder_ == null) {
        return outlierDetection_ == null ? io.ourea.adapter.model.istio.OutlierDetection.getDefaultInstance() : outlierDetection_;
      } else {
        return outlierDetectionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     */
    public Builder setOutlierDetection(io.ourea.adapter.model.istio.OutlierDetection value) {
      if (outlierDetectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        outlierDetection_ = value;
        onChanged();
      } else {
        outlierDetectionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     */
    public Builder setOutlierDetection(
        io.ourea.adapter.model.istio.OutlierDetection.Builder builderForValue) {
      if (outlierDetectionBuilder_ == null) {
        outlierDetection_ = builderForValue.build();
        onChanged();
      } else {
        outlierDetectionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     */
    public Builder mergeOutlierDetection(io.ourea.adapter.model.istio.OutlierDetection value) {
      if (outlierDetectionBuilder_ == null) {
        if (outlierDetection_ != null) {
          outlierDetection_ =
            io.ourea.adapter.model.istio.OutlierDetection.newBuilder(outlierDetection_).mergeFrom(value).buildPartial();
        } else {
          outlierDetection_ = value;
        }
        onChanged();
      } else {
        outlierDetectionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     */
    public Builder clearOutlierDetection() {
      if (outlierDetectionBuilder_ == null) {
        outlierDetection_ = null;
        onChanged();
      } else {
        outlierDetection_ = null;
        outlierDetectionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     */
    public io.ourea.adapter.model.istio.OutlierDetection.Builder getOutlierDetectionBuilder() {
      
      onChanged();
      return getOutlierDetectionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     */
    public io.ourea.adapter.model.istio.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder() {
      if (outlierDetectionBuilder_ != null) {
        return outlierDetectionBuilder_.getMessageOrBuilder();
      } else {
        return outlierDetection_ == null ?
            io.ourea.adapter.model.istio.OutlierDetection.getDefaultInstance() : outlierDetection_;
      }
    }
    /**
     * <pre>
     * Settings controlling eviction of unhealthy hosts from the load balancing pool
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.OutlierDetection, io.ourea.adapter.model.istio.OutlierDetection.Builder, io.ourea.adapter.model.istio.OutlierDetectionOrBuilder> 
        getOutlierDetectionFieldBuilder() {
      if (outlierDetectionBuilder_ == null) {
        outlierDetectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.OutlierDetection, io.ourea.adapter.model.istio.OutlierDetection.Builder, io.ourea.adapter.model.istio.OutlierDetectionOrBuilder>(
                getOutlierDetection(),
                getParentForChildren(),
                isClean());
        outlierDetection_ = null;
      }
      return outlierDetectionBuilder_;
    }

    private io.ourea.adapter.model.istio.ClientTLSSettings tls_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.ClientTLSSettings, io.ourea.adapter.model.istio.ClientTLSSettings.Builder, io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder> tlsBuilder_;
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     * @return Whether the tls field is set.
     */
    public boolean hasTls() {
      return tlsBuilder_ != null || tls_ != null;
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     * @return The tls.
     */
    public io.ourea.adapter.model.istio.ClientTLSSettings getTls() {
      if (tlsBuilder_ == null) {
        return tls_ == null ? io.ourea.adapter.model.istio.ClientTLSSettings.getDefaultInstance() : tls_;
      } else {
        return tlsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     */
    public Builder setTls(io.ourea.adapter.model.istio.ClientTLSSettings value) {
      if (tlsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tls_ = value;
        onChanged();
      } else {
        tlsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     */
    public Builder setTls(
        io.ourea.adapter.model.istio.ClientTLSSettings.Builder builderForValue) {
      if (tlsBuilder_ == null) {
        tls_ = builderForValue.build();
        onChanged();
      } else {
        tlsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     */
    public Builder mergeTls(io.ourea.adapter.model.istio.ClientTLSSettings value) {
      if (tlsBuilder_ == null) {
        if (tls_ != null) {
          tls_ =
            io.ourea.adapter.model.istio.ClientTLSSettings.newBuilder(tls_).mergeFrom(value).buildPartial();
        } else {
          tls_ = value;
        }
        onChanged();
      } else {
        tlsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     */
    public Builder clearTls() {
      if (tlsBuilder_ == null) {
        tls_ = null;
        onChanged();
      } else {
        tls_ = null;
        tlsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     */
    public io.ourea.adapter.model.istio.ClientTLSSettings.Builder getTlsBuilder() {
      
      onChanged();
      return getTlsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     */
    public io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder getTlsOrBuilder() {
      if (tlsBuilder_ != null) {
        return tlsBuilder_.getMessageOrBuilder();
      } else {
        return tls_ == null ?
            io.ourea.adapter.model.istio.ClientTLSSettings.getDefaultInstance() : tls_;
      }
    }
    /**
     * <pre>
     * TLS related settings for connections to the upstream service.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.ClientTLSSettings, io.ourea.adapter.model.istio.ClientTLSSettings.Builder, io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder> 
        getTlsFieldBuilder() {
      if (tlsBuilder_ == null) {
        tlsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.ClientTLSSettings, io.ourea.adapter.model.istio.ClientTLSSettings.Builder, io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder>(
                getTls(),
                getParentForChildren(),
                isClean());
        tls_ = null;
      }
      return tlsBuilder_;
    }

    private java.util.List<io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy> portLevelSettings_ =
      java.util.Collections.emptyList();
    private void ensurePortLevelSettingsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        portLevelSettings_ = new java.util.ArrayList<io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy>(portLevelSettings_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder> portLevelSettingsBuilder_;

    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy> getPortLevelSettingsList() {
      if (portLevelSettingsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(portLevelSettings_);
      } else {
        return portLevelSettingsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public int getPortLevelSettingsCount() {
      if (portLevelSettingsBuilder_ == null) {
        return portLevelSettings_.size();
      } else {
        return portLevelSettingsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy getPortLevelSettings(int index) {
      if (portLevelSettingsBuilder_ == null) {
        return portLevelSettings_.get(index);
      } else {
        return portLevelSettingsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public Builder setPortLevelSettings(
        int index, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy value) {
      if (portLevelSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePortLevelSettingsIsMutable();
        portLevelSettings_.set(index, value);
        onChanged();
      } else {
        portLevelSettingsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public Builder setPortLevelSettings(
        int index, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder builderForValue) {
      if (portLevelSettingsBuilder_ == null) {
        ensurePortLevelSettingsIsMutable();
        portLevelSettings_.set(index, builderForValue.build());
        onChanged();
      } else {
        portLevelSettingsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public Builder addPortLevelSettings(io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy value) {
      if (portLevelSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePortLevelSettingsIsMutable();
        portLevelSettings_.add(value);
        onChanged();
      } else {
        portLevelSettingsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public Builder addPortLevelSettings(
        int index, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy value) {
      if (portLevelSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePortLevelSettingsIsMutable();
        portLevelSettings_.add(index, value);
        onChanged();
      } else {
        portLevelSettingsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public Builder addPortLevelSettings(
        io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder builderForValue) {
      if (portLevelSettingsBuilder_ == null) {
        ensurePortLevelSettingsIsMutable();
        portLevelSettings_.add(builderForValue.build());
        onChanged();
      } else {
        portLevelSettingsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public Builder addPortLevelSettings(
        int index, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder builderForValue) {
      if (portLevelSettingsBuilder_ == null) {
        ensurePortLevelSettingsIsMutable();
        portLevelSettings_.add(index, builderForValue.build());
        onChanged();
      } else {
        portLevelSettingsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public Builder addAllPortLevelSettings(
        java.lang.Iterable<? extends io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy> values) {
      if (portLevelSettingsBuilder_ == null) {
        ensurePortLevelSettingsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, portLevelSettings_);
        onChanged();
      } else {
        portLevelSettingsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public Builder clearPortLevelSettings() {
      if (portLevelSettingsBuilder_ == null) {
        portLevelSettings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        portLevelSettingsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public Builder removePortLevelSettings(int index) {
      if (portLevelSettingsBuilder_ == null) {
        ensurePortLevelSettingsIsMutable();
        portLevelSettings_.remove(index);
        onChanged();
      } else {
        portLevelSettingsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder getPortLevelSettingsBuilder(
        int index) {
      return getPortLevelSettingsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder getPortLevelSettingsOrBuilder(
        int index) {
      if (portLevelSettingsBuilder_ == null) {
        return portLevelSettings_.get(index);  } else {
        return portLevelSettingsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public java.util.List<? extends io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder> 
         getPortLevelSettingsOrBuilderList() {
      if (portLevelSettingsBuilder_ != null) {
        return portLevelSettingsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(portLevelSettings_);
      }
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder addPortLevelSettingsBuilder() {
      return getPortLevelSettingsFieldBuilder().addBuilder(
          io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.getDefaultInstance());
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder addPortLevelSettingsBuilder(
        int index) {
      return getPortLevelSettingsFieldBuilder().addBuilder(
          index, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.getDefaultInstance());
    }
    /**
     * <pre>
     * Traffic policies specific to individual ports. Note that port level
     * settings will override the destination-level settings. Traffic
     * settings specified at the destination-level will not be inherited when
     * overridden by port-level settings, i.e. default values will be applied
     * to fields omitted in port-level traffic policies.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder> 
         getPortLevelSettingsBuilderList() {
      return getPortLevelSettingsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder> 
        getPortLevelSettingsFieldBuilder() {
      if (portLevelSettingsBuilder_ == null) {
        portLevelSettingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy.Builder, io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder>(
                portLevelSettings_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        portLevelSettings_ = null;
      }
      return portLevelSettingsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.TrafficPolicy)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.TrafficPolicy)
  private static final io.ourea.adapter.model.istio.TrafficPolicy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.TrafficPolicy();
  }

  public static io.ourea.adapter.model.istio.TrafficPolicy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TrafficPolicy>
      PARSER = new com.google.protobuf.AbstractParser<TrafficPolicy>() {
    @java.lang.Override
    public TrafficPolicy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TrafficPolicy(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TrafficPolicy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TrafficPolicy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.TrafficPolicy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

