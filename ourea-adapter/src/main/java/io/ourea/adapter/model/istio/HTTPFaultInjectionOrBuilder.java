// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: virtual_service.proto

package io.ourea.adapter.model.istio;

public interface HTTPFaultInjectionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.HTTPFaultInjection)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Delay requests before forwarding, emulating various failures such as
   * network issues, overloaded upstream service, etc.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.HTTPFaultInjection.Delay delay = 1;</code>
   * @return Whether the delay field is set.
   */
  boolean hasDelay();
  /**
   * <pre>
   * Delay requests before forwarding, emulating various failures such as
   * network issues, overloaded upstream service, etc.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.HTTPFaultInjection.Delay delay = 1;</code>
   * @return The delay.
   */
  io.ourea.adapter.model.istio.HTTPFaultInjection.Delay getDelay();
  /**
   * <pre>
   * Delay requests before forwarding, emulating various failures such as
   * network issues, overloaded upstream service, etc.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.HTTPFaultInjection.Delay delay = 1;</code>
   */
  io.ourea.adapter.model.istio.HTTPFaultInjection.DelayOrBuilder getDelayOrBuilder();

  /**
   * <pre>
   * Abort Http request attempts and return error codes back to downstream
   * service, giving the impression that the upstream service is faulty.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.HTTPFaultInjection.Abort abort = 2;</code>
   * @return Whether the abort field is set.
   */
  boolean hasAbort();
  /**
   * <pre>
   * Abort Http request attempts and return error codes back to downstream
   * service, giving the impression that the upstream service is faulty.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.HTTPFaultInjection.Abort abort = 2;</code>
   * @return The abort.
   */
  io.ourea.adapter.model.istio.HTTPFaultInjection.Abort getAbort();
  /**
   * <pre>
   * Abort Http request attempts and return error codes back to downstream
   * service, giving the impression that the upstream service is faulty.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.HTTPFaultInjection.Abort abort = 2;</code>
   */
  io.ourea.adapter.model.istio.HTTPFaultInjection.AbortOrBuilder getAbortOrBuilder();
}
