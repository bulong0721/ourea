// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: virtual_service.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * Describes match conditions and actions for routing unterminated TLS
 * traffic (TLS/HTTPS) The following routing rule forwards unterminated TLS
 * traffic arriving at port 443 of gateway called "mygateway" to internal
 * services in the mesh based on the SNI value.
 * {{&lt;tabset category-name="example"&gt;}}
 * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1alpha3
 * kind: VirtualService
 * metadata:
 *   name: bookinfo-sni
 * spec:
 *   hosts:
 *   - "*.bookinfo.com"
 *   gateways:
 *   - mygateway
 *   tls:
 *   - match:
 *     - port: 443
 *       sniHosts:
 *       - login.bookinfo.com
 *     route:
 *     - destination:
 *         host: login.prod.svc.cluster.local
 *   - match:
 *     - port: 443
 *       sniHosts:
 *       - reviews.bookinfo.com
 *     route:
 *     - destination:
 *         host: reviews.prod.svc.cluster.local
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1beta1
 * kind: VirtualService
 * metadata:
 *   name: bookinfo-sni
 * spec:
 *   hosts:
 *   - "*.bookinfo.com"
 *   gateways:
 *   - mygateway
 *   tls:
 *   - match:
 *     - port: 443
 *       sniHosts:
 *       - login.bookinfo.com
 *     route:
 *     - destination:
 *         host: login.prod.svc.cluster.local
 *   - match:
 *     - port: 443
 *       sniHosts:
 *       - reviews.bookinfo.com
 *     route:
 *     - destination:
 *         host: reviews.prod.svc.cluster.local
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;/tabset&gt;}}
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.TLSRoute}
 */
public final class TLSRoute extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.TLSRoute)
    TLSRouteOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TLSRoute.newBuilder() to construct.
  private TLSRoute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TLSRoute() {
    match_ = java.util.Collections.emptyList();
    route_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TLSRoute();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TLSRoute(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              match_ = new java.util.ArrayList<io.ourea.adapter.model.istio.TLSMatchAttributes>();
              mutable_bitField0_ |= 0x00000001;
            }
            match_.add(
                input.readMessage(io.ourea.adapter.model.istio.TLSMatchAttributes.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              route_ = new java.util.ArrayList<io.ourea.adapter.model.istio.RouteDestination>();
              mutable_bitField0_ |= 0x00000002;
            }
            route_.add(
                input.readMessage(io.ourea.adapter.model.istio.RouteDestination.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        match_ = java.util.Collections.unmodifiableList(match_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        route_ = java.util.Collections.unmodifiableList(route_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_TLSRoute_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_TLSRoute_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.TLSRoute.class, io.ourea.adapter.model.istio.TLSRoute.Builder.class);
  }

  public static final int MATCH_FIELD_NUMBER = 1;
  private java.util.List<io.ourea.adapter.model.istio.TLSMatchAttributes> match_;
  /**
   * <pre>
   * Match conditions to be satisfied for the rule to be
   * activated. All conditions inside a single match block have AND
   * semantics, while the list of match blocks have OR semantics. The rule
   * is matched if any one of the match blocks succeed.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public java.util.List<io.ourea.adapter.model.istio.TLSMatchAttributes> getMatchList() {
    return match_;
  }
  /**
   * <pre>
   * Match conditions to be satisfied for the rule to be
   * activated. All conditions inside a single match block have AND
   * semantics, while the list of match blocks have OR semantics. The rule
   * is matched if any one of the match blocks succeed.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.ourea.adapter.model.istio.TLSMatchAttributesOrBuilder> 
      getMatchOrBuilderList() {
    return match_;
  }
  /**
   * <pre>
   * Match conditions to be satisfied for the rule to be
   * activated. All conditions inside a single match block have AND
   * semantics, while the list of match blocks have OR semantics. The rule
   * is matched if any one of the match blocks succeed.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public int getMatchCount() {
    return match_.size();
  }
  /**
   * <pre>
   * Match conditions to be satisfied for the rule to be
   * activated. All conditions inside a single match block have AND
   * semantics, while the list of match blocks have OR semantics. The rule
   * is matched if any one of the match blocks succeed.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.TLSMatchAttributes getMatch(int index) {
    return match_.get(index);
  }
  /**
   * <pre>
   * Match conditions to be satisfied for the rule to be
   * activated. All conditions inside a single match block have AND
   * semantics, while the list of match blocks have OR semantics. The rule
   * is matched if any one of the match blocks succeed.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.TLSMatchAttributesOrBuilder getMatchOrBuilder(
      int index) {
    return match_.get(index);
  }

  public static final int ROUTE_FIELD_NUMBER = 2;
  private java.util.List<io.ourea.adapter.model.istio.RouteDestination> route_;
  /**
   * <pre>
   * The destination to which the connection should be forwarded to.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.ourea.adapter.model.istio.RouteDestination> getRouteList() {
    return route_;
  }
  /**
   * <pre>
   * The destination to which the connection should be forwarded to.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.ourea.adapter.model.istio.RouteDestinationOrBuilder> 
      getRouteOrBuilderList() {
    return route_;
  }
  /**
   * <pre>
   * The destination to which the connection should be forwarded to.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
   */
  @java.lang.Override
  public int getRouteCount() {
    return route_.size();
  }
  /**
   * <pre>
   * The destination to which the connection should be forwarded to.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.RouteDestination getRoute(int index) {
    return route_.get(index);
  }
  /**
   * <pre>
   * The destination to which the connection should be forwarded to.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.RouteDestinationOrBuilder getRouteOrBuilder(
      int index) {
    return route_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < match_.size(); i++) {
      output.writeMessage(1, match_.get(i));
    }
    for (int i = 0; i < route_.size(); i++) {
      output.writeMessage(2, route_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < match_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, match_.get(i));
    }
    for (int i = 0; i < route_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, route_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.TLSRoute)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.TLSRoute other = (io.ourea.adapter.model.istio.TLSRoute) obj;

    if (!getMatchList()
        .equals(other.getMatchList())) return false;
    if (!getRouteList()
        .equals(other.getRouteList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getMatchCount() > 0) {
      hash = (37 * hash) + MATCH_FIELD_NUMBER;
      hash = (53 * hash) + getMatchList().hashCode();
    }
    if (getRouteCount() > 0) {
      hash = (37 * hash) + ROUTE_FIELD_NUMBER;
      hash = (53 * hash) + getRouteList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.TLSRoute parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.TLSRoute prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes match conditions and actions for routing unterminated TLS
   * traffic (TLS/HTTPS) The following routing rule forwards unterminated TLS
   * traffic arriving at port 443 of gateway called "mygateway" to internal
   * services in the mesh based on the SNI value.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: VirtualService
   * metadata:
   *   name: bookinfo-sni
   * spec:
   *   hosts:
   *   - "*.bookinfo.com"
   *   gateways:
   *   - mygateway
   *   tls:
   *   - match:
   *     - port: 443
   *       sniHosts:
   *       - login.bookinfo.com
   *     route:
   *     - destination:
   *         host: login.prod.svc.cluster.local
   *   - match:
   *     - port: 443
   *       sniHosts:
   *       - reviews.bookinfo.com
   *     route:
   *     - destination:
   *         host: reviews.prod.svc.cluster.local
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: VirtualService
   * metadata:
   *   name: bookinfo-sni
   * spec:
   *   hosts:
   *   - "*.bookinfo.com"
   *   gateways:
   *   - mygateway
   *   tls:
   *   - match:
   *     - port: 443
   *       sniHosts:
   *       - login.bookinfo.com
   *     route:
   *     - destination:
   *         host: login.prod.svc.cluster.local
   *   - match:
   *     - port: 443
   *       sniHosts:
   *       - reviews.bookinfo.com
   *     route:
   *     - destination:
   *         host: reviews.prod.svc.cluster.local
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.TLSRoute}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.TLSRoute)
      io.ourea.adapter.model.istio.TLSRouteOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_TLSRoute_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_TLSRoute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.TLSRoute.class, io.ourea.adapter.model.istio.TLSRoute.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.TLSRoute.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMatchFieldBuilder();
        getRouteFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (matchBuilder_ == null) {
        match_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        matchBuilder_.clear();
      }
      if (routeBuilder_ == null) {
        route_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        routeBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_TLSRoute_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.TLSRoute getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.TLSRoute.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.TLSRoute build() {
      io.ourea.adapter.model.istio.TLSRoute result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.TLSRoute buildPartial() {
      io.ourea.adapter.model.istio.TLSRoute result = new io.ourea.adapter.model.istio.TLSRoute(this);
      int from_bitField0_ = bitField0_;
      if (matchBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          match_ = java.util.Collections.unmodifiableList(match_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.match_ = match_;
      } else {
        result.match_ = matchBuilder_.build();
      }
      if (routeBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          route_ = java.util.Collections.unmodifiableList(route_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.route_ = route_;
      } else {
        result.route_ = routeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.TLSRoute) {
        return mergeFrom((io.ourea.adapter.model.istio.TLSRoute)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.TLSRoute other) {
      if (other == io.ourea.adapter.model.istio.TLSRoute.getDefaultInstance()) return this;
      if (matchBuilder_ == null) {
        if (!other.match_.isEmpty()) {
          if (match_.isEmpty()) {
            match_ = other.match_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMatchIsMutable();
            match_.addAll(other.match_);
          }
          onChanged();
        }
      } else {
        if (!other.match_.isEmpty()) {
          if (matchBuilder_.isEmpty()) {
            matchBuilder_.dispose();
            matchBuilder_ = null;
            match_ = other.match_;
            bitField0_ = (bitField0_ & ~0x00000001);
            matchBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMatchFieldBuilder() : null;
          } else {
            matchBuilder_.addAllMessages(other.match_);
          }
        }
      }
      if (routeBuilder_ == null) {
        if (!other.route_.isEmpty()) {
          if (route_.isEmpty()) {
            route_ = other.route_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRouteIsMutable();
            route_.addAll(other.route_);
          }
          onChanged();
        }
      } else {
        if (!other.route_.isEmpty()) {
          if (routeBuilder_.isEmpty()) {
            routeBuilder_.dispose();
            routeBuilder_ = null;
            route_ = other.route_;
            bitField0_ = (bitField0_ & ~0x00000002);
            routeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRouteFieldBuilder() : null;
          } else {
            routeBuilder_.addAllMessages(other.route_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.TLSRoute parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.TLSRoute) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<io.ourea.adapter.model.istio.TLSMatchAttributes> match_ =
      java.util.Collections.emptyList();
    private void ensureMatchIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        match_ = new java.util.ArrayList<io.ourea.adapter.model.istio.TLSMatchAttributes>(match_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.TLSMatchAttributes, io.ourea.adapter.model.istio.TLSMatchAttributes.Builder, io.ourea.adapter.model.istio.TLSMatchAttributesOrBuilder> matchBuilder_;

    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.TLSMatchAttributes> getMatchList() {
      if (matchBuilder_ == null) {
        return java.util.Collections.unmodifiableList(match_);
      } else {
        return matchBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public int getMatchCount() {
      if (matchBuilder_ == null) {
        return match_.size();
      } else {
        return matchBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public io.ourea.adapter.model.istio.TLSMatchAttributes getMatch(int index) {
      if (matchBuilder_ == null) {
        return match_.get(index);
      } else {
        return matchBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setMatch(
        int index, io.ourea.adapter.model.istio.TLSMatchAttributes value) {
      if (matchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMatchIsMutable();
        match_.set(index, value);
        onChanged();
      } else {
        matchBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setMatch(
        int index, io.ourea.adapter.model.istio.TLSMatchAttributes.Builder builderForValue) {
      if (matchBuilder_ == null) {
        ensureMatchIsMutable();
        match_.set(index, builderForValue.build());
        onChanged();
      } else {
        matchBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addMatch(io.ourea.adapter.model.istio.TLSMatchAttributes value) {
      if (matchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMatchIsMutable();
        match_.add(value);
        onChanged();
      } else {
        matchBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addMatch(
        int index, io.ourea.adapter.model.istio.TLSMatchAttributes value) {
      if (matchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMatchIsMutable();
        match_.add(index, value);
        onChanged();
      } else {
        matchBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addMatch(
        io.ourea.adapter.model.istio.TLSMatchAttributes.Builder builderForValue) {
      if (matchBuilder_ == null) {
        ensureMatchIsMutable();
        match_.add(builderForValue.build());
        onChanged();
      } else {
        matchBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addMatch(
        int index, io.ourea.adapter.model.istio.TLSMatchAttributes.Builder builderForValue) {
      if (matchBuilder_ == null) {
        ensureMatchIsMutable();
        match_.add(index, builderForValue.build());
        onChanged();
      } else {
        matchBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addAllMatch(
        java.lang.Iterable<? extends io.ourea.adapter.model.istio.TLSMatchAttributes> values) {
      if (matchBuilder_ == null) {
        ensureMatchIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, match_);
        onChanged();
      } else {
        matchBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearMatch() {
      if (matchBuilder_ == null) {
        match_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        matchBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder removeMatch(int index) {
      if (matchBuilder_ == null) {
        ensureMatchIsMutable();
        match_.remove(index);
        onChanged();
      } else {
        matchBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public io.ourea.adapter.model.istio.TLSMatchAttributes.Builder getMatchBuilder(
        int index) {
      return getMatchFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public io.ourea.adapter.model.istio.TLSMatchAttributesOrBuilder getMatchOrBuilder(
        int index) {
      if (matchBuilder_ == null) {
        return match_.get(index);  } else {
        return matchBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<? extends io.ourea.adapter.model.istio.TLSMatchAttributesOrBuilder> 
         getMatchOrBuilderList() {
      if (matchBuilder_ != null) {
        return matchBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(match_);
      }
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public io.ourea.adapter.model.istio.TLSMatchAttributes.Builder addMatchBuilder() {
      return getMatchFieldBuilder().addBuilder(
          io.ourea.adapter.model.istio.TLSMatchAttributes.getDefaultInstance());
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public io.ourea.adapter.model.istio.TLSMatchAttributes.Builder addMatchBuilder(
        int index) {
      return getMatchFieldBuilder().addBuilder(
          index, io.ourea.adapter.model.istio.TLSMatchAttributes.getDefaultInstance());
    }
    /**
     * <pre>
     * Match conditions to be satisfied for the rule to be
     * activated. All conditions inside a single match block have AND
     * semantics, while the list of match blocks have OR semantics. The rule
     * is matched if any one of the match blocks succeed.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.TLSMatchAttributes match = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.TLSMatchAttributes.Builder> 
         getMatchBuilderList() {
      return getMatchFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.TLSMatchAttributes, io.ourea.adapter.model.istio.TLSMatchAttributes.Builder, io.ourea.adapter.model.istio.TLSMatchAttributesOrBuilder> 
        getMatchFieldBuilder() {
      if (matchBuilder_ == null) {
        matchBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.ourea.adapter.model.istio.TLSMatchAttributes, io.ourea.adapter.model.istio.TLSMatchAttributes.Builder, io.ourea.adapter.model.istio.TLSMatchAttributesOrBuilder>(
                match_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        match_ = null;
      }
      return matchBuilder_;
    }

    private java.util.List<io.ourea.adapter.model.istio.RouteDestination> route_ =
      java.util.Collections.emptyList();
    private void ensureRouteIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        route_ = new java.util.ArrayList<io.ourea.adapter.model.istio.RouteDestination>(route_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.RouteDestination, io.ourea.adapter.model.istio.RouteDestination.Builder, io.ourea.adapter.model.istio.RouteDestinationOrBuilder> routeBuilder_;

    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.RouteDestination> getRouteList() {
      if (routeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(route_);
      } else {
        return routeBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public int getRouteCount() {
      if (routeBuilder_ == null) {
        return route_.size();
      } else {
        return routeBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public io.ourea.adapter.model.istio.RouteDestination getRoute(int index) {
      if (routeBuilder_ == null) {
        return route_.get(index);
      } else {
        return routeBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public Builder setRoute(
        int index, io.ourea.adapter.model.istio.RouteDestination value) {
      if (routeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRouteIsMutable();
        route_.set(index, value);
        onChanged();
      } else {
        routeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public Builder setRoute(
        int index, io.ourea.adapter.model.istio.RouteDestination.Builder builderForValue) {
      if (routeBuilder_ == null) {
        ensureRouteIsMutable();
        route_.set(index, builderForValue.build());
        onChanged();
      } else {
        routeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public Builder addRoute(io.ourea.adapter.model.istio.RouteDestination value) {
      if (routeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRouteIsMutable();
        route_.add(value);
        onChanged();
      } else {
        routeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public Builder addRoute(
        int index, io.ourea.adapter.model.istio.RouteDestination value) {
      if (routeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRouteIsMutable();
        route_.add(index, value);
        onChanged();
      } else {
        routeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public Builder addRoute(
        io.ourea.adapter.model.istio.RouteDestination.Builder builderForValue) {
      if (routeBuilder_ == null) {
        ensureRouteIsMutable();
        route_.add(builderForValue.build());
        onChanged();
      } else {
        routeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public Builder addRoute(
        int index, io.ourea.adapter.model.istio.RouteDestination.Builder builderForValue) {
      if (routeBuilder_ == null) {
        ensureRouteIsMutable();
        route_.add(index, builderForValue.build());
        onChanged();
      } else {
        routeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public Builder addAllRoute(
        java.lang.Iterable<? extends io.ourea.adapter.model.istio.RouteDestination> values) {
      if (routeBuilder_ == null) {
        ensureRouteIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, route_);
        onChanged();
      } else {
        routeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public Builder clearRoute() {
      if (routeBuilder_ == null) {
        route_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        routeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public Builder removeRoute(int index) {
      if (routeBuilder_ == null) {
        ensureRouteIsMutable();
        route_.remove(index);
        onChanged();
      } else {
        routeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public io.ourea.adapter.model.istio.RouteDestination.Builder getRouteBuilder(
        int index) {
      return getRouteFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public io.ourea.adapter.model.istio.RouteDestinationOrBuilder getRouteOrBuilder(
        int index) {
      if (routeBuilder_ == null) {
        return route_.get(index);  } else {
        return routeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public java.util.List<? extends io.ourea.adapter.model.istio.RouteDestinationOrBuilder> 
         getRouteOrBuilderList() {
      if (routeBuilder_ != null) {
        return routeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(route_);
      }
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public io.ourea.adapter.model.istio.RouteDestination.Builder addRouteBuilder() {
      return getRouteFieldBuilder().addBuilder(
          io.ourea.adapter.model.istio.RouteDestination.getDefaultInstance());
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public io.ourea.adapter.model.istio.RouteDestination.Builder addRouteBuilder(
        int index) {
      return getRouteFieldBuilder().addBuilder(
          index, io.ourea.adapter.model.istio.RouteDestination.getDefaultInstance());
    }
    /**
     * <pre>
     * The destination to which the connection should be forwarded to.
     * </pre>
     *
     * <code>repeated .istio.networking.v1alpha3.RouteDestination route = 2;</code>
     */
    public java.util.List<io.ourea.adapter.model.istio.RouteDestination.Builder> 
         getRouteBuilderList() {
      return getRouteFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.ourea.adapter.model.istio.RouteDestination, io.ourea.adapter.model.istio.RouteDestination.Builder, io.ourea.adapter.model.istio.RouteDestinationOrBuilder> 
        getRouteFieldBuilder() {
      if (routeBuilder_ == null) {
        routeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.ourea.adapter.model.istio.RouteDestination, io.ourea.adapter.model.istio.RouteDestination.Builder, io.ourea.adapter.model.istio.RouteDestinationOrBuilder>(
                route_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        route_ = null;
      }
      return routeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.TLSRoute)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.TLSRoute)
  private static final io.ourea.adapter.model.istio.TLSRoute DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.TLSRoute();
  }

  public static io.ourea.adapter.model.istio.TLSRoute getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TLSRoute>
      PARSER = new com.google.protobuf.AbstractParser<TLSRoute>() {
    @java.lang.Override
    public TLSRoute parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TLSRoute(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TLSRoute> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TLSRoute> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.TLSRoute getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

