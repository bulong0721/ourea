// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: destination_rule.proto

package io.ourea.adapter.model.istio;

public interface ClientTLSSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.ClientTLSSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Indicates whether connections to this port should be secured
   * using TLS. The value of this field determines how TLS is enforced.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for mode.
   */
  int getModeValue();
  /**
   * <pre>
   * Indicates whether connections to this port should be secured
   * using TLS. The value of this field determines how TLS is enforced.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ClientTLSSettings.TLSmode mode = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The mode.
   */
  io.ourea.adapter.model.istio.ClientTLSSettings.TLSmode getMode();

  /**
   * <pre>
   * REQUIRED if mode is `MUTUAL`. The path to the file holding the
   * client-side TLS certificate to use.
   * Should be empty if mode is `ISTIO_MUTUAL`.
   * </pre>
   *
   * <code>string client_certificate = 2;</code>
   * @return The clientCertificate.
   */
  java.lang.String getClientCertificate();
  /**
   * <pre>
   * REQUIRED if mode is `MUTUAL`. The path to the file holding the
   * client-side TLS certificate to use.
   * Should be empty if mode is `ISTIO_MUTUAL`.
   * </pre>
   *
   * <code>string client_certificate = 2;</code>
   * @return The bytes for clientCertificate.
   */
  com.google.protobuf.ByteString
      getClientCertificateBytes();

  /**
   * <pre>
   * REQUIRED if mode is `MUTUAL`. The path to the file holding the
   * client's private key.
   * Should be empty if mode is `ISTIO_MUTUAL`.
   * </pre>
   *
   * <code>string private_key = 3;</code>
   * @return The privateKey.
   */
  java.lang.String getPrivateKey();
  /**
   * <pre>
   * REQUIRED if mode is `MUTUAL`. The path to the file holding the
   * client's private key.
   * Should be empty if mode is `ISTIO_MUTUAL`.
   * </pre>
   *
   * <code>string private_key = 3;</code>
   * @return The bytes for privateKey.
   */
  com.google.protobuf.ByteString
      getPrivateKeyBytes();

  /**
   * <pre>
   * OPTIONAL: The path to the file containing certificate authority
   * certificates to use in verifying a presented server certificate. If
   * omitted, the proxy will not verify the server's certificate.
   * Should be empty if mode is `ISTIO_MUTUAL`.
   * </pre>
   *
   * <code>string ca_certificates = 4;</code>
   * @return The caCertificates.
   */
  java.lang.String getCaCertificates();
  /**
   * <pre>
   * OPTIONAL: The path to the file containing certificate authority
   * certificates to use in verifying a presented server certificate. If
   * omitted, the proxy will not verify the server's certificate.
   * Should be empty if mode is `ISTIO_MUTUAL`.
   * </pre>
   *
   * <code>string ca_certificates = 4;</code>
   * @return The bytes for caCertificates.
   */
  com.google.protobuf.ByteString
      getCaCertificatesBytes();

  /**
   * <pre>
   * The name of the secret that holds the TLS certs for the
   * client including the CA certificates. Secret must exist in the
   * same namespace with the proxy using the certificates.
   * The secret (of type `generic`)should contain the
   * following keys and values: `key: &lt;privateKey&gt;`,
   * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
   * Secret of type tls for client certificates along with
   * ca.crt key for CA certificates is also supported.
   * Only one of client certificates and CA certificate
   * or credentialName can be specified.
   * **NOTE:** This field is currently applicable only at gateways.
   * Sidecars will continue to use the certificate paths.
   * </pre>
   *
   * <code>string credential_name = 7;</code>
   * @return The credentialName.
   */
  java.lang.String getCredentialName();
  /**
   * <pre>
   * The name of the secret that holds the TLS certs for the
   * client including the CA certificates. Secret must exist in the
   * same namespace with the proxy using the certificates.
   * The secret (of type `generic`)should contain the
   * following keys and values: `key: &lt;privateKey&gt;`,
   * `cert: &lt;serverCert&gt;`, `cacert: &lt;CACertificate&gt;`.
   * Secret of type tls for client certificates along with
   * ca.crt key for CA certificates is also supported.
   * Only one of client certificates and CA certificate
   * or credentialName can be specified.
   * **NOTE:** This field is currently applicable only at gateways.
   * Sidecars will continue to use the certificate paths.
   * </pre>
   *
   * <code>string credential_name = 7;</code>
   * @return The bytes for credentialName.
   */
  com.google.protobuf.ByteString
      getCredentialNameBytes();

  /**
   * <pre>
   * A list of alternate names to verify the subject identity in the
   * certificate. If specified, the proxy will verify that the server
   * certificate's subject alt name matches one of the specified values.
   * If specified, this list overrides the value of subject_alt_names
   * from the ServiceEntry.
   * </pre>
   *
   * <code>repeated string subject_alt_names = 5;</code>
   * @return A list containing the subjectAltNames.
   */
  java.util.List<java.lang.String>
      getSubjectAltNamesList();
  /**
   * <pre>
   * A list of alternate names to verify the subject identity in the
   * certificate. If specified, the proxy will verify that the server
   * certificate's subject alt name matches one of the specified values.
   * If specified, this list overrides the value of subject_alt_names
   * from the ServiceEntry.
   * </pre>
   *
   * <code>repeated string subject_alt_names = 5;</code>
   * @return The count of subjectAltNames.
   */
  int getSubjectAltNamesCount();
  /**
   * <pre>
   * A list of alternate names to verify the subject identity in the
   * certificate. If specified, the proxy will verify that the server
   * certificate's subject alt name matches one of the specified values.
   * If specified, this list overrides the value of subject_alt_names
   * from the ServiceEntry.
   * </pre>
   *
   * <code>repeated string subject_alt_names = 5;</code>
   * @param index The index of the element to return.
   * @return The subjectAltNames at the given index.
   */
  java.lang.String getSubjectAltNames(int index);
  /**
   * <pre>
   * A list of alternate names to verify the subject identity in the
   * certificate. If specified, the proxy will verify that the server
   * certificate's subject alt name matches one of the specified values.
   * If specified, this list overrides the value of subject_alt_names
   * from the ServiceEntry.
   * </pre>
   *
   * <code>repeated string subject_alt_names = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the subjectAltNames at the given index.
   */
  com.google.protobuf.ByteString
      getSubjectAltNamesBytes(int index);

  /**
   * <pre>
   * SNI string to present to the server during TLS handshake.
   * </pre>
   *
   * <code>string sni = 6;</code>
   * @return The sni.
   */
  java.lang.String getSni();
  /**
   * <pre>
   * SNI string to present to the server during TLS handshake.
   * </pre>
   *
   * <code>string sni = 6;</code>
   * @return The bytes for sni.
   */
  com.google.protobuf.ByteString
      getSniBytes();
}
