// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: destination_rule.proto

package io.ourea.adapter.model.istio;

public interface TrafficPolicyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.TrafficPolicy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Settings controlling the load balancer algorithms.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
   * @return Whether the loadBalancer field is set.
   */
  boolean hasLoadBalancer();
  /**
   * <pre>
   * Settings controlling the load balancer algorithms.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
   * @return The loadBalancer.
   */
  io.ourea.adapter.model.istio.LoadBalancerSettings getLoadBalancer();
  /**
   * <pre>
   * Settings controlling the load balancer algorithms.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.LoadBalancerSettings load_balancer = 1;</code>
   */
  io.ourea.adapter.model.istio.LoadBalancerSettingsOrBuilder getLoadBalancerOrBuilder();

  /**
   * <pre>
   * Settings controlling the volume of connections to an upstream service
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
   * @return Whether the connectionPool field is set.
   */
  boolean hasConnectionPool();
  /**
   * <pre>
   * Settings controlling the volume of connections to an upstream service
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
   * @return The connectionPool.
   */
  io.ourea.adapter.model.istio.ConnectionPoolSettings getConnectionPool();
  /**
   * <pre>
   * Settings controlling the volume of connections to an upstream service
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ConnectionPoolSettings connection_pool = 2;</code>
   */
  io.ourea.adapter.model.istio.ConnectionPoolSettingsOrBuilder getConnectionPoolOrBuilder();

  /**
   * <pre>
   * Settings controlling eviction of unhealthy hosts from the load balancing pool
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
   * @return Whether the outlierDetection field is set.
   */
  boolean hasOutlierDetection();
  /**
   * <pre>
   * Settings controlling eviction of unhealthy hosts from the load balancing pool
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
   * @return The outlierDetection.
   */
  io.ourea.adapter.model.istio.OutlierDetection getOutlierDetection();
  /**
   * <pre>
   * Settings controlling eviction of unhealthy hosts from the load balancing pool
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.OutlierDetection outlier_detection = 3;</code>
   */
  io.ourea.adapter.model.istio.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder();

  /**
   * <pre>
   * TLS related settings for connections to the upstream service.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
   * @return Whether the tls field is set.
   */
  boolean hasTls();
  /**
   * <pre>
   * TLS related settings for connections to the upstream service.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
   * @return The tls.
   */
  io.ourea.adapter.model.istio.ClientTLSSettings getTls();
  /**
   * <pre>
   * TLS related settings for connections to the upstream service.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.ClientTLSSettings tls = 4;</code>
   */
  io.ourea.adapter.model.istio.ClientTLSSettingsOrBuilder getTlsOrBuilder();

  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  java.util.List<io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy> 
      getPortLevelSettingsList();
  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicy getPortLevelSettings(int index);
  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  int getPortLevelSettingsCount();
  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  java.util.List<? extends io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder> 
      getPortLevelSettingsOrBuilderList();
  /**
   * <pre>
   * Traffic policies specific to individual ports. Note that port level
   * settings will override the destination-level settings. Traffic
   * settings specified at the destination-level will not be inherited when
   * overridden by port-level settings, i.e. default values will be applied
   * to fields omitted in port-level traffic policies.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.TrafficPolicy.PortTrafficPolicy port_level_settings = 5;</code>
   */
  io.ourea.adapter.model.istio.TrafficPolicy.PortTrafficPolicyOrBuilder getPortLevelSettingsOrBuilder(
      int index);
}
