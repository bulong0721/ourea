// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy_filter.proto

package io.ourea.adapter.model.istio;

public interface EnvoyFilterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:istio.networking.v1alpha3.EnvoyFilter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Criteria used to select the specific set of pods/VMs on which
   * this patch configuration should be applied. If omitted, the set
   * of patches in this configuration will be applied to all workload
   * instances in the same namespace.  If omitted, the EnvoyFilter
   * patches will be applied to all workloads in the same
   * namespace. If the EnvoyFilter is present in the config root
   * namespace, it will be applied to all applicable workloads in any
   * namespace.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 3;</code>
   * @return Whether the workloadSelector field is set.
   */
  boolean hasWorkloadSelector();
  /**
   * <pre>
   * Criteria used to select the specific set of pods/VMs on which
   * this patch configuration should be applied. If omitted, the set
   * of patches in this configuration will be applied to all workload
   * instances in the same namespace.  If omitted, the EnvoyFilter
   * patches will be applied to all workloads in the same
   * namespace. If the EnvoyFilter is present in the config root
   * namespace, it will be applied to all applicable workloads in any
   * namespace.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 3;</code>
   * @return The workloadSelector.
   */
  io.ourea.adapter.model.istio.WorkloadSelector getWorkloadSelector();
  /**
   * <pre>
   * Criteria used to select the specific set of pods/VMs on which
   * this patch configuration should be applied. If omitted, the set
   * of patches in this configuration will be applied to all workload
   * instances in the same namespace.  If omitted, the EnvoyFilter
   * patches will be applied to all workloads in the same
   * namespace. If the EnvoyFilter is present in the config root
   * namespace, it will be applied to all applicable workloads in any
   * namespace.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.WorkloadSelector workload_selector = 3;</code>
   */
  io.ourea.adapter.model.istio.WorkloadSelectorOrBuilder getWorkloadSelectorOrBuilder();

  /**
   * <pre>
   * One or more patches with match conditions.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectPatch config_patches = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.util.List<io.ourea.adapter.model.istio.EnvoyFilter.EnvoyConfigObjectPatch> 
      getConfigPatchesList();
  /**
   * <pre>
   * One or more patches with match conditions.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectPatch config_patches = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  io.ourea.adapter.model.istio.EnvoyFilter.EnvoyConfigObjectPatch getConfigPatches(int index);
  /**
   * <pre>
   * One or more patches with match conditions.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectPatch config_patches = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  int getConfigPatchesCount();
  /**
   * <pre>
   * One or more patches with match conditions.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectPatch config_patches = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.util.List<? extends io.ourea.adapter.model.istio.EnvoyFilter.EnvoyConfigObjectPatchOrBuilder> 
      getConfigPatchesOrBuilderList();
  /**
   * <pre>
   * One or more patches with match conditions.
   * </pre>
   *
   * <code>repeated .istio.networking.v1alpha3.EnvoyFilter.EnvoyConfigObjectPatch config_patches = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  io.ourea.adapter.model.istio.EnvoyFilter.EnvoyConfigObjectPatchOrBuilder getConfigPatchesOrBuilder(
      int index);
}
