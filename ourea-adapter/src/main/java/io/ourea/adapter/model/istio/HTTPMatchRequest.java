// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: virtual_service.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * HttpMatchRequest specifies a set of criterion to be met in order for the
 * rule to be applied to the HTTP request. For example, the following
 * restricts the rule to match only requests where the URL path
 * starts with /ratings/v2/ and the request contains a custom `end-user` header
 * with value `jason`.
 * {{&lt;tabset category-name="example"&gt;}}
 * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1alpha3
 * kind: VirtualService
 * metadata:
 *   name: ratings-route
 * spec:
 *   hosts:
 *   - ratings.prod.svc.cluster.local
 *   http:
 *   - match:
 *     - headers:
 *         end-user:
 *           exact: jason
 *       uri:
 *         prefix: "/ratings/v2/"
 *       ignoreUriCase: true
 *     route:
 *     - destination:
 *         host: ratings.prod.svc.cluster.local
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
 * ```yaml
 * apiVersion: networking.istio.io/v1beta1
 * kind: VirtualService
 * metadata:
 *   name: ratings-route
 * spec:
 *   hosts:
 *   - ratings.prod.svc.cluster.local
 *   http:
 *   - match:
 *     - headers:
 *         end-user:
 *           exact: jason
 *       uri:
 *         prefix: "/ratings/v2/"
 *       ignoreUriCase: true
 *     route:
 *     - destination:
 *         host: ratings.prod.svc.cluster.local
 * ```
 * {{&lt;/tab&gt;}}
 * {{&lt;/tabset&gt;}}
 * HTTPMatchRequest CANNOT be empty.
 * **Note:** No regex string match can be set when delegate VirtualService is specified.
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.HTTPMatchRequest}
 */
public final class HTTPMatchRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.HTTPMatchRequest)
    HTTPMatchRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HTTPMatchRequest.newBuilder() to construct.
  private HTTPMatchRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HTTPMatchRequest() {
    name_ = "";
    gateways_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    sourceNamespace_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new HTTPMatchRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HTTPMatchRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.ourea.adapter.model.istio.StringMatch.Builder subBuilder = null;
            if (uri_ != null) {
              subBuilder = uri_.toBuilder();
            }
            uri_ = input.readMessage(io.ourea.adapter.model.istio.StringMatch.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(uri_);
              uri_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.ourea.adapter.model.istio.StringMatch.Builder subBuilder = null;
            if (scheme_ != null) {
              subBuilder = scheme_.toBuilder();
            }
            scheme_ = input.readMessage(io.ourea.adapter.model.istio.StringMatch.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scheme_);
              scheme_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.ourea.adapter.model.istio.StringMatch.Builder subBuilder = null;
            if (method_ != null) {
              subBuilder = method_.toBuilder();
            }
            method_ = input.readMessage(io.ourea.adapter.model.istio.StringMatch.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(method_);
              method_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            io.ourea.adapter.model.istio.StringMatch.Builder subBuilder = null;
            if (authority_ != null) {
              subBuilder = authority_.toBuilder();
            }
            authority_ = input.readMessage(io.ourea.adapter.model.istio.StringMatch.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(authority_);
              authority_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              headers_ = com.google.protobuf.MapField.newMapField(
                  HeadersDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
            headers__ = input.readMessage(
                HeadersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            headers_.getMutableMap().put(
                headers__.getKey(), headers__.getValue());
            break;
          }
          case 48: {

            port_ = input.readUInt32();
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              sourceLabels_ = com.google.protobuf.MapField.newMapField(
                  SourceLabelsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            sourceLabels__ = input.readMessage(
                SourceLabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            sourceLabels_.getMutableMap().put(
                sourceLabels__.getKey(), sourceLabels__.getValue());
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              gateways_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000004;
            }
            gateways_.add(s);
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              queryParams_ = com.google.protobuf.MapField.newMapField(
                  QueryParamsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
            queryParams__ = input.readMessage(
                QueryParamsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            queryParams_.getMutableMap().put(
                queryParams__.getKey(), queryParams__.getValue());
            break;
          }
          case 80: {

            ignoreUriCase_ = input.readBool();
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              withoutHeaders_ = com.google.protobuf.MapField.newMapField(
                  WithoutHeadersDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000010;
            }
            com.google.protobuf.MapEntry<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
            withoutHeaders__ = input.readMessage(
                WithoutHeadersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            withoutHeaders_.getMutableMap().put(
                withoutHeaders__.getKey(), withoutHeaders__.getValue());
            break;
          }
          case 106: {
            java.lang.String s = input.readStringRequireUtf8();

            sourceNamespace_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        gateways_ = gateways_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_HTTPMatchRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetHeaders();
      case 7:
        return internalGetSourceLabels();
      case 9:
        return internalGetQueryParams();
      case 12:
        return internalGetWithoutHeaders();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_HTTPMatchRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.HTTPMatchRequest.class, io.ourea.adapter.model.istio.HTTPMatchRequest.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 11;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * The name assigned to a match. The match's name will be
   * concatenated with the parent route's name and will be logged in
   * the access logs for requests matching this route.
   * </pre>
   *
   * <code>string name = 11;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name assigned to a match. The match's name will be
   * concatenated with the parent route's name and will be logged in
   * the access logs for requests matching this route.
   * </pre>
   *
   * <code>string name = 11;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int URI_FIELD_NUMBER = 1;
  private io.ourea.adapter.model.istio.StringMatch uri_;
  /**
   * <pre>
   * URI to match
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * **Note:** Case-insensitive matching could be enabled via the
   * `ignore_uri_case` flag.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
   * @return Whether the uri field is set.
   */
  @java.lang.Override
  public boolean hasUri() {
    return uri_ != null;
  }
  /**
   * <pre>
   * URI to match
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * **Note:** Case-insensitive matching could be enabled via the
   * `ignore_uri_case` flag.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
   * @return The uri.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.StringMatch getUri() {
    return uri_ == null ? io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : uri_;
  }
  /**
   * <pre>
   * URI to match
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * **Note:** Case-insensitive matching could be enabled via the
   * `ignore_uri_case` flag.
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.StringMatchOrBuilder getUriOrBuilder() {
    return getUri();
  }

  public static final int SCHEME_FIELD_NUMBER = 2;
  private io.ourea.adapter.model.istio.StringMatch scheme_;
  /**
   * <pre>
   * URI Scheme
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
   * @return Whether the scheme field is set.
   */
  @java.lang.Override
  public boolean hasScheme() {
    return scheme_ != null;
  }
  /**
   * <pre>
   * URI Scheme
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
   * @return The scheme.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.StringMatch getScheme() {
    return scheme_ == null ? io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : scheme_;
  }
  /**
   * <pre>
   * URI Scheme
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.StringMatchOrBuilder getSchemeOrBuilder() {
    return getScheme();
  }

  public static final int METHOD_FIELD_NUMBER = 3;
  private io.ourea.adapter.model.istio.StringMatch method_;
  /**
   * <pre>
   * HTTP Method
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
   * @return Whether the method field is set.
   */
  @java.lang.Override
  public boolean hasMethod() {
    return method_ != null;
  }
  /**
   * <pre>
   * HTTP Method
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
   * @return The method.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.StringMatch getMethod() {
    return method_ == null ? io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : method_;
  }
  /**
   * <pre>
   * HTTP Method
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.StringMatchOrBuilder getMethodOrBuilder() {
    return getMethod();
  }

  public static final int AUTHORITY_FIELD_NUMBER = 4;
  private io.ourea.adapter.model.istio.StringMatch authority_;
  /**
   * <pre>
   * HTTP Authority
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
   * @return Whether the authority field is set.
   */
  @java.lang.Override
  public boolean hasAuthority() {
    return authority_ != null;
  }
  /**
   * <pre>
   * HTTP Authority
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
   * @return The authority.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.StringMatch getAuthority() {
    return authority_ == null ? io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : authority_;
  }
  /**
   * <pre>
   * HTTP Authority
   * values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.StringMatchOrBuilder getAuthorityOrBuilder() {
    return getAuthority();
  }

  public static final int HEADERS_FIELD_NUMBER = 5;
  private static final class HeadersDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.ourea.adapter.model.istio.StringMatch> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.ourea.adapter.model.istio.StringMatch>newDefaultInstance(
                io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_HTTPMatchRequest_HeadersEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.ourea.adapter.model.istio.StringMatch.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, io.ourea.adapter.model.istio.StringMatch> headers_;
  private com.google.protobuf.MapField<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
  internalGetHeaders() {
    if (headers_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          HeadersDefaultEntryHolder.defaultEntry);
    }
    return headers_;
  }

  public int getHeadersCount() {
    return internalGetHeaders().getMap().size();
  }
  /**
   * <pre>
   * The header keys must be lowercase and use hyphen as the separator,
   * e.g. _x-request-id_.
   * Header values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * If the value is empty and only the name of header is specfied, presence of the header is checked.
   * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
   */

  @java.lang.Override
  public boolean containsHeaders(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetHeaders().getMap().containsKey(key);
  }
  /**
   * Use {@link #getHeadersMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getHeaders() {
    return getHeadersMap();
  }
  /**
   * <pre>
   * The header keys must be lowercase and use hyphen as the separator,
   * e.g. _x-request-id_.
   * Header values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * If the value is empty and only the name of header is specfied, presence of the header is checked.
   * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getHeadersMap() {
    return internalGetHeaders().getMap();
  }
  /**
   * <pre>
   * The header keys must be lowercase and use hyphen as the separator,
   * e.g. _x-request-id_.
   * Header values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * If the value is empty and only the name of header is specfied, presence of the header is checked.
   * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
   */
  @java.lang.Override

  public io.ourea.adapter.model.istio.StringMatch getHeadersOrDefault(
      java.lang.String key,
      io.ourea.adapter.model.istio.StringMatch defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
        internalGetHeaders().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The header keys must be lowercase and use hyphen as the separator,
   * e.g. _x-request-id_.
   * Header values are case-sensitive and formatted as follows:
   * - `exact: "value"` for exact string match
   * - `prefix: "value"` for prefix-based match
   * - `regex: "value"` for ECMAscript style regex-based match
   * If the value is empty and only the name of header is specfied, presence of the header is checked.
   * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
   */
  @java.lang.Override

  public io.ourea.adapter.model.istio.StringMatch getHeadersOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
        internalGetHeaders().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int PORT_FIELD_NUMBER = 6;
  private int port_;
  /**
   * <pre>
   * Specifies the ports on the host that is being addressed. Many services
   * only expose a single port or label ports with the protocols they support,
   * in these cases it is not required to explicitly select the port.
   * </pre>
   *
   * <code>uint32 port = 6;</code>
   * @return The port.
   */
  @java.lang.Override
  public int getPort() {
    return port_;
  }

  public static final int SOURCE_LABELS_FIELD_NUMBER = 7;
  private static final class SourceLabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_HTTPMatchRequest_SourceLabelsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> sourceLabels_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetSourceLabels() {
    if (sourceLabels_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          SourceLabelsDefaultEntryHolder.defaultEntry);
    }
    return sourceLabels_;
  }

  public int getSourceLabelsCount() {
    return internalGetSourceLabels().getMap().size();
  }
  /**
   * <pre>
   * One or more labels that constrain the applicability of a rule to
   * workloads with the given labels. If the VirtualService has a list of
   * gateways specified in the top-level `gateways` field, it must include the reserved gateway
   * `mesh` for this field to be applicable.
   * </pre>
   *
   * <code>map&lt;string, string&gt; source_labels = 7;</code>
   */

  @java.lang.Override
  public boolean containsSourceLabels(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetSourceLabels().getMap().containsKey(key);
  }
  /**
   * Use {@link #getSourceLabelsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getSourceLabels() {
    return getSourceLabelsMap();
  }
  /**
   * <pre>
   * One or more labels that constrain the applicability of a rule to
   * workloads with the given labels. If the VirtualService has a list of
   * gateways specified in the top-level `gateways` field, it must include the reserved gateway
   * `mesh` for this field to be applicable.
   * </pre>
   *
   * <code>map&lt;string, string&gt; source_labels = 7;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getSourceLabelsMap() {
    return internalGetSourceLabels().getMap();
  }
  /**
   * <pre>
   * One or more labels that constrain the applicability of a rule to
   * workloads with the given labels. If the VirtualService has a list of
   * gateways specified in the top-level `gateways` field, it must include the reserved gateway
   * `mesh` for this field to be applicable.
   * </pre>
   *
   * <code>map&lt;string, string&gt; source_labels = 7;</code>
   */
  @java.lang.Override

  public java.lang.String getSourceLabelsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetSourceLabels().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * One or more labels that constrain the applicability of a rule to
   * workloads with the given labels. If the VirtualService has a list of
   * gateways specified in the top-level `gateways` field, it must include the reserved gateway
   * `mesh` for this field to be applicable.
   * </pre>
   *
   * <code>map&lt;string, string&gt; source_labels = 7;</code>
   */
  @java.lang.Override

  public java.lang.String getSourceLabelsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetSourceLabels().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int GATEWAYS_FIELD_NUMBER = 8;
  private com.google.protobuf.LazyStringList gateways_;
  /**
   * <pre>
   * Names of gateways where the rule should be applied. Gateway names
   * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
   * match is independent of sourceLabels.
   * </pre>
   *
   * <code>repeated string gateways = 8;</code>
   * @return A list containing the gateways.
   */
  public com.google.protobuf.ProtocolStringList
      getGatewaysList() {
    return gateways_;
  }
  /**
   * <pre>
   * Names of gateways where the rule should be applied. Gateway names
   * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
   * match is independent of sourceLabels.
   * </pre>
   *
   * <code>repeated string gateways = 8;</code>
   * @return The count of gateways.
   */
  public int getGatewaysCount() {
    return gateways_.size();
  }
  /**
   * <pre>
   * Names of gateways where the rule should be applied. Gateway names
   * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
   * match is independent of sourceLabels.
   * </pre>
   *
   * <code>repeated string gateways = 8;</code>
   * @param index The index of the element to return.
   * @return The gateways at the given index.
   */
  public java.lang.String getGateways(int index) {
    return gateways_.get(index);
  }
  /**
   * <pre>
   * Names of gateways where the rule should be applied. Gateway names
   * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
   * match is independent of sourceLabels.
   * </pre>
   *
   * <code>repeated string gateways = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the gateways at the given index.
   */
  public com.google.protobuf.ByteString
      getGatewaysBytes(int index) {
    return gateways_.getByteString(index);
  }

  public static final int QUERY_PARAMS_FIELD_NUMBER = 9;
  private static final class QueryParamsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.ourea.adapter.model.istio.StringMatch> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.ourea.adapter.model.istio.StringMatch>newDefaultInstance(
                io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_HTTPMatchRequest_QueryParamsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.ourea.adapter.model.istio.StringMatch.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, io.ourea.adapter.model.istio.StringMatch> queryParams_;
  private com.google.protobuf.MapField<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
  internalGetQueryParams() {
    if (queryParams_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          QueryParamsDefaultEntryHolder.defaultEntry);
    }
    return queryParams_;
  }

  public int getQueryParamsCount() {
    return internalGetQueryParams().getMap().size();
  }
  /**
   * <pre>
   * Query parameters for matching.
   * Ex:
   * - For a query parameter like "?key=true", the map key would be "key" and
   *   the string match could be defined as `exact: "true"`.
   * - For a query parameter like "?key", the map key would be "key" and the
   *   string match could be defined as `exact: ""`.
   * - For a query parameter like "?key=123", the map key would be "key" and the
   *   string match could be defined as `regex: "&#92;d+$"`. Note that this
   *   configuration will only match values like "123" but not "a123" or "123a".
   * **Note:** `prefix` matching is currently not supported.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
   */

  @java.lang.Override
  public boolean containsQueryParams(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetQueryParams().getMap().containsKey(key);
  }
  /**
   * Use {@link #getQueryParamsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getQueryParams() {
    return getQueryParamsMap();
  }
  /**
   * <pre>
   * Query parameters for matching.
   * Ex:
   * - For a query parameter like "?key=true", the map key would be "key" and
   *   the string match could be defined as `exact: "true"`.
   * - For a query parameter like "?key", the map key would be "key" and the
   *   string match could be defined as `exact: ""`.
   * - For a query parameter like "?key=123", the map key would be "key" and the
   *   string match could be defined as `regex: "&#92;d+$"`. Note that this
   *   configuration will only match values like "123" but not "a123" or "123a".
   * **Note:** `prefix` matching is currently not supported.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getQueryParamsMap() {
    return internalGetQueryParams().getMap();
  }
  /**
   * <pre>
   * Query parameters for matching.
   * Ex:
   * - For a query parameter like "?key=true", the map key would be "key" and
   *   the string match could be defined as `exact: "true"`.
   * - For a query parameter like "?key", the map key would be "key" and the
   *   string match could be defined as `exact: ""`.
   * - For a query parameter like "?key=123", the map key would be "key" and the
   *   string match could be defined as `regex: "&#92;d+$"`. Note that this
   *   configuration will only match values like "123" but not "a123" or "123a".
   * **Note:** `prefix` matching is currently not supported.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
   */
  @java.lang.Override

  public io.ourea.adapter.model.istio.StringMatch getQueryParamsOrDefault(
      java.lang.String key,
      io.ourea.adapter.model.istio.StringMatch defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
        internalGetQueryParams().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Query parameters for matching.
   * Ex:
   * - For a query parameter like "?key=true", the map key would be "key" and
   *   the string match could be defined as `exact: "true"`.
   * - For a query parameter like "?key", the map key would be "key" and the
   *   string match could be defined as `exact: ""`.
   * - For a query parameter like "?key=123", the map key would be "key" and the
   *   string match could be defined as `regex: "&#92;d+$"`. Note that this
   *   configuration will only match values like "123" but not "a123" or "123a".
   * **Note:** `prefix` matching is currently not supported.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
   */
  @java.lang.Override

  public io.ourea.adapter.model.istio.StringMatch getQueryParamsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
        internalGetQueryParams().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int IGNORE_URI_CASE_FIELD_NUMBER = 10;
  private boolean ignoreUriCase_;
  /**
   * <pre>
   * Flag to specify whether the URI matching should be case-insensitive.
   * **Note:** The case will be ignored only in the case of `exact` and `prefix`
   * URI matches.
   * </pre>
   *
   * <code>bool ignore_uri_case = 10;</code>
   * @return The ignoreUriCase.
   */
  @java.lang.Override
  public boolean getIgnoreUriCase() {
    return ignoreUriCase_;
  }

  public static final int WITHOUT_HEADERS_FIELD_NUMBER = 12;
  private static final class WithoutHeadersDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.ourea.adapter.model.istio.StringMatch> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.ourea.adapter.model.istio.StringMatch>newDefaultInstance(
                io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_HTTPMatchRequest_WithoutHeadersEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.ourea.adapter.model.istio.StringMatch.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, io.ourea.adapter.model.istio.StringMatch> withoutHeaders_;
  private com.google.protobuf.MapField<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
  internalGetWithoutHeaders() {
    if (withoutHeaders_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          WithoutHeadersDefaultEntryHolder.defaultEntry);
    }
    return withoutHeaders_;
  }

  public int getWithoutHeadersCount() {
    return internalGetWithoutHeaders().getMap().size();
  }
  /**
   * <pre>
   * withoutHeader has the same syntax with the header, but has opposite meaning.
   * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
   */

  @java.lang.Override
  public boolean containsWithoutHeaders(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetWithoutHeaders().getMap().containsKey(key);
  }
  /**
   * Use {@link #getWithoutHeadersMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getWithoutHeaders() {
    return getWithoutHeadersMap();
  }
  /**
   * <pre>
   * withoutHeader has the same syntax with the header, but has opposite meaning.
   * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getWithoutHeadersMap() {
    return internalGetWithoutHeaders().getMap();
  }
  /**
   * <pre>
   * withoutHeader has the same syntax with the header, but has opposite meaning.
   * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
   */
  @java.lang.Override

  public io.ourea.adapter.model.istio.StringMatch getWithoutHeadersOrDefault(
      java.lang.String key,
      io.ourea.adapter.model.istio.StringMatch defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
        internalGetWithoutHeaders().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * withoutHeader has the same syntax with the header, but has opposite meaning.
   * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
   * </pre>
   *
   * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
   */
  @java.lang.Override

  public io.ourea.adapter.model.istio.StringMatch getWithoutHeadersOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
        internalGetWithoutHeaders().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int SOURCE_NAMESPACE_FIELD_NUMBER = 13;
  private volatile java.lang.Object sourceNamespace_;
  /**
   * <pre>
   * Source namespace constraining the applicability of a rule to workloads in that namespace.
   * If the VirtualService has a list of gateways specified in the top-level `gateways` field,
   * it must include the reserved gateway `mesh` for this field to be applicable.
   * </pre>
   *
   * <code>string source_namespace = 13;</code>
   * @return The sourceNamespace.
   */
  @java.lang.Override
  public java.lang.String getSourceNamespace() {
    java.lang.Object ref = sourceNamespace_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sourceNamespace_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Source namespace constraining the applicability of a rule to workloads in that namespace.
   * If the VirtualService has a list of gateways specified in the top-level `gateways` field,
   * it must include the reserved gateway `mesh` for this field to be applicable.
   * </pre>
   *
   * <code>string source_namespace = 13;</code>
   * @return The bytes for sourceNamespace.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSourceNamespaceBytes() {
    java.lang.Object ref = sourceNamespace_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sourceNamespace_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (uri_ != null) {
      output.writeMessage(1, getUri());
    }
    if (scheme_ != null) {
      output.writeMessage(2, getScheme());
    }
    if (method_ != null) {
      output.writeMessage(3, getMethod());
    }
    if (authority_ != null) {
      output.writeMessage(4, getAuthority());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetHeaders(),
        HeadersDefaultEntryHolder.defaultEntry,
        5);
    if (port_ != 0) {
      output.writeUInt32(6, port_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetSourceLabels(),
        SourceLabelsDefaultEntryHolder.defaultEntry,
        7);
    for (int i = 0; i < gateways_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, gateways_.getRaw(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetQueryParams(),
        QueryParamsDefaultEntryHolder.defaultEntry,
        9);
    if (ignoreUriCase_ != false) {
      output.writeBool(10, ignoreUriCase_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, name_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetWithoutHeaders(),
        WithoutHeadersDefaultEntryHolder.defaultEntry,
        12);
    if (!getSourceNamespaceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, sourceNamespace_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (uri_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getUri());
    }
    if (scheme_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getScheme());
    }
    if (method_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getMethod());
    }
    if (authority_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getAuthority());
    }
    for (java.util.Map.Entry<java.lang.String, io.ourea.adapter.model.istio.StringMatch> entry
         : internalGetHeaders().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
      headers__ = HeadersDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, headers__);
    }
    if (port_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, port_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetSourceLabels().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      sourceLabels__ = SourceLabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, sourceLabels__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < gateways_.size(); i++) {
        dataSize += computeStringSizeNoTag(gateways_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getGatewaysList().size();
    }
    for (java.util.Map.Entry<java.lang.String, io.ourea.adapter.model.istio.StringMatch> entry
         : internalGetQueryParams().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
      queryParams__ = QueryParamsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, queryParams__);
    }
    if (ignoreUriCase_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, ignoreUriCase_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, name_);
    }
    for (java.util.Map.Entry<java.lang.String, io.ourea.adapter.model.istio.StringMatch> entry
         : internalGetWithoutHeaders().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
      withoutHeaders__ = WithoutHeadersDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, withoutHeaders__);
    }
    if (!getSourceNamespaceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, sourceNamespace_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.HTTPMatchRequest)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.HTTPMatchRequest other = (io.ourea.adapter.model.istio.HTTPMatchRequest) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (hasUri() != other.hasUri()) return false;
    if (hasUri()) {
      if (!getUri()
          .equals(other.getUri())) return false;
    }
    if (hasScheme() != other.hasScheme()) return false;
    if (hasScheme()) {
      if (!getScheme()
          .equals(other.getScheme())) return false;
    }
    if (hasMethod() != other.hasMethod()) return false;
    if (hasMethod()) {
      if (!getMethod()
          .equals(other.getMethod())) return false;
    }
    if (hasAuthority() != other.hasAuthority()) return false;
    if (hasAuthority()) {
      if (!getAuthority()
          .equals(other.getAuthority())) return false;
    }
    if (!internalGetHeaders().equals(
        other.internalGetHeaders())) return false;
    if (getPort()
        != other.getPort()) return false;
    if (!internalGetSourceLabels().equals(
        other.internalGetSourceLabels())) return false;
    if (!getGatewaysList()
        .equals(other.getGatewaysList())) return false;
    if (!internalGetQueryParams().equals(
        other.internalGetQueryParams())) return false;
    if (getIgnoreUriCase()
        != other.getIgnoreUriCase()) return false;
    if (!internalGetWithoutHeaders().equals(
        other.internalGetWithoutHeaders())) return false;
    if (!getSourceNamespace()
        .equals(other.getSourceNamespace())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasUri()) {
      hash = (37 * hash) + URI_FIELD_NUMBER;
      hash = (53 * hash) + getUri().hashCode();
    }
    if (hasScheme()) {
      hash = (37 * hash) + SCHEME_FIELD_NUMBER;
      hash = (53 * hash) + getScheme().hashCode();
    }
    if (hasMethod()) {
      hash = (37 * hash) + METHOD_FIELD_NUMBER;
      hash = (53 * hash) + getMethod().hashCode();
    }
    if (hasAuthority()) {
      hash = (37 * hash) + AUTHORITY_FIELD_NUMBER;
      hash = (53 * hash) + getAuthority().hashCode();
    }
    if (!internalGetHeaders().getMap().isEmpty()) {
      hash = (37 * hash) + HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetHeaders().hashCode();
    }
    hash = (37 * hash) + PORT_FIELD_NUMBER;
    hash = (53 * hash) + getPort();
    if (!internalGetSourceLabels().getMap().isEmpty()) {
      hash = (37 * hash) + SOURCE_LABELS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetSourceLabels().hashCode();
    }
    if (getGatewaysCount() > 0) {
      hash = (37 * hash) + GATEWAYS_FIELD_NUMBER;
      hash = (53 * hash) + getGatewaysList().hashCode();
    }
    if (!internalGetQueryParams().getMap().isEmpty()) {
      hash = (37 * hash) + QUERY_PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetQueryParams().hashCode();
    }
    hash = (37 * hash) + IGNORE_URI_CASE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIgnoreUriCase());
    if (!internalGetWithoutHeaders().getMap().isEmpty()) {
      hash = (37 * hash) + WITHOUT_HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetWithoutHeaders().hashCode();
    }
    hash = (37 * hash) + SOURCE_NAMESPACE_FIELD_NUMBER;
    hash = (53 * hash) + getSourceNamespace().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.HTTPMatchRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.HTTPMatchRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * HttpMatchRequest specifies a set of criterion to be met in order for the
   * rule to be applied to the HTTP request. For example, the following
   * restricts the rule to match only requests where the URL path
   * starts with /ratings/v2/ and the request contains a custom `end-user` header
   * with value `jason`.
   * {{&lt;tabset category-name="example"&gt;}}
   * {{&lt;tab name="v1alpha3" category-value="v1alpha3"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1alpha3
   * kind: VirtualService
   * metadata:
   *   name: ratings-route
   * spec:
   *   hosts:
   *   - ratings.prod.svc.cluster.local
   *   http:
   *   - match:
   *     - headers:
   *         end-user:
   *           exact: jason
   *       uri:
   *         prefix: "/ratings/v2/"
   *       ignoreUriCase: true
   *     route:
   *     - destination:
   *         host: ratings.prod.svc.cluster.local
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;tab name="v1beta1" category-value="v1beta1"&gt;}}
   * ```yaml
   * apiVersion: networking.istio.io/v1beta1
   * kind: VirtualService
   * metadata:
   *   name: ratings-route
   * spec:
   *   hosts:
   *   - ratings.prod.svc.cluster.local
   *   http:
   *   - match:
   *     - headers:
   *         end-user:
   *           exact: jason
   *       uri:
   *         prefix: "/ratings/v2/"
   *       ignoreUriCase: true
   *     route:
   *     - destination:
   *         host: ratings.prod.svc.cluster.local
   * ```
   * {{&lt;/tab&gt;}}
   * {{&lt;/tabset&gt;}}
   * HTTPMatchRequest CANNOT be empty.
   * **Note:** No regex string match can be set when delegate VirtualService is specified.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.HTTPMatchRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.HTTPMatchRequest)
      io.ourea.adapter.model.istio.HTTPMatchRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_HTTPMatchRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetHeaders();
        case 7:
          return internalGetSourceLabels();
        case 9:
          return internalGetQueryParams();
        case 12:
          return internalGetWithoutHeaders();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableHeaders();
        case 7:
          return internalGetMutableSourceLabels();
        case 9:
          return internalGetMutableQueryParams();
        case 12:
          return internalGetMutableWithoutHeaders();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_HTTPMatchRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.HTTPMatchRequest.class, io.ourea.adapter.model.istio.HTTPMatchRequest.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.HTTPMatchRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      if (uriBuilder_ == null) {
        uri_ = null;
      } else {
        uri_ = null;
        uriBuilder_ = null;
      }
      if (schemeBuilder_ == null) {
        scheme_ = null;
      } else {
        scheme_ = null;
        schemeBuilder_ = null;
      }
      if (methodBuilder_ == null) {
        method_ = null;
      } else {
        method_ = null;
        methodBuilder_ = null;
      }
      if (authorityBuilder_ == null) {
        authority_ = null;
      } else {
        authority_ = null;
        authorityBuilder_ = null;
      }
      internalGetMutableHeaders().clear();
      port_ = 0;

      internalGetMutableSourceLabels().clear();
      gateways_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutableQueryParams().clear();
      ignoreUriCase_ = false;

      internalGetMutableWithoutHeaders().clear();
      sourceNamespace_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.VirtualServiceOuterClass.internal_static_istio_networking_v1alpha3_HTTPMatchRequest_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.HTTPMatchRequest getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.HTTPMatchRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.HTTPMatchRequest build() {
      io.ourea.adapter.model.istio.HTTPMatchRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.HTTPMatchRequest buildPartial() {
      io.ourea.adapter.model.istio.HTTPMatchRequest result = new io.ourea.adapter.model.istio.HTTPMatchRequest(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      if (uriBuilder_ == null) {
        result.uri_ = uri_;
      } else {
        result.uri_ = uriBuilder_.build();
      }
      if (schemeBuilder_ == null) {
        result.scheme_ = scheme_;
      } else {
        result.scheme_ = schemeBuilder_.build();
      }
      if (methodBuilder_ == null) {
        result.method_ = method_;
      } else {
        result.method_ = methodBuilder_.build();
      }
      if (authorityBuilder_ == null) {
        result.authority_ = authority_;
      } else {
        result.authority_ = authorityBuilder_.build();
      }
      result.headers_ = internalGetHeaders();
      result.headers_.makeImmutable();
      result.port_ = port_;
      result.sourceLabels_ = internalGetSourceLabels();
      result.sourceLabels_.makeImmutable();
      if (((bitField0_ & 0x00000004) != 0)) {
        gateways_ = gateways_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.gateways_ = gateways_;
      result.queryParams_ = internalGetQueryParams();
      result.queryParams_.makeImmutable();
      result.ignoreUriCase_ = ignoreUriCase_;
      result.withoutHeaders_ = internalGetWithoutHeaders();
      result.withoutHeaders_.makeImmutable();
      result.sourceNamespace_ = sourceNamespace_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.HTTPMatchRequest) {
        return mergeFrom((io.ourea.adapter.model.istio.HTTPMatchRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.HTTPMatchRequest other) {
      if (other == io.ourea.adapter.model.istio.HTTPMatchRequest.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasUri()) {
        mergeUri(other.getUri());
      }
      if (other.hasScheme()) {
        mergeScheme(other.getScheme());
      }
      if (other.hasMethod()) {
        mergeMethod(other.getMethod());
      }
      if (other.hasAuthority()) {
        mergeAuthority(other.getAuthority());
      }
      internalGetMutableHeaders().mergeFrom(
          other.internalGetHeaders());
      if (other.getPort() != 0) {
        setPort(other.getPort());
      }
      internalGetMutableSourceLabels().mergeFrom(
          other.internalGetSourceLabels());
      if (!other.gateways_.isEmpty()) {
        if (gateways_.isEmpty()) {
          gateways_ = other.gateways_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureGatewaysIsMutable();
          gateways_.addAll(other.gateways_);
        }
        onChanged();
      }
      internalGetMutableQueryParams().mergeFrom(
          other.internalGetQueryParams());
      if (other.getIgnoreUriCase() != false) {
        setIgnoreUriCase(other.getIgnoreUriCase());
      }
      internalGetMutableWithoutHeaders().mergeFrom(
          other.internalGetWithoutHeaders());
      if (!other.getSourceNamespace().isEmpty()) {
        sourceNamespace_ = other.sourceNamespace_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.HTTPMatchRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.HTTPMatchRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name assigned to a match. The match's name will be
     * concatenated with the parent route's name and will be logged in
     * the access logs for requests matching this route.
     * </pre>
     *
     * <code>string name = 11;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name assigned to a match. The match's name will be
     * concatenated with the parent route's name and will be logged in
     * the access logs for requests matching this route.
     * </pre>
     *
     * <code>string name = 11;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name assigned to a match. The match's name will be
     * concatenated with the parent route's name and will be logged in
     * the access logs for requests matching this route.
     * </pre>
     *
     * <code>string name = 11;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name assigned to a match. The match's name will be
     * concatenated with the parent route's name and will be logged in
     * the access logs for requests matching this route.
     * </pre>
     *
     * <code>string name = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name assigned to a match. The match's name will be
     * concatenated with the parent route's name and will be logged in
     * the access logs for requests matching this route.
     * </pre>
     *
     * <code>string name = 11;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private io.ourea.adapter.model.istio.StringMatch uri_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder> uriBuilder_;
    /**
     * <pre>
     * URI to match
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * **Note:** Case-insensitive matching could be enabled via the
     * `ignore_uri_case` flag.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
     * @return Whether the uri field is set.
     */
    public boolean hasUri() {
      return uriBuilder_ != null || uri_ != null;
    }
    /**
     * <pre>
     * URI to match
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * **Note:** Case-insensitive matching could be enabled via the
     * `ignore_uri_case` flag.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
     * @return The uri.
     */
    public io.ourea.adapter.model.istio.StringMatch getUri() {
      if (uriBuilder_ == null) {
        return uri_ == null ? io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : uri_;
      } else {
        return uriBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * URI to match
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * **Note:** Case-insensitive matching could be enabled via the
     * `ignore_uri_case` flag.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
     */
    public Builder setUri(io.ourea.adapter.model.istio.StringMatch value) {
      if (uriBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        uri_ = value;
        onChanged();
      } else {
        uriBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * URI to match
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * **Note:** Case-insensitive matching could be enabled via the
     * `ignore_uri_case` flag.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
     */
    public Builder setUri(
        io.ourea.adapter.model.istio.StringMatch.Builder builderForValue) {
      if (uriBuilder_ == null) {
        uri_ = builderForValue.build();
        onChanged();
      } else {
        uriBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * URI to match
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * **Note:** Case-insensitive matching could be enabled via the
     * `ignore_uri_case` flag.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
     */
    public Builder mergeUri(io.ourea.adapter.model.istio.StringMatch value) {
      if (uriBuilder_ == null) {
        if (uri_ != null) {
          uri_ =
            io.ourea.adapter.model.istio.StringMatch.newBuilder(uri_).mergeFrom(value).buildPartial();
        } else {
          uri_ = value;
        }
        onChanged();
      } else {
        uriBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * URI to match
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * **Note:** Case-insensitive matching could be enabled via the
     * `ignore_uri_case` flag.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
     */
    public Builder clearUri() {
      if (uriBuilder_ == null) {
        uri_ = null;
        onChanged();
      } else {
        uri_ = null;
        uriBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * URI to match
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * **Note:** Case-insensitive matching could be enabled via the
     * `ignore_uri_case` flag.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
     */
    public io.ourea.adapter.model.istio.StringMatch.Builder getUriBuilder() {
      
      onChanged();
      return getUriFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * URI to match
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * **Note:** Case-insensitive matching could be enabled via the
     * `ignore_uri_case` flag.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
     */
    public io.ourea.adapter.model.istio.StringMatchOrBuilder getUriOrBuilder() {
      if (uriBuilder_ != null) {
        return uriBuilder_.getMessageOrBuilder();
      } else {
        return uri_ == null ?
            io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : uri_;
      }
    }
    /**
     * <pre>
     * URI to match
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * **Note:** Case-insensitive matching could be enabled via the
     * `ignore_uri_case` flag.
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch uri = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder> 
        getUriFieldBuilder() {
      if (uriBuilder_ == null) {
        uriBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder>(
                getUri(),
                getParentForChildren(),
                isClean());
        uri_ = null;
      }
      return uriBuilder_;
    }

    private io.ourea.adapter.model.istio.StringMatch scheme_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder> schemeBuilder_;
    /**
     * <pre>
     * URI Scheme
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
     * @return Whether the scheme field is set.
     */
    public boolean hasScheme() {
      return schemeBuilder_ != null || scheme_ != null;
    }
    /**
     * <pre>
     * URI Scheme
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
     * @return The scheme.
     */
    public io.ourea.adapter.model.istio.StringMatch getScheme() {
      if (schemeBuilder_ == null) {
        return scheme_ == null ? io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : scheme_;
      } else {
        return schemeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * URI Scheme
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
     */
    public Builder setScheme(io.ourea.adapter.model.istio.StringMatch value) {
      if (schemeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scheme_ = value;
        onChanged();
      } else {
        schemeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * URI Scheme
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
     */
    public Builder setScheme(
        io.ourea.adapter.model.istio.StringMatch.Builder builderForValue) {
      if (schemeBuilder_ == null) {
        scheme_ = builderForValue.build();
        onChanged();
      } else {
        schemeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * URI Scheme
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
     */
    public Builder mergeScheme(io.ourea.adapter.model.istio.StringMatch value) {
      if (schemeBuilder_ == null) {
        if (scheme_ != null) {
          scheme_ =
            io.ourea.adapter.model.istio.StringMatch.newBuilder(scheme_).mergeFrom(value).buildPartial();
        } else {
          scheme_ = value;
        }
        onChanged();
      } else {
        schemeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * URI Scheme
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
     */
    public Builder clearScheme() {
      if (schemeBuilder_ == null) {
        scheme_ = null;
        onChanged();
      } else {
        scheme_ = null;
        schemeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * URI Scheme
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
     */
    public io.ourea.adapter.model.istio.StringMatch.Builder getSchemeBuilder() {
      
      onChanged();
      return getSchemeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * URI Scheme
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
     */
    public io.ourea.adapter.model.istio.StringMatchOrBuilder getSchemeOrBuilder() {
      if (schemeBuilder_ != null) {
        return schemeBuilder_.getMessageOrBuilder();
      } else {
        return scheme_ == null ?
            io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : scheme_;
      }
    }
    /**
     * <pre>
     * URI Scheme
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch scheme = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder> 
        getSchemeFieldBuilder() {
      if (schemeBuilder_ == null) {
        schemeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder>(
                getScheme(),
                getParentForChildren(),
                isClean());
        scheme_ = null;
      }
      return schemeBuilder_;
    }

    private io.ourea.adapter.model.istio.StringMatch method_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder> methodBuilder_;
    /**
     * <pre>
     * HTTP Method
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
     * @return Whether the method field is set.
     */
    public boolean hasMethod() {
      return methodBuilder_ != null || method_ != null;
    }
    /**
     * <pre>
     * HTTP Method
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
     * @return The method.
     */
    public io.ourea.adapter.model.istio.StringMatch getMethod() {
      if (methodBuilder_ == null) {
        return method_ == null ? io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : method_;
      } else {
        return methodBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * HTTP Method
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
     */
    public Builder setMethod(io.ourea.adapter.model.istio.StringMatch value) {
      if (methodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        method_ = value;
        onChanged();
      } else {
        methodBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * HTTP Method
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
     */
    public Builder setMethod(
        io.ourea.adapter.model.istio.StringMatch.Builder builderForValue) {
      if (methodBuilder_ == null) {
        method_ = builderForValue.build();
        onChanged();
      } else {
        methodBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * HTTP Method
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
     */
    public Builder mergeMethod(io.ourea.adapter.model.istio.StringMatch value) {
      if (methodBuilder_ == null) {
        if (method_ != null) {
          method_ =
            io.ourea.adapter.model.istio.StringMatch.newBuilder(method_).mergeFrom(value).buildPartial();
        } else {
          method_ = value;
        }
        onChanged();
      } else {
        methodBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * HTTP Method
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
     */
    public Builder clearMethod() {
      if (methodBuilder_ == null) {
        method_ = null;
        onChanged();
      } else {
        method_ = null;
        methodBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * HTTP Method
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
     */
    public io.ourea.adapter.model.istio.StringMatch.Builder getMethodBuilder() {
      
      onChanged();
      return getMethodFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * HTTP Method
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
     */
    public io.ourea.adapter.model.istio.StringMatchOrBuilder getMethodOrBuilder() {
      if (methodBuilder_ != null) {
        return methodBuilder_.getMessageOrBuilder();
      } else {
        return method_ == null ?
            io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : method_;
      }
    }
    /**
     * <pre>
     * HTTP Method
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch method = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder> 
        getMethodFieldBuilder() {
      if (methodBuilder_ == null) {
        methodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder>(
                getMethod(),
                getParentForChildren(),
                isClean());
        method_ = null;
      }
      return methodBuilder_;
    }

    private io.ourea.adapter.model.istio.StringMatch authority_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder> authorityBuilder_;
    /**
     * <pre>
     * HTTP Authority
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
     * @return Whether the authority field is set.
     */
    public boolean hasAuthority() {
      return authorityBuilder_ != null || authority_ != null;
    }
    /**
     * <pre>
     * HTTP Authority
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
     * @return The authority.
     */
    public io.ourea.adapter.model.istio.StringMatch getAuthority() {
      if (authorityBuilder_ == null) {
        return authority_ == null ? io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : authority_;
      } else {
        return authorityBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * HTTP Authority
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
     */
    public Builder setAuthority(io.ourea.adapter.model.istio.StringMatch value) {
      if (authorityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        authority_ = value;
        onChanged();
      } else {
        authorityBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * HTTP Authority
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
     */
    public Builder setAuthority(
        io.ourea.adapter.model.istio.StringMatch.Builder builderForValue) {
      if (authorityBuilder_ == null) {
        authority_ = builderForValue.build();
        onChanged();
      } else {
        authorityBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * HTTP Authority
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
     */
    public Builder mergeAuthority(io.ourea.adapter.model.istio.StringMatch value) {
      if (authorityBuilder_ == null) {
        if (authority_ != null) {
          authority_ =
            io.ourea.adapter.model.istio.StringMatch.newBuilder(authority_).mergeFrom(value).buildPartial();
        } else {
          authority_ = value;
        }
        onChanged();
      } else {
        authorityBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * HTTP Authority
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
     */
    public Builder clearAuthority() {
      if (authorityBuilder_ == null) {
        authority_ = null;
        onChanged();
      } else {
        authority_ = null;
        authorityBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * HTTP Authority
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
     */
    public io.ourea.adapter.model.istio.StringMatch.Builder getAuthorityBuilder() {
      
      onChanged();
      return getAuthorityFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * HTTP Authority
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
     */
    public io.ourea.adapter.model.istio.StringMatchOrBuilder getAuthorityOrBuilder() {
      if (authorityBuilder_ != null) {
        return authorityBuilder_.getMessageOrBuilder();
      } else {
        return authority_ == null ?
            io.ourea.adapter.model.istio.StringMatch.getDefaultInstance() : authority_;
      }
    }
    /**
     * <pre>
     * HTTP Authority
     * values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.StringMatch authority = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder> 
        getAuthorityFieldBuilder() {
      if (authorityBuilder_ == null) {
        authorityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.StringMatch, io.ourea.adapter.model.istio.StringMatch.Builder, io.ourea.adapter.model.istio.StringMatchOrBuilder>(
                getAuthority(),
                getParentForChildren(),
                isClean());
        authority_ = null;
      }
      return authorityBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.ourea.adapter.model.istio.StringMatch> headers_;
    private com.google.protobuf.MapField<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
    internalGetHeaders() {
      if (headers_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            HeadersDefaultEntryHolder.defaultEntry);
      }
      return headers_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
    internalGetMutableHeaders() {
      onChanged();;
      if (headers_ == null) {
        headers_ = com.google.protobuf.MapField.newMapField(
            HeadersDefaultEntryHolder.defaultEntry);
      }
      if (!headers_.isMutable()) {
        headers_ = headers_.copy();
      }
      return headers_;
    }

    public int getHeadersCount() {
      return internalGetHeaders().getMap().size();
    }
    /**
     * <pre>
     * The header keys must be lowercase and use hyphen as the separator,
     * e.g. _x-request-id_.
     * Header values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * If the value is empty and only the name of header is specfied, presence of the header is checked.
     * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
     */

    @java.lang.Override
    public boolean containsHeaders(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetHeaders().getMap().containsKey(key);
    }
    /**
     * Use {@link #getHeadersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getHeaders() {
      return getHeadersMap();
    }
    /**
     * <pre>
     * The header keys must be lowercase and use hyphen as the separator,
     * e.g. _x-request-id_.
     * Header values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * If the value is empty and only the name of header is specfied, presence of the header is checked.
     * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getHeadersMap() {
      return internalGetHeaders().getMap();
    }
    /**
     * <pre>
     * The header keys must be lowercase and use hyphen as the separator,
     * e.g. _x-request-id_.
     * Header values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * If the value is empty and only the name of header is specfied, presence of the header is checked.
     * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
     */
    @java.lang.Override

    public io.ourea.adapter.model.istio.StringMatch getHeadersOrDefault(
        java.lang.String key,
        io.ourea.adapter.model.istio.StringMatch defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
          internalGetHeaders().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The header keys must be lowercase and use hyphen as the separator,
     * e.g. _x-request-id_.
     * Header values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * If the value is empty and only the name of header is specfied, presence of the header is checked.
     * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
     */
    @java.lang.Override

    public io.ourea.adapter.model.istio.StringMatch getHeadersOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
          internalGetHeaders().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearHeaders() {
      internalGetMutableHeaders().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * The header keys must be lowercase and use hyphen as the separator,
     * e.g. _x-request-id_.
     * Header values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * If the value is empty and only the name of header is specfied, presence of the header is checked.
     * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
     */

    public Builder removeHeaders(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableHeaders().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
    getMutableHeaders() {
      return internalGetMutableHeaders().getMutableMap();
    }
    /**
     * <pre>
     * The header keys must be lowercase and use hyphen as the separator,
     * e.g. _x-request-id_.
     * Header values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * If the value is empty and only the name of header is specfied, presence of the header is checked.
     * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
     */
    public Builder putHeaders(
        java.lang.String key,
        io.ourea.adapter.model.istio.StringMatch value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableHeaders().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * The header keys must be lowercase and use hyphen as the separator,
     * e.g. _x-request-id_.
     * Header values are case-sensitive and formatted as follows:
     * - `exact: "value"` for exact string match
     * - `prefix: "value"` for prefix-based match
     * - `regex: "value"` for ECMAscript style regex-based match
     * If the value is empty and only the name of header is specfied, presence of the header is checked.
     * **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; headers = 5;</code>
     */

    public Builder putAllHeaders(
        java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> values) {
      internalGetMutableHeaders().getMutableMap()
          .putAll(values);
      return this;
    }

    private int port_ ;
    /**
     * <pre>
     * Specifies the ports on the host that is being addressed. Many services
     * only expose a single port or label ports with the protocols they support,
     * in these cases it is not required to explicitly select the port.
     * </pre>
     *
     * <code>uint32 port = 6;</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }
    /**
     * <pre>
     * Specifies the ports on the host that is being addressed. Many services
     * only expose a single port or label ports with the protocols they support,
     * in these cases it is not required to explicitly select the port.
     * </pre>
     *
     * <code>uint32 port = 6;</code>
     * @param value The port to set.
     * @return This builder for chaining.
     */
    public Builder setPort(int value) {
      
      port_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the ports on the host that is being addressed. Many services
     * only expose a single port or label ports with the protocols they support,
     * in these cases it is not required to explicitly select the port.
     * </pre>
     *
     * <code>uint32 port = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearPort() {
      
      port_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> sourceLabels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetSourceLabels() {
      if (sourceLabels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SourceLabelsDefaultEntryHolder.defaultEntry);
      }
      return sourceLabels_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableSourceLabels() {
      onChanged();;
      if (sourceLabels_ == null) {
        sourceLabels_ = com.google.protobuf.MapField.newMapField(
            SourceLabelsDefaultEntryHolder.defaultEntry);
      }
      if (!sourceLabels_.isMutable()) {
        sourceLabels_ = sourceLabels_.copy();
      }
      return sourceLabels_;
    }

    public int getSourceLabelsCount() {
      return internalGetSourceLabels().getMap().size();
    }
    /**
     * <pre>
     * One or more labels that constrain the applicability of a rule to
     * workloads with the given labels. If the VirtualService has a list of
     * gateways specified in the top-level `gateways` field, it must include the reserved gateway
     * `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_labels = 7;</code>
     */

    @java.lang.Override
    public boolean containsSourceLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetSourceLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSourceLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getSourceLabels() {
      return getSourceLabelsMap();
    }
    /**
     * <pre>
     * One or more labels that constrain the applicability of a rule to
     * workloads with the given labels. If the VirtualService has a list of
     * gateways specified in the top-level `gateways` field, it must include the reserved gateway
     * `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_labels = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getSourceLabelsMap() {
      return internalGetSourceLabels().getMap();
    }
    /**
     * <pre>
     * One or more labels that constrain the applicability of a rule to
     * workloads with the given labels. If the VirtualService has a list of
     * gateways specified in the top-level `gateways` field, it must include the reserved gateway
     * `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_labels = 7;</code>
     */
    @java.lang.Override

    public java.lang.String getSourceLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSourceLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * One or more labels that constrain the applicability of a rule to
     * workloads with the given labels. If the VirtualService has a list of
     * gateways specified in the top-level `gateways` field, it must include the reserved gateway
     * `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_labels = 7;</code>
     */
    @java.lang.Override

    public java.lang.String getSourceLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSourceLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearSourceLabels() {
      internalGetMutableSourceLabels().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * One or more labels that constrain the applicability of a rule to
     * workloads with the given labels. If the VirtualService has a list of
     * gateways specified in the top-level `gateways` field, it must include the reserved gateway
     * `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_labels = 7;</code>
     */

    public Builder removeSourceLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableSourceLabels().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableSourceLabels() {
      return internalGetMutableSourceLabels().getMutableMap();
    }
    /**
     * <pre>
     * One or more labels that constrain the applicability of a rule to
     * workloads with the given labels. If the VirtualService has a list of
     * gateways specified in the top-level `gateways` field, it must include the reserved gateway
     * `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_labels = 7;</code>
     */
    public Builder putSourceLabels(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableSourceLabels().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * One or more labels that constrain the applicability of a rule to
     * workloads with the given labels. If the VirtualService has a list of
     * gateways specified in the top-level `gateways` field, it must include the reserved gateway
     * `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>map&lt;string, string&gt; source_labels = 7;</code>
     */

    public Builder putAllSourceLabels(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableSourceLabels().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.LazyStringList gateways_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureGatewaysIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        gateways_ = new com.google.protobuf.LazyStringArrayList(gateways_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     * Names of gateways where the rule should be applied. Gateway names
     * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
     * match is independent of sourceLabels.
     * </pre>
     *
     * <code>repeated string gateways = 8;</code>
     * @return A list containing the gateways.
     */
    public com.google.protobuf.ProtocolStringList
        getGatewaysList() {
      return gateways_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Names of gateways where the rule should be applied. Gateway names
     * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
     * match is independent of sourceLabels.
     * </pre>
     *
     * <code>repeated string gateways = 8;</code>
     * @return The count of gateways.
     */
    public int getGatewaysCount() {
      return gateways_.size();
    }
    /**
     * <pre>
     * Names of gateways where the rule should be applied. Gateway names
     * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
     * match is independent of sourceLabels.
     * </pre>
     *
     * <code>repeated string gateways = 8;</code>
     * @param index The index of the element to return.
     * @return The gateways at the given index.
     */
    public java.lang.String getGateways(int index) {
      return gateways_.get(index);
    }
    /**
     * <pre>
     * Names of gateways where the rule should be applied. Gateway names
     * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
     * match is independent of sourceLabels.
     * </pre>
     *
     * <code>repeated string gateways = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the gateways at the given index.
     */
    public com.google.protobuf.ByteString
        getGatewaysBytes(int index) {
      return gateways_.getByteString(index);
    }
    /**
     * <pre>
     * Names of gateways where the rule should be applied. Gateway names
     * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
     * match is independent of sourceLabels.
     * </pre>
     *
     * <code>repeated string gateways = 8;</code>
     * @param index The index to set the value at.
     * @param value The gateways to set.
     * @return This builder for chaining.
     */
    public Builder setGateways(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureGatewaysIsMutable();
      gateways_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Names of gateways where the rule should be applied. Gateway names
     * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
     * match is independent of sourceLabels.
     * </pre>
     *
     * <code>repeated string gateways = 8;</code>
     * @param value The gateways to add.
     * @return This builder for chaining.
     */
    public Builder addGateways(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureGatewaysIsMutable();
      gateways_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Names of gateways where the rule should be applied. Gateway names
     * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
     * match is independent of sourceLabels.
     * </pre>
     *
     * <code>repeated string gateways = 8;</code>
     * @param values The gateways to add.
     * @return This builder for chaining.
     */
    public Builder addAllGateways(
        java.lang.Iterable<java.lang.String> values) {
      ensureGatewaysIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, gateways_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Names of gateways where the rule should be applied. Gateway names
     * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
     * match is independent of sourceLabels.
     * </pre>
     *
     * <code>repeated string gateways = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearGateways() {
      gateways_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Names of gateways where the rule should be applied. Gateway names
     * in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway
     * match is independent of sourceLabels.
     * </pre>
     *
     * <code>repeated string gateways = 8;</code>
     * @param value The bytes of the gateways to add.
     * @return This builder for chaining.
     */
    public Builder addGatewaysBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureGatewaysIsMutable();
      gateways_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.ourea.adapter.model.istio.StringMatch> queryParams_;
    private com.google.protobuf.MapField<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
    internalGetQueryParams() {
      if (queryParams_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            QueryParamsDefaultEntryHolder.defaultEntry);
      }
      return queryParams_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
    internalGetMutableQueryParams() {
      onChanged();;
      if (queryParams_ == null) {
        queryParams_ = com.google.protobuf.MapField.newMapField(
            QueryParamsDefaultEntryHolder.defaultEntry);
      }
      if (!queryParams_.isMutable()) {
        queryParams_ = queryParams_.copy();
      }
      return queryParams_;
    }

    public int getQueryParamsCount() {
      return internalGetQueryParams().getMap().size();
    }
    /**
     * <pre>
     * Query parameters for matching.
     * Ex:
     * - For a query parameter like "?key=true", the map key would be "key" and
     *   the string match could be defined as `exact: "true"`.
     * - For a query parameter like "?key", the map key would be "key" and the
     *   string match could be defined as `exact: ""`.
     * - For a query parameter like "?key=123", the map key would be "key" and the
     *   string match could be defined as `regex: "&#92;d+$"`. Note that this
     *   configuration will only match values like "123" but not "a123" or "123a".
     * **Note:** `prefix` matching is currently not supported.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
     */

    @java.lang.Override
    public boolean containsQueryParams(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetQueryParams().getMap().containsKey(key);
    }
    /**
     * Use {@link #getQueryParamsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getQueryParams() {
      return getQueryParamsMap();
    }
    /**
     * <pre>
     * Query parameters for matching.
     * Ex:
     * - For a query parameter like "?key=true", the map key would be "key" and
     *   the string match could be defined as `exact: "true"`.
     * - For a query parameter like "?key", the map key would be "key" and the
     *   string match could be defined as `exact: ""`.
     * - For a query parameter like "?key=123", the map key would be "key" and the
     *   string match could be defined as `regex: "&#92;d+$"`. Note that this
     *   configuration will only match values like "123" but not "a123" or "123a".
     * **Note:** `prefix` matching is currently not supported.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getQueryParamsMap() {
      return internalGetQueryParams().getMap();
    }
    /**
     * <pre>
     * Query parameters for matching.
     * Ex:
     * - For a query parameter like "?key=true", the map key would be "key" and
     *   the string match could be defined as `exact: "true"`.
     * - For a query parameter like "?key", the map key would be "key" and the
     *   string match could be defined as `exact: ""`.
     * - For a query parameter like "?key=123", the map key would be "key" and the
     *   string match could be defined as `regex: "&#92;d+$"`. Note that this
     *   configuration will only match values like "123" but not "a123" or "123a".
     * **Note:** `prefix` matching is currently not supported.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
     */
    @java.lang.Override

    public io.ourea.adapter.model.istio.StringMatch getQueryParamsOrDefault(
        java.lang.String key,
        io.ourea.adapter.model.istio.StringMatch defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
          internalGetQueryParams().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Query parameters for matching.
     * Ex:
     * - For a query parameter like "?key=true", the map key would be "key" and
     *   the string match could be defined as `exact: "true"`.
     * - For a query parameter like "?key", the map key would be "key" and the
     *   string match could be defined as `exact: ""`.
     * - For a query parameter like "?key=123", the map key would be "key" and the
     *   string match could be defined as `regex: "&#92;d+$"`. Note that this
     *   configuration will only match values like "123" but not "a123" or "123a".
     * **Note:** `prefix` matching is currently not supported.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
     */
    @java.lang.Override

    public io.ourea.adapter.model.istio.StringMatch getQueryParamsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
          internalGetQueryParams().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearQueryParams() {
      internalGetMutableQueryParams().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Query parameters for matching.
     * Ex:
     * - For a query parameter like "?key=true", the map key would be "key" and
     *   the string match could be defined as `exact: "true"`.
     * - For a query parameter like "?key", the map key would be "key" and the
     *   string match could be defined as `exact: ""`.
     * - For a query parameter like "?key=123", the map key would be "key" and the
     *   string match could be defined as `regex: "&#92;d+$"`. Note that this
     *   configuration will only match values like "123" but not "a123" or "123a".
     * **Note:** `prefix` matching is currently not supported.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
     */

    public Builder removeQueryParams(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableQueryParams().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
    getMutableQueryParams() {
      return internalGetMutableQueryParams().getMutableMap();
    }
    /**
     * <pre>
     * Query parameters for matching.
     * Ex:
     * - For a query parameter like "?key=true", the map key would be "key" and
     *   the string match could be defined as `exact: "true"`.
     * - For a query parameter like "?key", the map key would be "key" and the
     *   string match could be defined as `exact: ""`.
     * - For a query parameter like "?key=123", the map key would be "key" and the
     *   string match could be defined as `regex: "&#92;d+$"`. Note that this
     *   configuration will only match values like "123" but not "a123" or "123a".
     * **Note:** `prefix` matching is currently not supported.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
     */
    public Builder putQueryParams(
        java.lang.String key,
        io.ourea.adapter.model.istio.StringMatch value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableQueryParams().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Query parameters for matching.
     * Ex:
     * - For a query parameter like "?key=true", the map key would be "key" and
     *   the string match could be defined as `exact: "true"`.
     * - For a query parameter like "?key", the map key would be "key" and the
     *   string match could be defined as `exact: ""`.
     * - For a query parameter like "?key=123", the map key would be "key" and the
     *   string match could be defined as `regex: "&#92;d+$"`. Note that this
     *   configuration will only match values like "123" but not "a123" or "123a".
     * **Note:** `prefix` matching is currently not supported.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; query_params = 9;</code>
     */

    public Builder putAllQueryParams(
        java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> values) {
      internalGetMutableQueryParams().getMutableMap()
          .putAll(values);
      return this;
    }

    private boolean ignoreUriCase_ ;
    /**
     * <pre>
     * Flag to specify whether the URI matching should be case-insensitive.
     * **Note:** The case will be ignored only in the case of `exact` and `prefix`
     * URI matches.
     * </pre>
     *
     * <code>bool ignore_uri_case = 10;</code>
     * @return The ignoreUriCase.
     */
    @java.lang.Override
    public boolean getIgnoreUriCase() {
      return ignoreUriCase_;
    }
    /**
     * <pre>
     * Flag to specify whether the URI matching should be case-insensitive.
     * **Note:** The case will be ignored only in the case of `exact` and `prefix`
     * URI matches.
     * </pre>
     *
     * <code>bool ignore_uri_case = 10;</code>
     * @param value The ignoreUriCase to set.
     * @return This builder for chaining.
     */
    public Builder setIgnoreUriCase(boolean value) {
      
      ignoreUriCase_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flag to specify whether the URI matching should be case-insensitive.
     * **Note:** The case will be ignored only in the case of `exact` and `prefix`
     * URI matches.
     * </pre>
     *
     * <code>bool ignore_uri_case = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearIgnoreUriCase() {
      
      ignoreUriCase_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.ourea.adapter.model.istio.StringMatch> withoutHeaders_;
    private com.google.protobuf.MapField<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
    internalGetWithoutHeaders() {
      if (withoutHeaders_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WithoutHeadersDefaultEntryHolder.defaultEntry);
      }
      return withoutHeaders_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
    internalGetMutableWithoutHeaders() {
      onChanged();;
      if (withoutHeaders_ == null) {
        withoutHeaders_ = com.google.protobuf.MapField.newMapField(
            WithoutHeadersDefaultEntryHolder.defaultEntry);
      }
      if (!withoutHeaders_.isMutable()) {
        withoutHeaders_ = withoutHeaders_.copy();
      }
      return withoutHeaders_;
    }

    public int getWithoutHeadersCount() {
      return internalGetWithoutHeaders().getMap().size();
    }
    /**
     * <pre>
     * withoutHeader has the same syntax with the header, but has opposite meaning.
     * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
     */

    @java.lang.Override
    public boolean containsWithoutHeaders(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetWithoutHeaders().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWithoutHeadersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getWithoutHeaders() {
      return getWithoutHeadersMap();
    }
    /**
     * <pre>
     * withoutHeader has the same syntax with the header, but has opposite meaning.
     * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> getWithoutHeadersMap() {
      return internalGetWithoutHeaders().getMap();
    }
    /**
     * <pre>
     * withoutHeader has the same syntax with the header, but has opposite meaning.
     * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
     */
    @java.lang.Override

    public io.ourea.adapter.model.istio.StringMatch getWithoutHeadersOrDefault(
        java.lang.String key,
        io.ourea.adapter.model.istio.StringMatch defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
          internalGetWithoutHeaders().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * withoutHeader has the same syntax with the header, but has opposite meaning.
     * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
     */
    @java.lang.Override

    public io.ourea.adapter.model.istio.StringMatch getWithoutHeadersOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> map =
          internalGetWithoutHeaders().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearWithoutHeaders() {
      internalGetMutableWithoutHeaders().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * withoutHeader has the same syntax with the header, but has opposite meaning.
     * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
     */

    public Builder removeWithoutHeaders(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableWithoutHeaders().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch>
    getMutableWithoutHeaders() {
      return internalGetMutableWithoutHeaders().getMutableMap();
    }
    /**
     * <pre>
     * withoutHeader has the same syntax with the header, but has opposite meaning.
     * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
     */
    public Builder putWithoutHeaders(
        java.lang.String key,
        io.ourea.adapter.model.istio.StringMatch value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableWithoutHeaders().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * withoutHeader has the same syntax with the header, but has opposite meaning.
     * If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.
     * </pre>
     *
     * <code>map&lt;string, .istio.networking.v1alpha3.StringMatch&gt; without_headers = 12;</code>
     */

    public Builder putAllWithoutHeaders(
        java.util.Map<java.lang.String, io.ourea.adapter.model.istio.StringMatch> values) {
      internalGetMutableWithoutHeaders().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.lang.Object sourceNamespace_ = "";
    /**
     * <pre>
     * Source namespace constraining the applicability of a rule to workloads in that namespace.
     * If the VirtualService has a list of gateways specified in the top-level `gateways` field,
     * it must include the reserved gateway `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>string source_namespace = 13;</code>
     * @return The sourceNamespace.
     */
    public java.lang.String getSourceNamespace() {
      java.lang.Object ref = sourceNamespace_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sourceNamespace_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Source namespace constraining the applicability of a rule to workloads in that namespace.
     * If the VirtualService has a list of gateways specified in the top-level `gateways` field,
     * it must include the reserved gateway `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>string source_namespace = 13;</code>
     * @return The bytes for sourceNamespace.
     */
    public com.google.protobuf.ByteString
        getSourceNamespaceBytes() {
      java.lang.Object ref = sourceNamespace_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceNamespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Source namespace constraining the applicability of a rule to workloads in that namespace.
     * If the VirtualService has a list of gateways specified in the top-level `gateways` field,
     * it must include the reserved gateway `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>string source_namespace = 13;</code>
     * @param value The sourceNamespace to set.
     * @return This builder for chaining.
     */
    public Builder setSourceNamespace(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sourceNamespace_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Source namespace constraining the applicability of a rule to workloads in that namespace.
     * If the VirtualService has a list of gateways specified in the top-level `gateways` field,
     * it must include the reserved gateway `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>string source_namespace = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceNamespace() {
      
      sourceNamespace_ = getDefaultInstance().getSourceNamespace();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Source namespace constraining the applicability of a rule to workloads in that namespace.
     * If the VirtualService has a list of gateways specified in the top-level `gateways` field,
     * it must include the reserved gateway `mesh` for this field to be applicable.
     * </pre>
     *
     * <code>string source_namespace = 13;</code>
     * @param value The bytes for sourceNamespace to set.
     * @return This builder for chaining.
     */
    public Builder setSourceNamespaceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sourceNamespace_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.HTTPMatchRequest)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.HTTPMatchRequest)
  private static final io.ourea.adapter.model.istio.HTTPMatchRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.HTTPMatchRequest();
  }

  public static io.ourea.adapter.model.istio.HTTPMatchRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HTTPMatchRequest>
      PARSER = new com.google.protobuf.AbstractParser<HTTPMatchRequest>() {
    @java.lang.Override
    public HTTPMatchRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new HTTPMatchRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HTTPMatchRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HTTPMatchRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.HTTPMatchRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

