// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: workload_entry.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * WorkloadEntry enables specifying the properties of a single non-Kubernetes workload such a VM or a bare metal services that can be referred to by service entries.
 * &lt;!-- crd generation tags
 * +cue-gen:WorkloadEntry:groupName:networking.istio.io
 * +cue-gen:WorkloadEntry:version:v1alpha3
 * +cue-gen:WorkloadEntry:storageVersion
 * +cue-gen:WorkloadEntry:annotations:helm.sh/resource-policy=keep
 * +cue-gen:WorkloadEntry:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
 * +cue-gen:WorkloadEntry:subresource:status
 * +cue-gen:WorkloadEntry:scope:Namespaced
 * +cue-gen:WorkloadEntry:resource:categories=istio-io,networking-istio-io,shortNames=we,plural=workloadentries
 * +cue-gen:WorkloadEntry:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp
 * representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.
 * Clients may not set this value. It is represented in RFC3339 form and is in UTC.
 * Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
 * +cue-gen:WorkloadEntry:printerColumn:name=Address,type=string,JSONPath=.spec.address,description="Address associated with the network endpoint."
 * --&gt;
 * &lt;!-- go code generation tags
 * +kubetype-gen
 * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
 * +genclient
 * +k8s:deepcopy-gen=true
 * --&gt;
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.WorkloadEntry}
 */
public final class WorkloadEntry extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.WorkloadEntry)
    WorkloadEntryOrBuilder {
private static final long serialVersionUID = 0L;
  // Use WorkloadEntry.newBuilder() to construct.
  private WorkloadEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WorkloadEntry() {
    address_ = "";
    network_ = "";
    locality_ = "";
    serviceAccount_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new WorkloadEntry();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WorkloadEntry(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            address_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              ports_ = com.google.protobuf.MapField.newMapField(
                  PortsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
            ports__ = input.readMessage(
                PortsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            ports_.getMutableMap().put(
                ports__.getKey(), ports__.getValue());
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              labels_ = com.google.protobuf.MapField.newMapField(
                  LabelsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            labels__ = input.readMessage(
                LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            labels_.getMutableMap().put(
                labels__.getKey(), labels__.getValue());
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            network_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            locality_ = s;
            break;
          }
          case 48: {

            weight_ = input.readUInt32();
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            serviceAccount_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.WorkloadEntryOuterClass.internal_static_istio_networking_v1alpha3_WorkloadEntry_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetPorts();
      case 3:
        return internalGetLabels();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.WorkloadEntryOuterClass.internal_static_istio_networking_v1alpha3_WorkloadEntry_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.WorkloadEntry.class, io.ourea.adapter.model.istio.WorkloadEntry.Builder.class);
  }

  public static final int ADDRESS_FIELD_NUMBER = 1;
  private volatile java.lang.Object address_;
  /**
   * <pre>
   * Address associated with the network endpoint without the
   * port.  Domain names can be used if and only if the resolution is set
   * to DNS, and must be fully-qualified without wildcards. Use the form
   * unix:///absolute/path/to/socket for Unix domain socket endpoints.
   * </pre>
   *
   * <code>string address = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The address.
   */
  @java.lang.Override
  public java.lang.String getAddress() {
    java.lang.Object ref = address_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      address_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Address associated with the network endpoint without the
   * port.  Domain names can be used if and only if the resolution is set
   * to DNS, and must be fully-qualified without wildcards. Use the form
   * unix:///absolute/path/to/socket for Unix domain socket endpoints.
   * </pre>
   *
   * <code>string address = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for address.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAddressBytes() {
    java.lang.Object ref = address_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      address_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PORTS_FIELD_NUMBER = 2;
  private static final class PortsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                io.ourea.adapter.model.istio.WorkloadEntryOuterClass.internal_static_istio_networking_v1alpha3_WorkloadEntry_PortsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> ports_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetPorts() {
    if (ports_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          PortsDefaultEntryHolder.defaultEntry);
    }
    return ports_;
  }

  public int getPortsCount() {
    return internalGetPorts().getMap().size();
  }
  /**
   * <pre>
   * Set of ports associated with the endpoint. If the port map is
   * specified, it must be a map of servicePortName to this endpoint's
   * port, such that traffic to the service port will be forwarded to
   * the endpoint port that maps to the service's portName. If
   * omitted, and the targetPort is specified as part of the service's
   * port specification, traffic to the service port will be forwarded
   * to one of the endpoints on the specified `targetPort`. If both
   * the targetPort and endpoint's port map are not specified, traffic
   * to a service port will be forwarded to one of the endpoints on
   * the same port.
   * **NOTE 1:** Do not use for `unix://` addresses.
   * **NOTE 2:** endpoint port map takes precedence over targetPort.
   * </pre>
   *
   * <code>map&lt;string, uint32&gt; ports = 2;</code>
   */

  @java.lang.Override
  public boolean containsPorts(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetPorts().getMap().containsKey(key);
  }
  /**
   * Use {@link #getPortsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer> getPorts() {
    return getPortsMap();
  }
  /**
   * <pre>
   * Set of ports associated with the endpoint. If the port map is
   * specified, it must be a map of servicePortName to this endpoint's
   * port, such that traffic to the service port will be forwarded to
   * the endpoint port that maps to the service's portName. If
   * omitted, and the targetPort is specified as part of the service's
   * port specification, traffic to the service port will be forwarded
   * to one of the endpoints on the specified `targetPort`. If both
   * the targetPort and endpoint's port map are not specified, traffic
   * to a service port will be forwarded to one of the endpoints on
   * the same port.
   * **NOTE 1:** Do not use for `unix://` addresses.
   * **NOTE 2:** endpoint port map takes precedence over targetPort.
   * </pre>
   *
   * <code>map&lt;string, uint32&gt; ports = 2;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.Integer> getPortsMap() {
    return internalGetPorts().getMap();
  }
  /**
   * <pre>
   * Set of ports associated with the endpoint. If the port map is
   * specified, it must be a map of servicePortName to this endpoint's
   * port, such that traffic to the service port will be forwarded to
   * the endpoint port that maps to the service's portName. If
   * omitted, and the targetPort is specified as part of the service's
   * port specification, traffic to the service port will be forwarded
   * to one of the endpoints on the specified `targetPort`. If both
   * the targetPort and endpoint's port map are not specified, traffic
   * to a service port will be forwarded to one of the endpoints on
   * the same port.
   * **NOTE 1:** Do not use for `unix://` addresses.
   * **NOTE 2:** endpoint port map takes precedence over targetPort.
   * </pre>
   *
   * <code>map&lt;string, uint32&gt; ports = 2;</code>
   */
  @java.lang.Override

  public int getPortsOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetPorts().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Set of ports associated with the endpoint. If the port map is
   * specified, it must be a map of servicePortName to this endpoint's
   * port, such that traffic to the service port will be forwarded to
   * the endpoint port that maps to the service's portName. If
   * omitted, and the targetPort is specified as part of the service's
   * port specification, traffic to the service port will be forwarded
   * to one of the endpoints on the specified `targetPort`. If both
   * the targetPort and endpoint's port map are not specified, traffic
   * to a service port will be forwarded to one of the endpoints on
   * the same port.
   * **NOTE 1:** Do not use for `unix://` addresses.
   * **NOTE 2:** endpoint port map takes precedence over targetPort.
   * </pre>
   *
   * <code>map&lt;string, uint32&gt; ports = 2;</code>
   */
  @java.lang.Override

  public int getPortsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetPorts().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int LABELS_FIELD_NUMBER = 3;
  private static final class LabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                io.ourea.adapter.model.istio.WorkloadEntryOuterClass.internal_static_istio_networking_v1alpha3_WorkloadEntry_LabelsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> labels_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetLabels() {
    if (labels_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LabelsDefaultEntryHolder.defaultEntry);
    }
    return labels_;
  }

  public int getLabelsCount() {
    return internalGetLabels().getMap().size();
  }
  /**
   * <pre>
   * One or more labels associated with the endpoint.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */

  @java.lang.Override
  public boolean containsLabels(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetLabels().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getLabels() {
    return getLabelsMap();
  }
  /**
   * <pre>
   * One or more labels associated with the endpoint.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
    return internalGetLabels().getMap();
  }
  /**
   * <pre>
   * One or more labels associated with the endpoint.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */
  @java.lang.Override

  public java.lang.String getLabelsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * One or more labels associated with the endpoint.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 3;</code>
   */
  @java.lang.Override

  public java.lang.String getLabelsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int NETWORK_FIELD_NUMBER = 4;
  private volatile java.lang.Object network_;
  /**
   * <pre>
   * Network enables Istio to group endpoints resident in the same L3
   * domain/network. All endpoints in the same network are assumed to be
   * directly reachable from one another. When endpoints in different
   * networks cannot reach each other directly, an Istio Gateway can be
   * used to establish connectivity (usually using the
   * `AUTO_PASSTHROUGH` mode in a Gateway Server). This is
   * an advanced configuration used typically for spanning an Istio mesh
   * over multiple clusters.
   * </pre>
   *
   * <code>string network = 4;</code>
   * @return The network.
   */
  @java.lang.Override
  public java.lang.String getNetwork() {
    java.lang.Object ref = network_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      network_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Network enables Istio to group endpoints resident in the same L3
   * domain/network. All endpoints in the same network are assumed to be
   * directly reachable from one another. When endpoints in different
   * networks cannot reach each other directly, an Istio Gateway can be
   * used to establish connectivity (usually using the
   * `AUTO_PASSTHROUGH` mode in a Gateway Server). This is
   * an advanced configuration used typically for spanning an Istio mesh
   * over multiple clusters.
   * </pre>
   *
   * <code>string network = 4;</code>
   * @return The bytes for network.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNetworkBytes() {
    java.lang.Object ref = network_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      network_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOCALITY_FIELD_NUMBER = 5;
  private volatile java.lang.Object locality_;
  /**
   * <pre>
   * The locality associated with the endpoint. A locality corresponds
   * to a failure domain (e.g., country/region/zone). Arbitrary failure
   * domain hierarchies can be represented by separating each
   * encapsulating failure domain by /. For example, the locality of an
   * an endpoint in US, in US-East-1 region, within availability zone
   * az-1, in data center rack r11 can be represented as
   * us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
   * endpoints within the same locality as the sidecar. If none of the
   * endpoints in the locality are available, endpoints parent locality
   * (but within the same network ID) will be chosen. For example, if
   * there are two endpoints in same network (networkID "n1"), say e1
   * with locality us/us-east-1/az-1/r11 and e2 with locality
   * us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
   * will prefer e1 from the same locality over e2 from a different
   * locality. Endpoint e2 could be the IP associated with a gateway
   * (that bridges networks n1 and n2), or the IP associated with a
   * standard service endpoint.
   * </pre>
   *
   * <code>string locality = 5;</code>
   * @return The locality.
   */
  @java.lang.Override
  public java.lang.String getLocality() {
    java.lang.Object ref = locality_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      locality_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The locality associated with the endpoint. A locality corresponds
   * to a failure domain (e.g., country/region/zone). Arbitrary failure
   * domain hierarchies can be represented by separating each
   * encapsulating failure domain by /. For example, the locality of an
   * an endpoint in US, in US-East-1 region, within availability zone
   * az-1, in data center rack r11 can be represented as
   * us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
   * endpoints within the same locality as the sidecar. If none of the
   * endpoints in the locality are available, endpoints parent locality
   * (but within the same network ID) will be chosen. For example, if
   * there are two endpoints in same network (networkID "n1"), say e1
   * with locality us/us-east-1/az-1/r11 and e2 with locality
   * us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
   * will prefer e1 from the same locality over e2 from a different
   * locality. Endpoint e2 could be the IP associated with a gateway
   * (that bridges networks n1 and n2), or the IP associated with a
   * standard service endpoint.
   * </pre>
   *
   * <code>string locality = 5;</code>
   * @return The bytes for locality.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLocalityBytes() {
    java.lang.Object ref = locality_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      locality_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WEIGHT_FIELD_NUMBER = 6;
  private int weight_;
  /**
   * <pre>
   * The load balancing weight associated with the endpoint. Endpoints
   * with higher weights will receive proportionally higher traffic.
   * </pre>
   *
   * <code>uint32 weight = 6;</code>
   * @return The weight.
   */
  @java.lang.Override
  public int getWeight() {
    return weight_;
  }

  public static final int SERVICE_ACCOUNT_FIELD_NUMBER = 7;
  private volatile java.lang.Object serviceAccount_;
  /**
   * <pre>
   * The service account associated with the workload if a sidecar
   * is present in the workload. The service account must be present
   * in the same namespace as the configuration ( WorkloadEntry or a
   * ServiceEntry)
   * </pre>
   *
   * <code>string service_account = 7;</code>
   * @return The serviceAccount.
   */
  @java.lang.Override
  public java.lang.String getServiceAccount() {
    java.lang.Object ref = serviceAccount_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serviceAccount_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The service account associated with the workload if a sidecar
   * is present in the workload. The service account must be present
   * in the same namespace as the configuration ( WorkloadEntry or a
   * ServiceEntry)
   * </pre>
   *
   * <code>string service_account = 7;</code>
   * @return The bytes for serviceAccount.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServiceAccountBytes() {
    java.lang.Object ref = serviceAccount_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      serviceAccount_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getAddressBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, address_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetPorts(),
        PortsDefaultEntryHolder.defaultEntry,
        2);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetLabels(),
        LabelsDefaultEntryHolder.defaultEntry,
        3);
    if (!getNetworkBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, network_);
    }
    if (!getLocalityBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, locality_);
    }
    if (weight_ != 0) {
      output.writeUInt32(6, weight_);
    }
    if (!getServiceAccountBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, serviceAccount_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getAddressBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, address_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetPorts().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      ports__ = PortsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ports__);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetLabels().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, labels__);
    }
    if (!getNetworkBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, network_);
    }
    if (!getLocalityBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, locality_);
    }
    if (weight_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, weight_);
    }
    if (!getServiceAccountBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, serviceAccount_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.WorkloadEntry)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.WorkloadEntry other = (io.ourea.adapter.model.istio.WorkloadEntry) obj;

    if (!getAddress()
        .equals(other.getAddress())) return false;
    if (!internalGetPorts().equals(
        other.internalGetPorts())) return false;
    if (!internalGetLabels().equals(
        other.internalGetLabels())) return false;
    if (!getNetwork()
        .equals(other.getNetwork())) return false;
    if (!getLocality()
        .equals(other.getLocality())) return false;
    if (getWeight()
        != other.getWeight()) return false;
    if (!getServiceAccount()
        .equals(other.getServiceAccount())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getAddress().hashCode();
    if (!internalGetPorts().getMap().isEmpty()) {
      hash = (37 * hash) + PORTS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetPorts().hashCode();
    }
    if (!internalGetLabels().getMap().isEmpty()) {
      hash = (37 * hash) + LABELS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLabels().hashCode();
    }
    hash = (37 * hash) + NETWORK_FIELD_NUMBER;
    hash = (53 * hash) + getNetwork().hashCode();
    hash = (37 * hash) + LOCALITY_FIELD_NUMBER;
    hash = (53 * hash) + getLocality().hashCode();
    hash = (37 * hash) + WEIGHT_FIELD_NUMBER;
    hash = (53 * hash) + getWeight();
    hash = (37 * hash) + SERVICE_ACCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getServiceAccount().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.WorkloadEntry parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.WorkloadEntry prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * WorkloadEntry enables specifying the properties of a single non-Kubernetes workload such a VM or a bare metal services that can be referred to by service entries.
   * &lt;!-- crd generation tags
   * +cue-gen:WorkloadEntry:groupName:networking.istio.io
   * +cue-gen:WorkloadEntry:version:v1alpha3
   * +cue-gen:WorkloadEntry:storageVersion
   * +cue-gen:WorkloadEntry:annotations:helm.sh/resource-policy=keep
   * +cue-gen:WorkloadEntry:labels:app=istio-pilot,chart=istio,heritage=Tiller,release=istio
   * +cue-gen:WorkloadEntry:subresource:status
   * +cue-gen:WorkloadEntry:scope:Namespaced
   * +cue-gen:WorkloadEntry:resource:categories=istio-io,networking-istio-io,shortNames=we,plural=workloadentries
   * +cue-gen:WorkloadEntry:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp
   * representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.
   * Clients may not set this value. It is represented in RFC3339 form and is in UTC.
   * Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
   * +cue-gen:WorkloadEntry:printerColumn:name=Address,type=string,JSONPath=.spec.address,description="Address associated with the network endpoint."
   * --&gt;
   * &lt;!-- go code generation tags
   * +kubetype-gen
   * +kubetype-gen:groupVersion=networking.istio.io/v1alpha3
   * +genclient
   * +k8s:deepcopy-gen=true
   * --&gt;
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.WorkloadEntry}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.WorkloadEntry)
      io.ourea.adapter.model.istio.WorkloadEntryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.WorkloadEntryOuterClass.internal_static_istio_networking_v1alpha3_WorkloadEntry_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetPorts();
        case 3:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutablePorts();
        case 3:
          return internalGetMutableLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.WorkloadEntryOuterClass.internal_static_istio_networking_v1alpha3_WorkloadEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.WorkloadEntry.class, io.ourea.adapter.model.istio.WorkloadEntry.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.WorkloadEntry.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      address_ = "";

      internalGetMutablePorts().clear();
      internalGetMutableLabels().clear();
      network_ = "";

      locality_ = "";

      weight_ = 0;

      serviceAccount_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.WorkloadEntryOuterClass.internal_static_istio_networking_v1alpha3_WorkloadEntry_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.WorkloadEntry getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.WorkloadEntry.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.WorkloadEntry build() {
      io.ourea.adapter.model.istio.WorkloadEntry result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.WorkloadEntry buildPartial() {
      io.ourea.adapter.model.istio.WorkloadEntry result = new io.ourea.adapter.model.istio.WorkloadEntry(this);
      int from_bitField0_ = bitField0_;
      result.address_ = address_;
      result.ports_ = internalGetPorts();
      result.ports_.makeImmutable();
      result.labels_ = internalGetLabels();
      result.labels_.makeImmutable();
      result.network_ = network_;
      result.locality_ = locality_;
      result.weight_ = weight_;
      result.serviceAccount_ = serviceAccount_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.WorkloadEntry) {
        return mergeFrom((io.ourea.adapter.model.istio.WorkloadEntry)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.WorkloadEntry other) {
      if (other == io.ourea.adapter.model.istio.WorkloadEntry.getDefaultInstance()) return this;
      if (!other.getAddress().isEmpty()) {
        address_ = other.address_;
        onChanged();
      }
      internalGetMutablePorts().mergeFrom(
          other.internalGetPorts());
      internalGetMutableLabels().mergeFrom(
          other.internalGetLabels());
      if (!other.getNetwork().isEmpty()) {
        network_ = other.network_;
        onChanged();
      }
      if (!other.getLocality().isEmpty()) {
        locality_ = other.locality_;
        onChanged();
      }
      if (other.getWeight() != 0) {
        setWeight(other.getWeight());
      }
      if (!other.getServiceAccount().isEmpty()) {
        serviceAccount_ = other.serviceAccount_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.WorkloadEntry parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.WorkloadEntry) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object address_ = "";
    /**
     * <pre>
     * Address associated with the network endpoint without the
     * port.  Domain names can be used if and only if the resolution is set
     * to DNS, and must be fully-qualified without wildcards. Use the form
     * unix:///absolute/path/to/socket for Unix domain socket endpoints.
     * </pre>
     *
     * <code>string address = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The address.
     */
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Address associated with the network endpoint without the
     * port.  Domain names can be used if and only if the resolution is set
     * to DNS, and must be fully-qualified without wildcards. Use the form
     * unix:///absolute/path/to/socket for Unix domain socket endpoints.
     * </pre>
     *
     * <code>string address = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for address.
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Address associated with the network endpoint without the
     * port.  Domain names can be used if and only if the resolution is set
     * to DNS, and must be fully-qualified without wildcards. Use the form
     * unix:///absolute/path/to/socket for Unix domain socket endpoints.
     * </pre>
     *
     * <code>string address = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The address to set.
     * @return This builder for chaining.
     */
    public Builder setAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      address_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Address associated with the network endpoint without the
     * port.  Domain names can be used if and only if the resolution is set
     * to DNS, and must be fully-qualified without wildcards. Use the form
     * unix:///absolute/path/to/socket for Unix domain socket endpoints.
     * </pre>
     *
     * <code>string address = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearAddress() {
      
      address_ = getDefaultInstance().getAddress();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Address associated with the network endpoint without the
     * port.  Domain names can be used if and only if the resolution is set
     * to DNS, and must be fully-qualified without wildcards. Use the form
     * unix:///absolute/path/to/socket for Unix domain socket endpoints.
     * </pre>
     *
     * <code>string address = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for address to set.
     * @return This builder for chaining.
     */
    public Builder setAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      address_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> ports_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetPorts() {
      if (ports_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PortsDefaultEntryHolder.defaultEntry);
      }
      return ports_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetMutablePorts() {
      onChanged();;
      if (ports_ == null) {
        ports_ = com.google.protobuf.MapField.newMapField(
            PortsDefaultEntryHolder.defaultEntry);
      }
      if (!ports_.isMutable()) {
        ports_ = ports_.copy();
      }
      return ports_;
    }

    public int getPortsCount() {
      return internalGetPorts().getMap().size();
    }
    /**
     * <pre>
     * Set of ports associated with the endpoint. If the port map is
     * specified, it must be a map of servicePortName to this endpoint's
     * port, such that traffic to the service port will be forwarded to
     * the endpoint port that maps to the service's portName. If
     * omitted, and the targetPort is specified as part of the service's
     * port specification, traffic to the service port will be forwarded
     * to one of the endpoints on the specified `targetPort`. If both
     * the targetPort and endpoint's port map are not specified, traffic
     * to a service port will be forwarded to one of the endpoints on
     * the same port.
     * **NOTE 1:** Do not use for `unix://` addresses.
     * **NOTE 2:** endpoint port map takes precedence over targetPort.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; ports = 2;</code>
     */

    @java.lang.Override
    public boolean containsPorts(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPorts().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPortsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getPorts() {
      return getPortsMap();
    }
    /**
     * <pre>
     * Set of ports associated with the endpoint. If the port map is
     * specified, it must be a map of servicePortName to this endpoint's
     * port, such that traffic to the service port will be forwarded to
     * the endpoint port that maps to the service's portName. If
     * omitted, and the targetPort is specified as part of the service's
     * port specification, traffic to the service port will be forwarded
     * to one of the endpoints on the specified `targetPort`. If both
     * the targetPort and endpoint's port map are not specified, traffic
     * to a service port will be forwarded to one of the endpoints on
     * the same port.
     * **NOTE 1:** Do not use for `unix://` addresses.
     * **NOTE 2:** endpoint port map takes precedence over targetPort.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; ports = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getPortsMap() {
      return internalGetPorts().getMap();
    }
    /**
     * <pre>
     * Set of ports associated with the endpoint. If the port map is
     * specified, it must be a map of servicePortName to this endpoint's
     * port, such that traffic to the service port will be forwarded to
     * the endpoint port that maps to the service's portName. If
     * omitted, and the targetPort is specified as part of the service's
     * port specification, traffic to the service port will be forwarded
     * to one of the endpoints on the specified `targetPort`. If both
     * the targetPort and endpoint's port map are not specified, traffic
     * to a service port will be forwarded to one of the endpoints on
     * the same port.
     * **NOTE 1:** Do not use for `unix://` addresses.
     * **NOTE 2:** endpoint port map takes precedence over targetPort.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; ports = 2;</code>
     */
    @java.lang.Override

    public int getPortsOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPorts().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Set of ports associated with the endpoint. If the port map is
     * specified, it must be a map of servicePortName to this endpoint's
     * port, such that traffic to the service port will be forwarded to
     * the endpoint port that maps to the service's portName. If
     * omitted, and the targetPort is specified as part of the service's
     * port specification, traffic to the service port will be forwarded
     * to one of the endpoints on the specified `targetPort`. If both
     * the targetPort and endpoint's port map are not specified, traffic
     * to a service port will be forwarded to one of the endpoints on
     * the same port.
     * **NOTE 1:** Do not use for `unix://` addresses.
     * **NOTE 2:** endpoint port map takes precedence over targetPort.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; ports = 2;</code>
     */
    @java.lang.Override

    public int getPortsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetPorts().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearPorts() {
      internalGetMutablePorts().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Set of ports associated with the endpoint. If the port map is
     * specified, it must be a map of servicePortName to this endpoint's
     * port, such that traffic to the service port will be forwarded to
     * the endpoint port that maps to the service's portName. If
     * omitted, and the targetPort is specified as part of the service's
     * port specification, traffic to the service port will be forwarded
     * to one of the endpoints on the specified `targetPort`. If both
     * the targetPort and endpoint's port map are not specified, traffic
     * to a service port will be forwarded to one of the endpoints on
     * the same port.
     * **NOTE 1:** Do not use for `unix://` addresses.
     * **NOTE 2:** endpoint port map takes precedence over targetPort.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; ports = 2;</code>
     */

    public Builder removePorts(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutablePorts().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutablePorts() {
      return internalGetMutablePorts().getMutableMap();
    }
    /**
     * <pre>
     * Set of ports associated with the endpoint. If the port map is
     * specified, it must be a map of servicePortName to this endpoint's
     * port, such that traffic to the service port will be forwarded to
     * the endpoint port that maps to the service's portName. If
     * omitted, and the targetPort is specified as part of the service's
     * port specification, traffic to the service port will be forwarded
     * to one of the endpoints on the specified `targetPort`. If both
     * the targetPort and endpoint's port map are not specified, traffic
     * to a service port will be forwarded to one of the endpoints on
     * the same port.
     * **NOTE 1:** Do not use for `unix://` addresses.
     * **NOTE 2:** endpoint port map takes precedence over targetPort.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; ports = 2;</code>
     */
    public Builder putPorts(
        java.lang.String key,
        int value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      internalGetMutablePorts().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Set of ports associated with the endpoint. If the port map is
     * specified, it must be a map of servicePortName to this endpoint's
     * port, such that traffic to the service port will be forwarded to
     * the endpoint port that maps to the service's portName. If
     * omitted, and the targetPort is specified as part of the service's
     * port specification, traffic to the service port will be forwarded
     * to one of the endpoints on the specified `targetPort`. If both
     * the targetPort and endpoint's port map are not specified, traffic
     * to a service port will be forwarded to one of the endpoints on
     * the same port.
     * **NOTE 1:** Do not use for `unix://` addresses.
     * **NOTE 2:** endpoint port map takes precedence over targetPort.
     * </pre>
     *
     * <code>map&lt;string, uint32&gt; ports = 2;</code>
     */

    public Builder putAllPorts(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      internalGetMutablePorts().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableLabels() {
      onChanged();;
      if (labels_ == null) {
        labels_ = com.google.protobuf.MapField.newMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      if (!labels_.isMutable()) {
        labels_ = labels_.copy();
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * One or more labels associated with the endpoint.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    @java.lang.Override
    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * One or more labels associated with the endpoint.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * One or more labels associated with the endpoint.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * One or more labels associated with the endpoint.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLabels() {
      internalGetMutableLabels().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * One or more labels associated with the endpoint.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    public Builder removeLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableLabels().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableLabels() {
      return internalGetMutableLabels().getMutableMap();
    }
    /**
     * <pre>
     * One or more labels associated with the endpoint.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    public Builder putLabels(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableLabels().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * One or more labels associated with the endpoint.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    public Builder putAllLabels(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableLabels().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.lang.Object network_ = "";
    /**
     * <pre>
     * Network enables Istio to group endpoints resident in the same L3
     * domain/network. All endpoints in the same network are assumed to be
     * directly reachable from one another. When endpoints in different
     * networks cannot reach each other directly, an Istio Gateway can be
     * used to establish connectivity (usually using the
     * `AUTO_PASSTHROUGH` mode in a Gateway Server). This is
     * an advanced configuration used typically for spanning an Istio mesh
     * over multiple clusters.
     * </pre>
     *
     * <code>string network = 4;</code>
     * @return The network.
     */
    public java.lang.String getNetwork() {
      java.lang.Object ref = network_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        network_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Network enables Istio to group endpoints resident in the same L3
     * domain/network. All endpoints in the same network are assumed to be
     * directly reachable from one another. When endpoints in different
     * networks cannot reach each other directly, an Istio Gateway can be
     * used to establish connectivity (usually using the
     * `AUTO_PASSTHROUGH` mode in a Gateway Server). This is
     * an advanced configuration used typically for spanning an Istio mesh
     * over multiple clusters.
     * </pre>
     *
     * <code>string network = 4;</code>
     * @return The bytes for network.
     */
    public com.google.protobuf.ByteString
        getNetworkBytes() {
      java.lang.Object ref = network_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        network_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Network enables Istio to group endpoints resident in the same L3
     * domain/network. All endpoints in the same network are assumed to be
     * directly reachable from one another. When endpoints in different
     * networks cannot reach each other directly, an Istio Gateway can be
     * used to establish connectivity (usually using the
     * `AUTO_PASSTHROUGH` mode in a Gateway Server). This is
     * an advanced configuration used typically for spanning an Istio mesh
     * over multiple clusters.
     * </pre>
     *
     * <code>string network = 4;</code>
     * @param value The network to set.
     * @return This builder for chaining.
     */
    public Builder setNetwork(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      network_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Network enables Istio to group endpoints resident in the same L3
     * domain/network. All endpoints in the same network are assumed to be
     * directly reachable from one another. When endpoints in different
     * networks cannot reach each other directly, an Istio Gateway can be
     * used to establish connectivity (usually using the
     * `AUTO_PASSTHROUGH` mode in a Gateway Server). This is
     * an advanced configuration used typically for spanning an Istio mesh
     * over multiple clusters.
     * </pre>
     *
     * <code>string network = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearNetwork() {
      
      network_ = getDefaultInstance().getNetwork();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Network enables Istio to group endpoints resident in the same L3
     * domain/network. All endpoints in the same network are assumed to be
     * directly reachable from one another. When endpoints in different
     * networks cannot reach each other directly, an Istio Gateway can be
     * used to establish connectivity (usually using the
     * `AUTO_PASSTHROUGH` mode in a Gateway Server). This is
     * an advanced configuration used typically for spanning an Istio mesh
     * over multiple clusters.
     * </pre>
     *
     * <code>string network = 4;</code>
     * @param value The bytes for network to set.
     * @return This builder for chaining.
     */
    public Builder setNetworkBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      network_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object locality_ = "";
    /**
     * <pre>
     * The locality associated with the endpoint. A locality corresponds
     * to a failure domain (e.g., country/region/zone). Arbitrary failure
     * domain hierarchies can be represented by separating each
     * encapsulating failure domain by /. For example, the locality of an
     * an endpoint in US, in US-East-1 region, within availability zone
     * az-1, in data center rack r11 can be represented as
     * us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
     * endpoints within the same locality as the sidecar. If none of the
     * endpoints in the locality are available, endpoints parent locality
     * (but within the same network ID) will be chosen. For example, if
     * there are two endpoints in same network (networkID "n1"), say e1
     * with locality us/us-east-1/az-1/r11 and e2 with locality
     * us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
     * will prefer e1 from the same locality over e2 from a different
     * locality. Endpoint e2 could be the IP associated with a gateway
     * (that bridges networks n1 and n2), or the IP associated with a
     * standard service endpoint.
     * </pre>
     *
     * <code>string locality = 5;</code>
     * @return The locality.
     */
    public java.lang.String getLocality() {
      java.lang.Object ref = locality_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        locality_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The locality associated with the endpoint. A locality corresponds
     * to a failure domain (e.g., country/region/zone). Arbitrary failure
     * domain hierarchies can be represented by separating each
     * encapsulating failure domain by /. For example, the locality of an
     * an endpoint in US, in US-East-1 region, within availability zone
     * az-1, in data center rack r11 can be represented as
     * us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
     * endpoints within the same locality as the sidecar. If none of the
     * endpoints in the locality are available, endpoints parent locality
     * (but within the same network ID) will be chosen. For example, if
     * there are two endpoints in same network (networkID "n1"), say e1
     * with locality us/us-east-1/az-1/r11 and e2 with locality
     * us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
     * will prefer e1 from the same locality over e2 from a different
     * locality. Endpoint e2 could be the IP associated with a gateway
     * (that bridges networks n1 and n2), or the IP associated with a
     * standard service endpoint.
     * </pre>
     *
     * <code>string locality = 5;</code>
     * @return The bytes for locality.
     */
    public com.google.protobuf.ByteString
        getLocalityBytes() {
      java.lang.Object ref = locality_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        locality_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The locality associated with the endpoint. A locality corresponds
     * to a failure domain (e.g., country/region/zone). Arbitrary failure
     * domain hierarchies can be represented by separating each
     * encapsulating failure domain by /. For example, the locality of an
     * an endpoint in US, in US-East-1 region, within availability zone
     * az-1, in data center rack r11 can be represented as
     * us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
     * endpoints within the same locality as the sidecar. If none of the
     * endpoints in the locality are available, endpoints parent locality
     * (but within the same network ID) will be chosen. For example, if
     * there are two endpoints in same network (networkID "n1"), say e1
     * with locality us/us-east-1/az-1/r11 and e2 with locality
     * us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
     * will prefer e1 from the same locality over e2 from a different
     * locality. Endpoint e2 could be the IP associated with a gateway
     * (that bridges networks n1 and n2), or the IP associated with a
     * standard service endpoint.
     * </pre>
     *
     * <code>string locality = 5;</code>
     * @param value The locality to set.
     * @return This builder for chaining.
     */
    public Builder setLocality(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      locality_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The locality associated with the endpoint. A locality corresponds
     * to a failure domain (e.g., country/region/zone). Arbitrary failure
     * domain hierarchies can be represented by separating each
     * encapsulating failure domain by /. For example, the locality of an
     * an endpoint in US, in US-East-1 region, within availability zone
     * az-1, in data center rack r11 can be represented as
     * us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
     * endpoints within the same locality as the sidecar. If none of the
     * endpoints in the locality are available, endpoints parent locality
     * (but within the same network ID) will be chosen. For example, if
     * there are two endpoints in same network (networkID "n1"), say e1
     * with locality us/us-east-1/az-1/r11 and e2 with locality
     * us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
     * will prefer e1 from the same locality over e2 from a different
     * locality. Endpoint e2 could be the IP associated with a gateway
     * (that bridges networks n1 and n2), or the IP associated with a
     * standard service endpoint.
     * </pre>
     *
     * <code>string locality = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearLocality() {
      
      locality_ = getDefaultInstance().getLocality();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The locality associated with the endpoint. A locality corresponds
     * to a failure domain (e.g., country/region/zone). Arbitrary failure
     * domain hierarchies can be represented by separating each
     * encapsulating failure domain by /. For example, the locality of an
     * an endpoint in US, in US-East-1 region, within availability zone
     * az-1, in data center rack r11 can be represented as
     * us/us-east-1/az-1/r11. Istio will configure the sidecar to route to
     * endpoints within the same locality as the sidecar. If none of the
     * endpoints in the locality are available, endpoints parent locality
     * (but within the same network ID) will be chosen. For example, if
     * there are two endpoints in same network (networkID "n1"), say e1
     * with locality us/us-east-1/az-1/r11 and e2 with locality
     * us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality
     * will prefer e1 from the same locality over e2 from a different
     * locality. Endpoint e2 could be the IP associated with a gateway
     * (that bridges networks n1 and n2), or the IP associated with a
     * standard service endpoint.
     * </pre>
     *
     * <code>string locality = 5;</code>
     * @param value The bytes for locality to set.
     * @return This builder for chaining.
     */
    public Builder setLocalityBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      locality_ = value;
      onChanged();
      return this;
    }

    private int weight_ ;
    /**
     * <pre>
     * The load balancing weight associated with the endpoint. Endpoints
     * with higher weights will receive proportionally higher traffic.
     * </pre>
     *
     * <code>uint32 weight = 6;</code>
     * @return The weight.
     */
    @java.lang.Override
    public int getWeight() {
      return weight_;
    }
    /**
     * <pre>
     * The load balancing weight associated with the endpoint. Endpoints
     * with higher weights will receive proportionally higher traffic.
     * </pre>
     *
     * <code>uint32 weight = 6;</code>
     * @param value The weight to set.
     * @return This builder for chaining.
     */
    public Builder setWeight(int value) {
      
      weight_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The load balancing weight associated with the endpoint. Endpoints
     * with higher weights will receive proportionally higher traffic.
     * </pre>
     *
     * <code>uint32 weight = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearWeight() {
      
      weight_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object serviceAccount_ = "";
    /**
     * <pre>
     * The service account associated with the workload if a sidecar
     * is present in the workload. The service account must be present
     * in the same namespace as the configuration ( WorkloadEntry or a
     * ServiceEntry)
     * </pre>
     *
     * <code>string service_account = 7;</code>
     * @return The serviceAccount.
     */
    public java.lang.String getServiceAccount() {
      java.lang.Object ref = serviceAccount_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceAccount_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The service account associated with the workload if a sidecar
     * is present in the workload. The service account must be present
     * in the same namespace as the configuration ( WorkloadEntry or a
     * ServiceEntry)
     * </pre>
     *
     * <code>string service_account = 7;</code>
     * @return The bytes for serviceAccount.
     */
    public com.google.protobuf.ByteString
        getServiceAccountBytes() {
      java.lang.Object ref = serviceAccount_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceAccount_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The service account associated with the workload if a sidecar
     * is present in the workload. The service account must be present
     * in the same namespace as the configuration ( WorkloadEntry or a
     * ServiceEntry)
     * </pre>
     *
     * <code>string service_account = 7;</code>
     * @param value The serviceAccount to set.
     * @return This builder for chaining.
     */
    public Builder setServiceAccount(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      serviceAccount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The service account associated with the workload if a sidecar
     * is present in the workload. The service account must be present
     * in the same namespace as the configuration ( WorkloadEntry or a
     * ServiceEntry)
     * </pre>
     *
     * <code>string service_account = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearServiceAccount() {
      
      serviceAccount_ = getDefaultInstance().getServiceAccount();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The service account associated with the workload if a sidecar
     * is present in the workload. The service account must be present
     * in the same namespace as the configuration ( WorkloadEntry or a
     * ServiceEntry)
     * </pre>
     *
     * <code>string service_account = 7;</code>
     * @param value The bytes for serviceAccount to set.
     * @return This builder for chaining.
     */
    public Builder setServiceAccountBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      serviceAccount_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.WorkloadEntry)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.WorkloadEntry)
  private static final io.ourea.adapter.model.istio.WorkloadEntry DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.WorkloadEntry();
  }

  public static io.ourea.adapter.model.istio.WorkloadEntry getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WorkloadEntry>
      PARSER = new com.google.protobuf.AbstractParser<WorkloadEntry>() {
    @java.lang.Override
    public WorkloadEntry parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new WorkloadEntry(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WorkloadEntry> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WorkloadEntry> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.WorkloadEntry getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

