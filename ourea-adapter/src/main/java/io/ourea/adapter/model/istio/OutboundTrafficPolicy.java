// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sidecar.proto

package io.ourea.adapter.model.istio;

/**
 * <pre>
 * `OutboundTrafficPolicy` sets the default behavior of the sidecar for
 * handling outbound traffic from the application.
 * If your application uses one or more external
 * services that are not known apriori, setting the policy to `ALLOW_ANY`
 * will cause the sidecars to route any unknown traffic originating from
 * the application to its requested destination.  Users are strongly
 * encouraged to use `ServiceEntry` configurations to explicitly declare any external
 * dependencies, instead of using `ALLOW_ANY`, so that traffic to these
 * services can be monitored.
 * </pre>
 *
 * Protobuf type {@code istio.networking.v1alpha3.OutboundTrafficPolicy}
 */
public final class OutboundTrafficPolicy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:istio.networking.v1alpha3.OutboundTrafficPolicy)
    OutboundTrafficPolicyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OutboundTrafficPolicy.newBuilder() to construct.
  private OutboundTrafficPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OutboundTrafficPolicy() {
    mode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OutboundTrafficPolicy();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OutboundTrafficPolicy(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            mode_ = rawValue;
            break;
          }
          case 18: {
            io.ourea.adapter.model.istio.Destination.Builder subBuilder = null;
            if (egressProxy_ != null) {
              subBuilder = egressProxy_.toBuilder();
            }
            egressProxy_ = input.readMessage(io.ourea.adapter.model.istio.Destination.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(egressProxy_);
              egressProxy_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.ourea.adapter.model.istio.OutboundTrafficPolicy.class, io.ourea.adapter.model.istio.OutboundTrafficPolicy.Builder.class);
  }

  /**
   * Protobuf enum {@code istio.networking.v1alpha3.OutboundTrafficPolicy.Mode}
   */
  public enum Mode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Outbound traffic will be restricted to services defined in the
     * service registry as well as those defined through `ServiceEntry` configurations.
     * </pre>
     *
     * <code>REGISTRY_ONLY = 0;</code>
     */
    REGISTRY_ONLY(0),
    /**
     * <pre>
     * Outbound traffic to unknown destinations will be allowed, in case
     * there are no services or `ServiceEntry` configurations for the destination port.
     * </pre>
     *
     * <code>ALLOW_ANY = 1;</code>
     */
    ALLOW_ANY(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Outbound traffic will be restricted to services defined in the
     * service registry as well as those defined through `ServiceEntry` configurations.
     * </pre>
     *
     * <code>REGISTRY_ONLY = 0;</code>
     */
    public static final int REGISTRY_ONLY_VALUE = 0;
    /**
     * <pre>
     * Outbound traffic to unknown destinations will be allowed, in case
     * there are no services or `ServiceEntry` configurations for the destination port.
     * </pre>
     *
     * <code>ALLOW_ANY = 1;</code>
     */
    public static final int ALLOW_ANY_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Mode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Mode forNumber(int value) {
      switch (value) {
        case 0: return REGISTRY_ONLY;
        case 1: return ALLOW_ANY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Mode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Mode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
            public Mode findValueByNumber(int number) {
              return Mode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.OutboundTrafficPolicy.getDescriptor().getEnumTypes().get(0);
    }

    private static final Mode[] VALUES = values();

    public static Mode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Mode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:istio.networking.v1alpha3.OutboundTrafficPolicy.Mode)
  }

  public static final int MODE_FIELD_NUMBER = 1;
  private int mode_;
  /**
   * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
   * @return The enum numeric value on the wire for mode.
   */
  @java.lang.Override public int getModeValue() {
    return mode_;
  }
  /**
   * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
   * @return The mode.
   */
  @java.lang.Override public io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode getMode() {
    @SuppressWarnings("deprecation")
    io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode result = io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode.valueOf(mode_);
    return result == null ? io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode.UNRECOGNIZED : result;
  }

  public static final int EGRESS_PROXY_FIELD_NUMBER = 2;
  private io.ourea.adapter.model.istio.Destination egressProxy_;
  /**
   * <pre>
   * Specifies the details of the egress proxy to which unknown
   * traffic should be forwarded to from the sidecar. Valid only if
   * the mode is set to ALLOW_ANY. If not specified when the mode is
   * ALLOW_ANY, the sidecar will send the unknown traffic directly to
   * the IP requested by the application.
   * ** NOTE 1**: The specified egress host must be imported in the
   * egress section for the traffic forwarding to work.
   * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
   * to handle plain text TCP connections forwarded from the sidecar.
   * Envoy's dynamic forward proxy can handle only HTTP and TLS
   * connections.
   * $hide_from_docs
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
   * @return Whether the egressProxy field is set.
   */
  @java.lang.Override
  public boolean hasEgressProxy() {
    return egressProxy_ != null;
  }
  /**
   * <pre>
   * Specifies the details of the egress proxy to which unknown
   * traffic should be forwarded to from the sidecar. Valid only if
   * the mode is set to ALLOW_ANY. If not specified when the mode is
   * ALLOW_ANY, the sidecar will send the unknown traffic directly to
   * the IP requested by the application.
   * ** NOTE 1**: The specified egress host must be imported in the
   * egress section for the traffic forwarding to work.
   * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
   * to handle plain text TCP connections forwarded from the sidecar.
   * Envoy's dynamic forward proxy can handle only HTTP and TLS
   * connections.
   * $hide_from_docs
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
   * @return The egressProxy.
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.Destination getEgressProxy() {
    return egressProxy_ == null ? io.ourea.adapter.model.istio.Destination.getDefaultInstance() : egressProxy_;
  }
  /**
   * <pre>
   * Specifies the details of the egress proxy to which unknown
   * traffic should be forwarded to from the sidecar. Valid only if
   * the mode is set to ALLOW_ANY. If not specified when the mode is
   * ALLOW_ANY, the sidecar will send the unknown traffic directly to
   * the IP requested by the application.
   * ** NOTE 1**: The specified egress host must be imported in the
   * egress section for the traffic forwarding to work.
   * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
   * to handle plain text TCP connections forwarded from the sidecar.
   * Envoy's dynamic forward proxy can handle only HTTP and TLS
   * connections.
   * $hide_from_docs
   * </pre>
   *
   * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
   */
  @java.lang.Override
  public io.ourea.adapter.model.istio.DestinationOrBuilder getEgressProxyOrBuilder() {
    return getEgressProxy();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (mode_ != io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode.REGISTRY_ONLY.getNumber()) {
      output.writeEnum(1, mode_);
    }
    if (egressProxy_ != null) {
      output.writeMessage(2, getEgressProxy());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (mode_ != io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode.REGISTRY_ONLY.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, mode_);
    }
    if (egressProxy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getEgressProxy());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.ourea.adapter.model.istio.OutboundTrafficPolicy)) {
      return super.equals(obj);
    }
    io.ourea.adapter.model.istio.OutboundTrafficPolicy other = (io.ourea.adapter.model.istio.OutboundTrafficPolicy) obj;

    if (mode_ != other.mode_) return false;
    if (hasEgressProxy() != other.hasEgressProxy()) return false;
    if (hasEgressProxy()) {
      if (!getEgressProxy()
          .equals(other.getEgressProxy())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MODE_FIELD_NUMBER;
    hash = (53 * hash) + mode_;
    if (hasEgressProxy()) {
      hash = (37 * hash) + EGRESS_PROXY_FIELD_NUMBER;
      hash = (53 * hash) + getEgressProxy().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.ourea.adapter.model.istio.OutboundTrafficPolicy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * `OutboundTrafficPolicy` sets the default behavior of the sidecar for
   * handling outbound traffic from the application.
   * If your application uses one or more external
   * services that are not known apriori, setting the policy to `ALLOW_ANY`
   * will cause the sidecars to route any unknown traffic originating from
   * the application to its requested destination.  Users are strongly
   * encouraged to use `ServiceEntry` configurations to explicitly declare any external
   * dependencies, instead of using `ALLOW_ANY`, so that traffic to these
   * services can be monitored.
   * </pre>
   *
   * Protobuf type {@code istio.networking.v1alpha3.OutboundTrafficPolicy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:istio.networking.v1alpha3.OutboundTrafficPolicy)
      io.ourea.adapter.model.istio.OutboundTrafficPolicyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.ourea.adapter.model.istio.OutboundTrafficPolicy.class, io.ourea.adapter.model.istio.OutboundTrafficPolicy.Builder.class);
    }

    // Construct using io.ourea.adapter.model.istio.OutboundTrafficPolicy.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      mode_ = 0;

      if (egressProxyBuilder_ == null) {
        egressProxy_ = null;
      } else {
        egressProxy_ = null;
        egressProxyBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.ourea.adapter.model.istio.SidecarOuterClass.internal_static_istio_networking_v1alpha3_OutboundTrafficPolicy_descriptor;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.OutboundTrafficPolicy getDefaultInstanceForType() {
      return io.ourea.adapter.model.istio.OutboundTrafficPolicy.getDefaultInstance();
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.OutboundTrafficPolicy build() {
      io.ourea.adapter.model.istio.OutboundTrafficPolicy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.ourea.adapter.model.istio.OutboundTrafficPolicy buildPartial() {
      io.ourea.adapter.model.istio.OutboundTrafficPolicy result = new io.ourea.adapter.model.istio.OutboundTrafficPolicy(this);
      result.mode_ = mode_;
      if (egressProxyBuilder_ == null) {
        result.egressProxy_ = egressProxy_;
      } else {
        result.egressProxy_ = egressProxyBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.ourea.adapter.model.istio.OutboundTrafficPolicy) {
        return mergeFrom((io.ourea.adapter.model.istio.OutboundTrafficPolicy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.ourea.adapter.model.istio.OutboundTrafficPolicy other) {
      if (other == io.ourea.adapter.model.istio.OutboundTrafficPolicy.getDefaultInstance()) return this;
      if (other.mode_ != 0) {
        setModeValue(other.getModeValue());
      }
      if (other.hasEgressProxy()) {
        mergeEgressProxy(other.getEgressProxy());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.ourea.adapter.model.istio.OutboundTrafficPolicy parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.ourea.adapter.model.istio.OutboundTrafficPolicy) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int mode_ = 0;
    /**
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override public int getModeValue() {
      return mode_;
    }
    /**
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
     * @param value The enum numeric value on the wire for mode to set.
     * @return This builder for chaining.
     */
    public Builder setModeValue(int value) {
      
      mode_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
     * @return The mode.
     */
    @java.lang.Override
    public io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode getMode() {
      @SuppressWarnings("deprecation")
      io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode result = io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode.valueOf(mode_);
      return result == null ? io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode.UNRECOGNIZED : result;
    }
    /**
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
     * @param value The mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(io.ourea.adapter.model.istio.OutboundTrafficPolicy.Mode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.istio.networking.v1alpha3.OutboundTrafficPolicy.Mode mode = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMode() {
      
      mode_ = 0;
      onChanged();
      return this;
    }

    private io.ourea.adapter.model.istio.Destination egressProxy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.Destination, io.ourea.adapter.model.istio.Destination.Builder, io.ourea.adapter.model.istio.DestinationOrBuilder> egressProxyBuilder_;
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     * @return Whether the egressProxy field is set.
     */
    public boolean hasEgressProxy() {
      return egressProxyBuilder_ != null || egressProxy_ != null;
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     * @return The egressProxy.
     */
    public io.ourea.adapter.model.istio.Destination getEgressProxy() {
      if (egressProxyBuilder_ == null) {
        return egressProxy_ == null ? io.ourea.adapter.model.istio.Destination.getDefaultInstance() : egressProxy_;
      } else {
        return egressProxyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     */
    public Builder setEgressProxy(io.ourea.adapter.model.istio.Destination value) {
      if (egressProxyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        egressProxy_ = value;
        onChanged();
      } else {
        egressProxyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     */
    public Builder setEgressProxy(
        io.ourea.adapter.model.istio.Destination.Builder builderForValue) {
      if (egressProxyBuilder_ == null) {
        egressProxy_ = builderForValue.build();
        onChanged();
      } else {
        egressProxyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     */
    public Builder mergeEgressProxy(io.ourea.adapter.model.istio.Destination value) {
      if (egressProxyBuilder_ == null) {
        if (egressProxy_ != null) {
          egressProxy_ =
            io.ourea.adapter.model.istio.Destination.newBuilder(egressProxy_).mergeFrom(value).buildPartial();
        } else {
          egressProxy_ = value;
        }
        onChanged();
      } else {
        egressProxyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     */
    public Builder clearEgressProxy() {
      if (egressProxyBuilder_ == null) {
        egressProxy_ = null;
        onChanged();
      } else {
        egressProxy_ = null;
        egressProxyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     */
    public io.ourea.adapter.model.istio.Destination.Builder getEgressProxyBuilder() {
      
      onChanged();
      return getEgressProxyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     */
    public io.ourea.adapter.model.istio.DestinationOrBuilder getEgressProxyOrBuilder() {
      if (egressProxyBuilder_ != null) {
        return egressProxyBuilder_.getMessageOrBuilder();
      } else {
        return egressProxy_ == null ?
            io.ourea.adapter.model.istio.Destination.getDefaultInstance() : egressProxy_;
      }
    }
    /**
     * <pre>
     * Specifies the details of the egress proxy to which unknown
     * traffic should be forwarded to from the sidecar. Valid only if
     * the mode is set to ALLOW_ANY. If not specified when the mode is
     * ALLOW_ANY, the sidecar will send the unknown traffic directly to
     * the IP requested by the application.
     * ** NOTE 1**: The specified egress host must be imported in the
     * egress section for the traffic forwarding to work.
     * ** NOTE 2**: An Envoy based egress gateway is unlikely to be able
     * to handle plain text TCP connections forwarded from the sidecar.
     * Envoy's dynamic forward proxy can handle only HTTP and TLS
     * connections.
     * $hide_from_docs
     * </pre>
     *
     * <code>.istio.networking.v1alpha3.Destination egress_proxy = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.ourea.adapter.model.istio.Destination, io.ourea.adapter.model.istio.Destination.Builder, io.ourea.adapter.model.istio.DestinationOrBuilder> 
        getEgressProxyFieldBuilder() {
      if (egressProxyBuilder_ == null) {
        egressProxyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.ourea.adapter.model.istio.Destination, io.ourea.adapter.model.istio.Destination.Builder, io.ourea.adapter.model.istio.DestinationOrBuilder>(
                getEgressProxy(),
                getParentForChildren(),
                isClean());
        egressProxy_ = null;
      }
      return egressProxyBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:istio.networking.v1alpha3.OutboundTrafficPolicy)
  }

  // @@protoc_insertion_point(class_scope:istio.networking.v1alpha3.OutboundTrafficPolicy)
  private static final io.ourea.adapter.model.istio.OutboundTrafficPolicy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.ourea.adapter.model.istio.OutboundTrafficPolicy();
  }

  public static io.ourea.adapter.model.istio.OutboundTrafficPolicy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OutboundTrafficPolicy>
      PARSER = new com.google.protobuf.AbstractParser<OutboundTrafficPolicy>() {
    @java.lang.Override
    public OutboundTrafficPolicy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OutboundTrafficPolicy(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OutboundTrafficPolicy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OutboundTrafficPolicy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.ourea.adapter.model.istio.OutboundTrafficPolicy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

